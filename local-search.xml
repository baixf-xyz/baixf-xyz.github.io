<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Class 7 参营总结与感想</title>
    <link href="/2020/12/03/%E9%98%BF%E9%87%8C%E4%BA%91/Class%207%20ECS%207%E5%A4%A9%E5%AE%9E%E8%B7%B5%E8%AE%AD%E7%BB%83%E8%90%A5%E5%8F%82%E8%90%A5%E6%80%BB%E7%BB%93%E4%B8%8E%E6%84%9F%E6%83%B3/"/>
    <url>/2020/12/03/%E9%98%BF%E9%87%8C%E4%BA%91/Class%207%20ECS%207%E5%A4%A9%E5%AE%9E%E8%B7%B5%E8%AE%AD%E7%BB%83%E8%90%A5%E5%8F%82%E8%90%A5%E6%80%BB%E7%BB%93%E4%B8%8E%E6%84%9F%E6%83%B3/</url>
    
    <content type="html"><![CDATA[<h1 id="证书"><a href="#证书" class="headerlink" title="证书"></a>证书</h1><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127203249.png" alt=""></p><h1 id="一、课程知识点概览"><a href="#一、课程知识点概览" class="headerlink" title="一、课程知识点概览"></a>一、课程知识点概览</h1><p><a href="https://blog.baixf.tk/2020/11/27/%E9%98%BF%E9%87%8C%E4%BA%91/Class%201%20%E5%9F%BA%E4%BA%8EECS%E6%90%AD%E5%BB%BAFTP%E6%9C%8D%E5%8A%A1/">Class 1 基于ECS搭建FTP服务</a></p><p><a href="https://blog.baixf.tk/2020/11/28/%E9%98%BF%E9%87%8C%E4%BA%91/Class%202%20%E5%9F%BA%E4%BA%8EECS%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BADocker%E7%8E%AF%E5%A2%83/">Class 2 快速搭建Docker环境</a></p><p><a href="https://blog.baixf.tk/2020/11/29/%E9%98%BF%E9%87%8C%E4%BA%91/Class%203%20SLB%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%AE%9E%E8%B7%B5/">Class 3 ECS+SLB 负载均衡实践</a></p><p><a href="https://blog.baixf.tk/2020/11/30/%E9%98%BF%E9%87%8C%E4%BA%91/Class%204%20%E4%BD%BF%E7%94%A8PolarDB%E5%92%8CECS%E6%90%AD%E5%BB%BA%E9%97%A8%E6%88%B7%E7%BD%91%E7%AB%99/">Class 4 使用ECS和PolarDB搭建门户网站</a></p><p><a href="https://blog.baixf.tk/2020/12/01/%E9%98%BF%E9%87%8C%E4%BA%91/Class%205%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BALeanote%E4%BA%91%E7%AC%94%E8%AE%B0%E6%9C%AC/">Class 5 搭建个人Leanote云笔记本</a></p><p><a href="https://blog.baixf.tk/2020/12/02/%E9%98%BF%E9%87%8C%E4%BA%91/Class%206%20%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E2%80%9C%E9%92%89%E9%92%89%E2%80%9D/">Class 6 案例分享——钉钉</a></p><p><a href="https://blog.baixf.tk/2020/12/03/%E9%98%BF%E9%87%8C%E4%BA%91/Class%207%E5%8F%82%E8%90%A5%E6%80%BB%E7%BB%93%E4%B8%8E%E6%84%9F%E6%83%B3%20/">Class 7 参营总结与感想</a></p><h1 id="二、参营感想"><a href="#二、参营感想" class="headerlink" title="二、参营感想"></a>二、参营感想</h1><p>　　七天转瞬即逝，有不小的收获。“7天，每天30分钟，云计算技能全方位提升，为升学就业加分！但是我们不能只是一味的粘贴复制。不仅要知其然，更要知其所以然。每一个命令，我都会反复查阅，查阅其其他参数的用途，不断丰富自己的linux水平与视野。<br>　　关于笔记，自己在整理上传到开发者社区的同时，也上传到了自己的博客，顺便“水了”自己的博客内容。感觉十分有成就感。<br>　　总而言之，这次7天训练营过的还挺有意义的，收获颇丰，个人比较满意。以后也会多多关注这种活动，在课余可以提升一下自我。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://developer.aliyun.com/adc/student/bootcamp/?spm=a2c6h.13788107.J_3120529270.3.450750a3CaVHui">云上实践 云上成长 ECS 7天实践训练营</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>阿里云</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阿里云</tag>
      
      <tag>在家学习</tag>
      
      <tag>进阶班</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Class 7 参营总结与感想</title>
    <link href="/2020/12/03/%E9%98%BF%E9%87%8C%E4%BA%91/Class%207%20%E8%A7%86%E8%A7%89AI%E8%AE%AD%E7%BB%83%E8%90%A5%E5%8F%82%E8%90%A5%E6%80%BB%E7%BB%93%E4%B8%8E%E6%84%9F%E6%83%B3/"/>
    <url>/2020/12/03/%E9%98%BF%E9%87%8C%E4%BA%91/Class%207%20%E8%A7%86%E8%A7%89AI%E8%AE%AD%E7%BB%83%E8%90%A5%E5%8F%82%E8%90%A5%E6%80%BB%E7%BB%93%E4%B8%8E%E6%84%9F%E6%83%B3/</url>
    
    <content type="html"><![CDATA[<h1 id="证书"><a href="#证书" class="headerlink" title="证书"></a>证书</h1><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127203249.png" alt=""></p><h1 id="一、课程知识点概览"><a href="#一、课程知识点概览" class="headerlink" title="一、课程知识点概览"></a>一、课程知识点概览</h1><p><a href="https://blog.baixf.tk/2020/11/27/%E9%98%BF%E9%87%8C%E4%BA%91/Class%201%20%E8%BE%BE%E6%91%A9%E9%99%A2%E8%A7%86%E8%A7%89AI%E6%8A%80%E6%9C%AF%E5%BA%94%E7%94%A8%E6%8E%A2%E7%B4%A2/">Class 1 达摩院视觉AI技术应用探索</a></p><p><a href="https://blog.baixf.tk/2020/11/28/%E9%98%BF%E9%87%8C%E4%BA%91/Class%202%20%E8%BA%AB%E4%BB%BD%E8%AF%81%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/">Class 2 身份证识别系统搭建</a></p><p><a href="https://blog.baixf.tk/2020/11/29/%E9%98%BF%E9%87%8C%E4%BA%91/Class%203%20%E7%94%B5%E5%AD%90%E7%9B%B8%E5%86%8C%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BA%BA%E8%84%B8%E3%80%81%E8%A1%A8%E6%83%85%E8%AF%86%E5%88%AB%EF%BC%89/">Class 3 电子相册搭建（人脸、表情识别）</a></p><p><a href="https://blog.baixf.tk/2020/11/30/%E9%98%BF%E9%87%8C%E4%BA%91/Class%204%20%E8%BD%A6%E8%BE%86%E4%BF%9D%E9%99%A9%E5%BA%94%E7%94%A8/">Class 4 车辆保险应用</a></p><p><a href="https://blog.baixf.tk/2020/12/01/%E9%98%BF%E9%87%8C%E4%BA%91/Class%205%20%E5%9E%83%E5%9C%BE%E5%88%86%E7%B1%BB%E8%AF%86%E5%88%AB/">Class 5 垃圾分类识别</a></p><p><a href="https://blog.baixf.tk/2020/12/02/%E9%98%BF%E9%87%8C%E4%BA%91/Class%206%20%E5%9B%BE%E7%89%87%E5%86%85%E5%AE%B9%E5%AE%89%E5%85%A8%EF%BC%88%E5%9B%BE%E7%89%87%E9%89%B4%E9%BB%84%EF%BC%89/">Class 6 图片内容安全（图片鉴黄）</a></p><p><a href="https://blog.baixf.tk/2020/12/03/%E9%98%BF%E9%87%8C%E4%BA%91/Class%207%20%E8%A7%86%E8%A7%89AI%E8%AE%AD%E7%BB%83%E8%90%A5%E5%8F%82%E8%90%A5%E6%80%BB%E7%BB%93%E4%B8%8E%E6%84%9F%E6%83%B3/">Class 7 参营总结与感想</a></p><h1 id="二、参营感想"><a href="#二、参营感想" class="headerlink" title="二、参营感想"></a>二、参营感想</h1><p>　　七天转瞬即逝，有不小的收获。“7天，每天30分钟，云计算技能全方位提升，为升学就业加分！但是我们不能只是一味的粘贴复制。不仅要知其然，更要知其所以然。每一个命令，我都会反复查阅，查阅其其他参数的用途，不断丰富自己的水平与视野。<br>　　关于笔记，自己在整理上传到开发者社区的同时，也上传到了自己的博客，顺便“水了”自己的博客内容。感觉十分有成就感。<br>　　总而言之，这次7天训练营过的还挺有意义的，收获颇丰，个人比较满意。以后也会多多关注这种活动，在课余可以提升一下自我。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://developer.aliyun.com/adc/student/bootcamp/?spm=a2c6h.13788107.J_3120529270.3.450750a3CaVHui">云上实践 云上成长 ECS 7天实践训练营</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>阿里云</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阿里云</tag>
      
      <tag>达摩院</tag>
      
      <tag>AI</tag>
      
      <tag>应用</tag>
      
      <tag>视觉</tag>
      
      <tag>oss存储</tag>
      
      <tag>API</tag>
      
      <tag>车辆部件识别</tag>
      
      <tag>车辆损伤识别</tag>
      
      <tag>车险图片分类</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Class 6-案例分析“钉钉”</title>
    <link href="/2020/12/02/%E9%98%BF%E9%87%8C%E4%BA%91/Class%206%20%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E2%80%9C%E9%92%89%E9%92%89%E2%80%9D/"/>
    <url>/2020/12/02/%E9%98%BF%E9%87%8C%E4%BA%91/Class%206%20%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E2%80%9C%E9%92%89%E9%92%89%E2%80%9D/</url>
    
    <content type="html"><![CDATA[<h1 id="总结感受"><a href="#总结感受" class="headerlink" title="总结感受"></a>总结感受</h1><h2 id="钉钉背后的技术架构，与阿里云服务之间的关联"><a href="#钉钉背后的技术架构，与阿里云服务之间的关联" class="headerlink" title="钉钉背后的技术架构，与阿里云服务之间的关联"></a>钉钉背后的技术架构，与阿里云服务之间的关联</h2><p>使用了热门的平台技术SaaS（平台即服务，能够将自己积累起来的各种经验用在自己的企业上，帮助企业解决问题。）<br>很多设计都是面向云去设计，可以随着云的建设更快的部署，使用，这是很大的优势，自适应程度高<br>使用了阿里云ECS，OSS，OTS，OpenSearch技术，很多数据都部署在阿里云上，数据存储在RDS上，数据就与阿里云强相关。阿里云服务对这些数据的可靠性，安全性，可用性，提供了很大保障。</p><h2 id="云计算为钉钉解决的问题或者带来的价值"><a href="#云计算为钉钉解决的问题或者带来的价值" class="headerlink" title="云计算为钉钉解决的问题或者带来的价值"></a>云计算为钉钉解决的问题或者带来的价值</h2><p>钉钉上深受用户喜欢的应用—日志，员工可以通过日志发日报，周报，月报。模板也可以根据用户需求定制化。阿里云再次为钉钉的数据安全，架构的稳定性，以及未来的伸缩性提供保障</p><h2 id="钉钉如何借助阿里云保障企业信息安全"><a href="#钉钉如何借助阿里云保障企业信息安全" class="headerlink" title="钉钉如何借助阿里云保障企业信息安全"></a>钉钉如何借助阿里云保障企业信息安全</h2><ul><li>安全是钉钉的重要设计和保障</li><li>信息的存储和传输，都采用最高的加密程序</li><li>依托阿里云基础设施安全，使企业信息安全更加能得到保障（防黑客攻击，防DDoS），保障服务和网站的平稳运行，让用户省时省心。</li></ul><h2 id="术语查询及解释"><a href="#术语查询及解释" class="headerlink" title="术语查询及解释"></a>术语查询及解释</h2><p> 首先在钉钉案例的视频中，提到了一些名词，如SaaS，OSS，OTS…这些都是什么？我抱着这样的疑问查询了相关资料并进行了记录。只有知道了这些是什么,才能够真正的去理解和把握整个视频的内容。</p><h3 id="什么是SaaS"><a href="#什么是SaaS" class="headerlink" title="什么是SaaS"></a>什么是SaaS</h3><p> SaaS即Software-as-a-Service（软件即服务）是随着互联网技术的发展和应用软件的成熟， 在21世纪开始兴起的一种完全创新的软件应用模式。传统模式下，厂商通过License将软件产品部署到企业内部多个客户终端实现交付。SaaS定义了一种新的交付方式，也使得软件进一步回归服务本质。企业部署信息化软件的本质是为了自身的运营管理服务，软件的表象是一种业务流程的信息化，本质还是第一种服务模式，SaaS改变了传统软件服务的提供方式，减少本地部署所需的大量前期投入，进一步突出信息化软件的服务属性，或成为未来信息化软件市场的主流交付模式。</p><h3 id="什么是OSS"><a href="#什么是OSS" class="headerlink" title="什么是OSS"></a>什么是OSS</h3><p>阿里云对象存储服务，简称 OSS，是一种面向海量数据规模的分布式存储服务，具有稳定、可靠、安全、低成本的特点，能够提供十一个九的数据可靠性。OSS提供与平台无关的RESTful API接口，您可以在互联网任何位置存储和访问。OSS的容量和处理能力弹性扩展，并提供多种存储类型供您选择，全面优化存储成本。</p><h3 id="什么是OTS"><a href="#什么是OTS" class="headerlink" title="什么是OTS"></a>什么是OTS</h3><p> OTS 是Open Table Service的简称，现在已更名为表格存储Table Store，官网对它的解释为：OTS是构建在阿里云飞天分布式系统之上的 NoSQL 数据库服务，提供海量结构化数据的存储和实时访问。OTS 以实例和表的形式组织数据，通过数据分片和负载均衡技术，达到规模的无缝扩展。OTS 向应用程序屏蔽底层硬件平台的故障和错误，能自动从各类错误中快速恢复，提供非常高的服务可用性。OTS 管理的数据全部存储在 SSD 中并具有多个备份，提供了快速的访问性能和极高的数据可靠性。用户在使用 OTS 服务时，只需要按照预留和使用的资源进行付费，无需关心数据库的软硬件升级维护、集群缩容扩容等复杂问题。</p><h3 id="什么是Open-Search"><a href="#什么是Open-Search" class="headerlink" title="什么是Open Search"></a>什么是Open Search</h3><p> 开放搜索（OpenSearch）是阿里巴巴自主研发的大规模分布式搜索引擎平台，其核心引擎HA3（问天3）系统为包括淘宝、天猫在内的阿里集团核心业务提供搜索服务支持。通过集成智能查询语义理解、机器学习排序算法等能力，旨在为企业提供高搜索质量的一站式内容智能搜索服务。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>上云将成为市场主流模式，教育，制造、金融、零售等行业都将会完成传统形式的转变。在这个互联网时代，任何一个行业都离不开与互联网的交互。有了交互，就会产生数据，数据的清洗，分析，存储，可视化。大数据+云将展现它的威力。云上处理，云上分析，云上共享更加迎合互联网快速迭代的理念。未来云服务将会无处不在。视频中多次提到，阿里云是一个云服务的提供商，阿里云可以为开发者提供安全可靠的基础设施，从而能够让我们能够将更多的精力和时间来考虑和打磨我们自己开发的产品和项目，而不用去操心底层的设施问题。也就是能够为我们更高效的开发提供了基础服务。</p><p> 至于钉钉这款软件，我个人是参加这个训练营才用上了钉钉，钉钉有几项我用上的功能感觉还是挺方便的，比如已读功能，可以快速的了解到谁已经看过通知了，谁还没看通知，从而去及时联系以免错过了某项任务。可以共同编辑群文件，做了修改后可以选择通知其他人去查看。自己遇到的一个比较麻烦的问题就是，不添加好友就不能成功发送消息，一旦想主动的联系某个人却又没有添加好友，那么会出现联系不上的情况。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://developer.aliyun.com/adc/student/bootcamp/?spm=a2c6h.13788107.J_3120529270.3.450750a3CaVHui">云上实践 云上成长 ECS 7天实践训练营</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>阿里云</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阿里云</tag>
      
      <tag>在家学习</tag>
      
      <tag>进阶班</tag>
      
      <tag>钉钉</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Class 6 图片内容安全（图片鉴黄）</title>
    <link href="/2020/12/02/%E9%98%BF%E9%87%8C%E4%BA%91/Class%206%20%E5%9B%BE%E7%89%87%E5%86%85%E5%AE%B9%E5%AE%89%E5%85%A8%EF%BC%88%E5%9B%BE%E7%89%87%E9%89%B4%E9%BB%84%EF%BC%89/"/>
    <url>/2020/12/02/%E9%98%BF%E9%87%8C%E4%BA%91/Class%206%20%E5%9B%BE%E7%89%87%E5%86%85%E5%AE%B9%E5%AE%89%E5%85%A8%EF%BC%88%E5%9B%BE%E7%89%87%E9%89%B4%E9%BB%84%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="功能描述"><a href="#功能描述" class="headerlink" title="功能描述"></a>功能描述</h2><p>ScanImage可以检测图片中的违规内容，实时返回检测结果。</p><h2 id="支持检测的场景"><a href="#支持检测的场景" class="headerlink" title="支持检测的场景"></a>支持检测的场景</h2><p>图片智能鉴黄、图片涉恐涉政识别、图片风险人物识别、图片垃圾广告识别、图片不良场景识别、图片logo识别。</p><p>在图片审核中，对应关系如下：</p><ul><li>porn:图片智能鉴黄：适用于图片涉及色情、低俗内容检测。</li></ul><p>normal（正常图片）、sexy（性感图片）、porn（色情图片）</p><ul><li><p>terrorism:图片涉恐涉政识别：适用于图片涉及政治敏感、暴力、武器、恐怖、血腥、爆炸等内容识别。</p></li><li><p>图片风险人物识别：适用于图片涉及敏感政治人物、明星的识别。</p></li></ul><p>normal（正常图片）、bloody（血腥）、explosion（爆炸烟光）、outfit（特殊装束）、logo（特殊标识）、weapon（武器）、politics（涉政）、violence（打斗）、crowd（聚众）、parade（游行）、carcrash（车祸现场）、flag（旗帜）、location（地标）、others（其他）</p><ul><li>ad:图片垃圾广告识别：适用于图片中含有广告信息的识别，特別是针对于类似牛皮癣的文字广告有较好的识别效果。</li></ul><p>normal（正常图片）、politics（文字含涉政内容）、porn（文字含涉黄内容）、abuse（文字含辱骂内容）、terrorism（文字含涉恐内容）、contraband（文字含违禁内容）、spam（文字含其他垃圾内容）、npx（牛皮癣广告）、qrcode（包含二维码）、programCode（包含小程序码）、ad（其他广告）</p><ul><li>live:图片不良场景识别：适用于图片中涉及毒品、赌博、画中画等内容的识别。</li></ul><p>normal（正常图片）、meaningless（无意义图片）、PIP（画中画）、smoking（吸烟）、drivelive（车内直播）</p><ul><li>logo:图片logo识别：适用于图片中含有台标、水印、商标等内容的检测。</li></ul><p>normal（正常图片）、TV（带有管控logo的图片）、trademark（商标）</p><h2 id="输入限制"><a href="#输入限制" class="headerlink" title="输入限制"></a>输入限制</h2><ul><li>图片格式：PNG、JPG、JPEG、BMP、GIF、WEBP。</li><li>图片大小：图片大小不超过10MB。如果您有大图需求， 请提工单申请。</li><li>图片像素：建议大于256×256像素，像素过低可能会影响识别效果。</li><li>URL地址中不能包含中文字符。</li></ul><h2 id="检测说明"><a href="#检测说明" class="headerlink" title="检测说明"></a>检测说明</h2><p>最长检测时间是6秒，如果在该时间范围内没有完成检测，系统会返回超时错误码。<br>图片下载时间限制为3秒，如果下载时间超过3秒，则会返回下载超时。<br>图片检测接口响应时间依赖图片的下载时间。请确保被检测图片所在的存储服务稳定可靠，建议您使用阿里云OSS存储或者CDN缓存。</p><h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python</span><span class="hljs-comment">#coding=utf-8</span><span class="hljs-keyword">from</span> aliyunsdkcore.client <span class="hljs-keyword">import</span> AcsClient<span class="hljs-keyword">from</span> aliyunsdkcore.acs_exception.exceptions <span class="hljs-keyword">import</span> ClientException<span class="hljs-keyword">from</span> aliyunsdkcore.acs_exception.exceptions <span class="hljs-keyword">import</span> ServerException<span class="hljs-keyword">from</span> aliyunsdkimageaudit.request.v20191230.IdentifyPornRequest <span class="hljs-keyword">import</span> IdentifyPornRequestclient = AcsClient(<span class="hljs-string">&#x27;&lt;accessKeyId&gt;&#x27;</span>, <span class="hljs-string">&#x27;&lt;accessSecret&gt;&#x27;</span>, <span class="hljs-string">&#x27;cn-shanghai&#x27;</span>)request = IdentifyPornRequest()request.set_accept_format(<span class="hljs-string">&#x27;json&#x27;</span>)request.set_Scenes([<span class="hljs-string">&quot;porn&quot;</span>])request.set_Tasks([  &#123;    <span class="hljs-string">&quot;ImageURL&quot;</span>: <span class="hljs-string">&quot;http://viapi-test.oss-cn-shanghai.aliyuncs.com/sanjiye-meizi/%E5%9B%BE%E7%89%87%E6%99%BA%E8%83%BD%E9%89%B4%E9%BB%84.jpg&quot;</span>  &#125;])response = client.do_action_with_exception(request)<span class="hljs-comment"># python2:  print(response) </span>print(<span class="hljs-built_in">str</span>(response, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>))</code></pre><h2 id="在线调试"><a href="#在线调试" class="headerlink" title="在线调试"></a>在线调试</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-30/1606731135088-QQ%E6%88%AA%E5%9B%BE20201130181139.png" alt=""></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-30/1606731135084-QQ%E6%88%AA%E5%9B%BE20201130181117.png" alt=""></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-30/1606731135096-QQ%E6%88%AA%E5%9B%BE20201130181157.png" alt=""></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://developer.aliyun.com/adc/student/bootcamp/ai/2?spm=a2c6h.13788107.J_3120529270.4.450750a3fjp2m1&amp;accounttraceid=9cafb5972ade4cb484e00857d47625bbdkwh">达摩院特别版-视觉AI训练营</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>阿里云</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阿里云</tag>
      
      <tag>达摩院</tag>
      
      <tag>AI</tag>
      
      <tag>应用</tag>
      
      <tag>视觉</tag>
      
      <tag>oss存储</tag>
      
      <tag>图片安全内容</tag>
      
      <tag>图片识别</tag>
      
      <tag>图片鉴黄</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Class 5 搭建个人Leanote云笔记本</title>
    <link href="/2020/12/01/%E9%98%BF%E9%87%8C%E4%BA%91/Class%205%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BALeanote%E4%BA%91%E7%AC%94%E8%AE%B0%E6%9C%AC/"/>
    <url>/2020/12/01/%E9%98%BF%E9%87%8C%E4%BA%91/Class%205%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BALeanote%E4%BA%91%E7%AC%94%E8%AE%B0%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h1 id="一、创建资源"><a href="#一、创建资源" class="headerlink" title="一、创建资源"></a>一、创建资源</h1><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127193126.png" alt=""></p><h1 id="二、连接ECS服务器"><a href="#二、连接ECS服务器" class="headerlink" title="二、连接ECS服务器"></a>二、连接ECS服务器</h1><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127193316.png" alt=""><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127193348.png" alt=""></p><h1 id="三、MongoDB简介"><a href="#三、MongoDB简介" class="headerlink" title="三、MongoDB简介"></a>三、MongoDB简介</h1><p>MongoDB（来自于英文单词“Humongous”，中文含义为“庞大”）是可以应用于各种规模的企业、各个行业以及各类应用程序的开源数据库。作为一个适用于敏捷开发的数据库，MongoDB的数据模式可以随着应用程序的发展而灵活地更新。与此同时，它也为开发人员 提供了传统数据库的功能：二级索引，完整的查询系统以及严格一致性等等。 MongoDB能够使企业更加具有敏捷性和可扩展性，各种规模的企业都可以通过使用MongoDB来创建新的应用，提高与客户之间的工作效率，加快产品上市时间，以及降低企业成本。</p><p>MongoDB是专为可扩展性，高性能和高可用性而设计的数据库。它可以从单服务器部署扩展到大型、复杂的多数据中心架构。利用内存计算的优势，MongoDB能够提供高性能的数据读写操作。 MongoDB的本地复制和自动故障转移功能使您的应用程序具有企业级的可靠性和操作灵活性。</p><h1 id="四、安装MongoDB"><a href="#四、安装MongoDB" class="headerlink" title="四、安装MongoDB"></a>四、安装MongoDB</h1><p>Leanote云笔记使用MongoDB作为后端数据库，安装MongoDB数据库。</p><h2 id="1-执行以下命令，安装MongoDB。"><a href="#1-执行以下命令，安装MongoDB。" class="headerlink" title="1.  执行以下命令，安装MongoDB。"></a>1.  执行以下命令，安装MongoDB。</h2><pre><code class="hljs shell">yum -y install mongodb mongodb-server.x86_64 mariadb-devel.i686</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127193711.png" alt=""></p><h2 id="2-执行以下命令，启动MongoDB服务。"><a href="#2-执行以下命令，启动MongoDB服务。" class="headerlink" title="2.  执行以下命令，启动MongoDB服务。"></a>2.  执行以下命令，启动MongoDB服务。</h2><pre><code class="hljs shell">systemctl start mongod</code></pre><p>启动遇到如图所示问题：<br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127194402.png" alt=""></p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><pre><code class="hljs markdown">1.配置MongoDB的yum源复制代码复制代码vim /etc/yum.repos.d/mongodb-org-3.4.repo<span class="hljs-section">#添加以下内容：</span>[mongodb-org-3.4]  name=MongoDB Repository  baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86<span class="hljs-emphasis">_64/  </span><span class="hljs-emphasis">gpgcheck=1  </span><span class="hljs-emphasis">enabled=1  </span><span class="hljs-emphasis">gpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc</span><span class="hljs-emphasis">#这里可以修改 gpgcheck=0, 省去gpg验证</span><span class="hljs-emphasis">[root@localhost ~]# yum makecache      </span><span class="hljs-emphasis">复制代码</span><span class="hljs-emphasis">复制代码</span><span class="hljs-emphasis">2.安装MongoDB</span><span class="hljs-emphasis">安装命令：</span><span class="hljs-emphasis">yum -y install mongodb-org</span></code></pre><p>如图所示，启动成功，如下图所示：<br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127194610.png" alt=""></p><h2 id="3-查看MongoDB运行状态。"><a href="#3-查看MongoDB运行状态。" class="headerlink" title="3.  查看MongoDB运行状态。"></a>3.  查看MongoDB运行状态。</h2><pre><code class="hljs shell">systemctl status mongod</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127194657.png" alt=""></p><h1 id="五、安装Leanote"><a href="#五、安装Leanote" class="headerlink" title="五、安装Leanote"></a>五、安装Leanote</h1><h2 id="1-下载Leanote二进制安装包。"><a href="#1-下载Leanote二进制安装包。" class="headerlink" title="1.  下载Leanote二进制安装包。"></a>1.  下载Leanote二进制安装包。</h2><pre><code class="hljs shell">wget https://nchc.dl.sourceforge.net/project/leanote-bin/2.6.1/leanote-linux-amd64-v2.6.1.bin.tar.gz</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127195301.png" alt=""></p><h2 id="2-解压安装包。"><a href="#2-解压安装包。" class="headerlink" title="2.  解压安装包。"></a>2.  解压安装包。</h2><pre><code class="hljs shell">tar -zxvf leanote-linux-amd64-v2.6.1.bin.tar.gz</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127195302.png" alt=""></p><h2 id="3-编辑文件leanote-conf-app-conf，在文件中找到app-secret项，将该项的值改为任意字符串。（如不修改将会有安全风险）。"><a href="#3-编辑文件leanote-conf-app-conf，在文件中找到app-secret项，将该项的值改为任意字符串。（如不修改将会有安全风险）。" class="headerlink" title="3.  编辑文件leanote/conf/app.conf，在文件中找到app.secret项，将该项的值改为任意字符串。（如不修改将会有安全风险）。"></a>3.  编辑文件leanote/conf/app.conf，在文件中找到app.secret项，将该项的值改为任意字符串。（如不修改将会有安全风险）。</h2><p>说明： 根据Leanote官方文档，如不修改app.secret项的值，将会有安全隐患。</p><pre><code class="hljs shell">vim leanote/conf/app.conf</code></pre><p>输入:/app.secret=并按下回车查找app.secret位置。修改该项的值为任意字符串。</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127195303.png" alt=""></p><h2 id="4-初始化数据库。"><a href="#4-初始化数据库。" class="headerlink" title="4.  初始化数据库。"></a>4.  初始化数据库。</h2><pre><code class="hljs shell">mongorestore -h localhost -d leanote --dir /root/leanote/mongodb_backup/leanote_install_data/</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127195408.png" alt=""></p><h2 id="5-启动服务。"><a href="#5-启动服务。" class="headerlink" title="5.  启动服务。"></a>5.  启动服务。</h2><pre><code class="hljs shell">nohup bash /root/leanote/bin/run.sh &gt; /root/leanote/run.log 2&gt;&amp;1 &amp;</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127195436.png" alt=""></p><h2 id="6-访问云笔记。"><a href="#6-访问云笔记。" class="headerlink" title="6.  访问云笔记。"></a>6.  访问云笔记。</h2><p>在浏览器中访问<a href="http://101.132.44.137:9000">http://101.132.44.137:9000</a></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127195528.png" alt=""></p><p>默认管理用户为admin，密码为abc123。登录成功后如下图所示。</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127195635.png" alt=""></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://developer.aliyun.com/adc/student/bootcamp/?spm=a2c6h.13788107.J_3120529270.3.450750a3CaVHui">云上实践 云上成长 ECS 7天实践训练营</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>阿里云</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阿里云</tag>
      
      <tag>在家学习</tag>
      
      <tag>进阶班</tag>
      
      <tag>云笔记本</tag>
      
      <tag>Leanote，网站搭建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Class 5 垃圾分类识别</title>
    <link href="/2020/12/01/%E9%98%BF%E9%87%8C%E4%BA%91/Class%205%20%E5%9E%83%E5%9C%BE%E5%88%86%E7%B1%BB%E8%AF%86%E5%88%AB/"/>
    <url>/2020/12/01/%E9%98%BF%E9%87%8C%E4%BA%91/Class%205%20%E5%9E%83%E5%9C%BE%E5%88%86%E7%B1%BB%E8%AF%86%E5%88%AB/</url>
    
    <content type="html"><![CDATA[<h2 id="功能描述"><a href="#功能描述" class="headerlink" title="功能描述"></a>功能描述</h2><p>ClassifyingRubbish可以对图片中的物品垃圾进行分类，并给出具体的物品名称。</p><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><p>请确保您已开通图像识别服务，若未开通服务请立即开通。</p><p>图片限制</p><ul><li>图片类型：JPEG、JPG、PNG。</li><li>图片大小：图片小于等于3M。</li><li>图片分辨率：不限制图片分辨率，但图片分辨率太高可能会导致API识别超时，超时时间为5秒。<br>URL地址中不能包含中文字符。</li></ul><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><p>在OpenAPI Explorer中直接运行该接口。</p><h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python</span><span class="hljs-comment">#coding=utf-8</span><span class="hljs-keyword">from</span> aliyunsdkcore.client <span class="hljs-keyword">import</span> AcsClient<span class="hljs-keyword">from</span> aliyunsdkcore.acs_exception.exceptions <span class="hljs-keyword">import</span> ClientException<span class="hljs-keyword">from</span> aliyunsdkcore.acs_exception.exceptions <span class="hljs-keyword">import</span> ServerException<span class="hljs-keyword">from</span> aliyunsdkimagerecog.request.v20190930.ClassifyingRubbishRequest <span class="hljs-keyword">import</span> ClassifyingRubbishRequestclient = AcsClient(<span class="hljs-string">&#x27;&lt;accessKeyId&gt;&#x27;</span>, <span class="hljs-string">&#x27;&lt;accessSecret&gt;&#x27;</span>, <span class="hljs-string">&#x27;cn-shanghai&#x27;</span>)request = ClassifyingRubbishRequest()request.set_accept_format(<span class="hljs-string">&#x27;json&#x27;</span>)request.set_ImageURL(<span class="hljs-string">&quot;http://viapi-test.oss-cn-shanghai.aliyuncs.com/demo-center/imagerecog/ClassifyingRubbish2.jpg&quot;</span>)response = client.do_action_with_exception(request)<span class="hljs-comment"># python2:  print(response) </span>print(<span class="hljs-built_in">str</span>(response, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>))</code></pre><h2 id="请求参数"><a href="#请求参数" class="headerlink" title="请求参数"></a>请求参数</h2><p>ImageURL    String    图片URL地址</p><h2 id="常见垃圾输出列举值如下："><a href="#常见垃圾输出列举值如下：" class="headerlink" title="常见垃圾输出列举值如下："></a>常见垃圾输出列举值如下：</h2><p>1.可回收物</p><p>废纸张：纸板箱、报纸、废弃书本、快递纸袋、打印纸、信封、广告单、纸塑铝复合包装（利乐包）。</p><p>废塑料：食品与日用品塑料瓶罐及瓶盖（饮料瓶、奶瓶、洗发水瓶、乳液罐）、食用油桶、塑料碗（盆）、塑料盒子（食品保鲜盒、收纳盒）、塑料玩具（塑料积木、塑料模型）、塑料衣架、施工安全帽、PE塑料、pvc、亚克力板、塑料卡片、密胺餐具、kt板、泡沫（泡沫塑料、水果网套）。</p><p>废玻璃制品：食品及日用品玻璃瓶罐（调料瓶、酒瓶、化妆品瓶）、玻璃杯、窗玻璃、玻璃制品（放大镜、玻璃摆件）、碎玻璃。</p><p>废金属：金属瓶罐（易拉罐、食品罐/桶）、金属厨具（菜刀、锅）、金属工具（刀片、指甲剪、螺丝刀）、金属制品（铁钉、铁皮、铝箔）。</p><p>废织物：旧衣服、床单、枕头、棉被、皮鞋、毛绒玩具（布偶）、棉袄、包、皮带、丝绸制品。</p><p>其它：电路板（主板、内存条）、充电宝、电线、插头、木制品（积木、砧板）。</p><p>2.有害垃圾</p><p>废镍镉电池和废氧化汞电池：充电电池、镉镍电池、铅酸电池、蓄电池、纽扣电池。</p><p>废荧光灯管：荧光（日光）灯管、卤素灯。</p><p>废药品及其包装物：过期药物、药物胶囊、药片、药品内包装。</p><p>废油漆和溶剂及其包装物：废油漆桶、染发剂壳、过期的指甲油、洗甲水。</p><p>废矿物油及其包装物。</p><p>废含汞温度计、废含汞血压计：水银血压计、水银体温计、水银温度计。</p><p>废杀虫剂及其包装：老鼠药（毒鼠强）、杀虫喷雾罐。</p><p>废胶片及废相纸：x光片等感光胶片、相片底片。</p><p>3.厨余垃圾（湿垃圾）</p><p>食材废料：谷物及其加工食品（米、米饭、面、面包、豆类）、肉蛋及其加工食品（鸡、鸭、猪、牛、羊肉、蛋、动物内脏、腊肉、午餐肉、蛋壳）、水产及其加工食品（鱼、鱼鳞、虾、虾壳、鱿鱼）、蔬菜（绿叶菜、根茎蔬菜、菌菇）、调料、酱料。</p><p>剩菜剩饭：火锅汤底（沥干后的固体废弃物）、鱼骨、碎骨、茶叶渣、咖啡渣。</p><p>过期食品：糕饼、糖果、风干食品（肉干、红枣、中药材）、粉末类食品（冲泡饮料、面粉）、宠物饲料。</p><p>瓜皮果核：水果果肉（椰子肉）、水果果皮（西瓜皮、桔子皮、苹果皮）、水果茎枝（葡萄枝）、果实（西瓜籽）。</p><p>花卉植物：家养绿植、花卉、花瓣、枝叶。</p><p>中药药渣。</p><p>4.其他垃圾（干垃圾）</p><p>餐巾纸、卫生间用纸、尿不湿、猫砂、狗尿垫、污损纸张、烟蒂、干燥剂、污损塑料、尼龙制品、编织袋、防碎气泡膜、大骨头、硬贝壳、硬果壳（椰子壳、榴莲壳、核桃壳、玉米衣、甘蔗皮）、硬果实（榴莲核、菠萝蜜核）、毛发、灰土、炉渣、橡皮泥、太空沙、带胶制品（胶水、胶带）、花盆、毛巾、一次性餐具、镜子、陶瓷制品、竹制品（竹篮、竹筷、牙签）、成分复杂的制品（伞、笔、眼镜、打火机）。</p><h2 id="在线调试实例"><a href="#在线调试实例" class="headerlink" title="在线调试实例"></a>在线调试实例</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-30/1606728735335-%E6%8D%95%E8%8E%B7.PNG" alt=""></p><p>至于下面这个药品。这个嘛？算法看来还待优化~</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-30/1606728735342-%E6%8D%95%E8%8E%B700.PNG" alt=""></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://developer.aliyun.com/adc/student/bootcamp/ai/2?spm=a2c6h.13788107.J_3120529270.4.450750a3fjp2m1&amp;accounttraceid=9cafb5972ade4cb484e00857d47625bbdkwh">达摩院特别版-视觉AI训练营</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>阿里云</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阿里云</tag>
      
      <tag>达摩院</tag>
      
      <tag>AI</tag>
      
      <tag>应用</tag>
      
      <tag>视觉</tag>
      
      <tag>oss存储</tag>
      
      <tag>垃圾分类</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Class 4 使用PolarDB和ECS搭建门户网站</title>
    <link href="/2020/11/30/%E9%98%BF%E9%87%8C%E4%BA%91/Class%204%20%E4%BD%BF%E7%94%A8PolarDB%E5%92%8CECS%E6%90%AD%E5%BB%BA%E9%97%A8%E6%88%B7%E7%BD%91%E7%AB%99/"/>
    <url>/2020/11/30/%E9%98%BF%E9%87%8C%E4%BA%91/Class%204%20%E4%BD%BF%E7%94%A8PolarDB%E5%92%8CECS%E6%90%AD%E5%BB%BA%E9%97%A8%E6%88%B7%E7%BD%91%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<h1 id="一、创建资源"><a href="#一、创建资源" class="headerlink" title="一、创建资源"></a>一、创建资源</h1><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127173814.png" alt=""></p><h1 id="二、创建PolarDB数据库账号"><a href="#二、创建PolarDB数据库账号" class="headerlink" title="二、创建PolarDB数据库账号"></a>二、创建PolarDB数据库账号</h1><p>1.一键复制登录url。<br>2.依次单击 产品与服务 &gt; 云数据库PolarDB ，进入 云数据库PolarDB管理控制台 。<br>3.单击左侧 集群列表 ，然后选择云产品资源提供的地域。<br>4.创建数据库账号。</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127175709.png" alt=""></p><p>5.创建数据库。</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127175828.png" alt=""></p><p>6.设置数据库白名单。<br>在白名单界面将默认的白名单地址127.0.0.1更改为 0.0.0.0/0，然后点击 [确定] 使白名单地址生效。<br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127180018.png" alt=""></p><h1 id="三、连接ECS服务器"><a href="#三、连接ECS服务器" class="headerlink" title="三、连接ECS服务器"></a>三、连接ECS服务器</h1><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127180305.png" alt=""></p><h1 id="四、安装LAMP环境"><a href="#四、安装LAMP环境" class="headerlink" title="四、安装LAMP环境"></a>四、安装LAMP环境</h1><p>LAMP是指运行在Linux下的Apache、MySQL和PHP的环境。</p><h2 id="1-安装Apache服务及其扩展包。"><a href="#1-安装Apache服务及其扩展包。" class="headerlink" title="1.安装Apache服务及其扩展包。"></a>1.安装Apache服务及其扩展包。</h2><pre><code class="hljs shell">yum -y install httpd httpd-manual mod_ssl mod_perl mod_auth_mysql</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127180804.png" alt=""></p><h2 id="2-PbootCMS是使用PHP语言开发的CMS系统。"><a href="#2-PbootCMS是使用PHP语言开发的CMS系统。" class="headerlink" title="2. PbootCMS是使用PHP语言开发的CMS系统。"></a>2. PbootCMS是使用PHP语言开发的CMS系统。</h2><p>执行以下命令，安装PHP。</p><pre><code class="hljs shell">yum -y install php php-mysql gd php-gd gd-devel php-xml php-common php-mbstring php-ldap php-pear php-xmlrpc php-imap</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127180904.png" alt=""></p><h2 id="3-执行以下命令下载并安装MySQL。"><a href="#3-执行以下命令下载并安装MySQL。" class="headerlink" title="3.执行以下命令下载并安装MySQL。"></a>3.执行以下命令下载并安装MySQL。</h2><pre><code class="hljs shell">wget http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpmyum -y install mysql57-community-release-el7-10.noarch.rpmyum -y install mysql-community-server</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127181158.png" alt=""></p><h2 id="4-执行以下命令启动MySQL数据库。"><a href="#4-执行以下命令启动MySQL数据库。" class="headerlink" title="4. 执行以下命令启动MySQL数据库。"></a>4. 执行以下命令启动MySQL数据库。</h2><pre><code class="hljs shell">systemctl start mysqld</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127181237.png" alt=""></p><h1 id="五、搭建门户网站"><a href="#五、搭建门户网站" class="headerlink" title="五、搭建门户网站"></a>五、搭建门户网站</h1><h2 id="1-安装Git。"><a href="#1-安装Git。" class="headerlink" title="1.安装Git。"></a>1.安装Git。</h2><pre><code class="hljs shell">yum -y install git</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127182251.png" alt=""></p><h2 id="2-下载PbootCMS源码文件。"><a href="#2-下载PbootCMS源码文件。" class="headerlink" title="2.下载PbootCMS源码文件。"></a>2.下载PbootCMS源码文件。</h2><pre><code class="hljs shell">cd ~ &amp;&amp; git clone https://gitee.com/hnaoyun/PbootCMS.git</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127182405.png" alt=""></p><h2 id="3-将安装包拷贝到Apache的wwwroot目录下。"><a href="#3-将安装包拷贝到Apache的wwwroot目录下。" class="headerlink" title="3.将安装包拷贝到Apache的wwwroot目录下。"></a>3.将安装包拷贝到Apache的wwwroot目录下。</h2><pre><code class="hljs shell">cp -r PbootCMS/* /var/www/html/</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127182439.png" alt=""></p><h2 id="4-执行以下命令修改站点根目录文件权限。"><a href="#4-执行以下命令修改站点根目录文件权限。" class="headerlink" title="4.  执行以下命令修改站点根目录文件权限。"></a>4.  执行以下命令修改站点根目录文件权限。</h2><pre><code class="hljs shell">chmod -R a+w /var/www/html</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127182507.png" alt=""></p><h1 id="六、向数据库中导入CMS的初始数据"><a href="#六、向数据库中导入CMS的初始数据" class="headerlink" title="六、向数据库中导入CMS的初始数据"></a>六、向数据库中导入CMS的初始数据</h1><h2 id="1-初始化数据库pbootcms的表结构和数据。"><a href="#1-初始化数据库pbootcms的表结构和数据。" class="headerlink" title="1.初始化数据库pbootcms的表结构和数据。"></a>1.初始化数据库pbootcms的表结构和数据。</h2><pre><code class="hljs shell">sql_file=&quot;/var/www/html/static/backup/sql/&quot;$(ls /var/www/html/static/backup/sql/) &amp;&amp;mysql -hpc-uf6489kn437r57p59.mysql.polardb.rds.aliyuncs.com -utest_user -pPassword1213 -Dpbootcms &lt; $sql_file</code></pre><p>经过一番周折，终于可以了。<br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127185258.png" alt=""></p><h2 id="2-修改CMS系统数据库配置。"><a href="#2-修改CMS系统数据库配置。" class="headerlink" title="2.修改CMS系统数据库配置。"></a>2.修改CMS系统数据库配置。</h2><pre><code class="hljs shell">cat &gt; /var/www/html/config/database.php &lt;&lt; EOF&lt;?phpreturn array(    &#x27;database&#x27; =&gt; array(        &#x27;type&#x27; =&gt; &#x27;mysqli&#x27;, // 数据库连接驱动类型: mysqli,sqlite,pdo_mysql,pdo_sqlite        &#x27;host&#x27; =&gt; &#x27;pc-uf6489kn437r57p59.mysql.polardb.rds.aliyuncs.com&#x27;, // PolarDB数据库链接地址        &#x27;user&#x27; =&gt; &#x27;test_user&#x27;, // PolarDB数据库的用户名        &#x27;passwd&#x27; =&gt; &#x27;Password1213&#x27;, // PolarDB数据库的密码        &#x27;port&#x27; =&gt; &#x27;3306&#x27;, // 数据库端口        &#x27;dbname&#x27; =&gt; &#x27;pbootcms&#x27; //数据库名称    ));EOF</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127185432.png" alt=""></p><h2 id="3-查看安全组"><a href="#3-查看安全组" class="headerlink" title="3.查看安全组"></a>3.查看安全组</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127185800.png" alt=""><br>本实验使用的ECS默认是打开所有的端口，-1/-1 ，故不用单独设置。</p><h2 id="4-访问程序。"><a href="#4-访问程序。" class="headerlink" title="4.访问程序。"></a>4.访问程序。</h2><p>执行以下命令重启 Apache服务。</p><pre><code class="hljs shell">systemctl restart httpd</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127190023.png" alt=""></p><h1 id="七、进入门户网站首页"><a href="#七、进入门户网站首页" class="headerlink" title="七、进入门户网站首页"></a>七、进入门户网站首页</h1><p>访问：<a href="http://139.224.165.163/">http://139.224.165.163/</a><br>如图所示，访问成功。<br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127190022.png" alt=""></p><p>/admin.php。默认账号为admin，密码为123456。</p><p>至此已完成门户网站的搭建，如此就可以根据公司的需求自定义门户网站的内容。<br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127190158.png" alt=""></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://developer.aliyun.com/adc/student/bootcamp/?spm=a2c6h.13788107.J_3120529270.3.450750a3CaVHui">云上实践 云上成长 ECS 7天实践训练营</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>阿里云</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阿里云</tag>
      
      <tag>在家学习</tag>
      
      <tag>进阶班</tag>
      
      <tag>mysql</tag>
      
      <tag>数据库</tag>
      
      <tag>网站搭建</tag>
      
      <tag>Apache</tag>
      
      <tag>MySQL</tag>
      
      <tag>PHP</tag>
      
      <tag>PolarDB</tag>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Class 4 车辆保险应用</title>
    <link href="/2020/11/30/%E9%98%BF%E9%87%8C%E4%BA%91/Class%204%20%E8%BD%A6%E8%BE%86%E4%BF%9D%E9%99%A9%E5%BA%94%E7%94%A8/"/>
    <url>/2020/11/30/%E9%98%BF%E9%87%8C%E4%BA%91/Class%204%20%E8%BD%A6%E8%BE%86%E4%BF%9D%E9%99%A9%E5%BA%94%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="实施前准备工作"><a href="#实施前准备工作" class="headerlink" title="实施前准备工作"></a>实施前准备工作</h1><h2 id="一、本地图片上传为OSS"><a href="#一、本地图片上传为OSS" class="headerlink" title="一、本地图片上传为OSS"></a>一、本地图片上传为OSS</h2><p>1.开通oss<br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-30/1606722326491-2020061516095134.png" alt=""></p><p>2.创建Bucket</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-30/1606722343394-20200615160951329.png" alt=""></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-30/1606722363856-20200615160951505.png" alt=""></p><h2 id="二、开通目标检测服务"><a href="#二、开通目标检测服务" class="headerlink" title="二、开通目标检测服务"></a>二、开通目标检测服务</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-30/1606722388611-20200615160952519.png" alt=""></p><h2 id="三、查看所需API"><a href="#三、查看所需API" class="headerlink" title="三、查看所需API"></a>三、查看所需API</h2><p>这里我们用到阿里云视觉智能开放平台提供的三个功能：</p><ul><li>车辆部件识别</li><li>车辆损伤识别</li><li>车险图片分类</li></ul><p>1.车辆部件识别<br>检测图片中车辆部件的位置以及名称。</p><p>2.车辆损伤识别<br>针对常见小汽车车型，识别车辆外观受损部件及损伤类型，可识别数十种车辆部件、五大类外观损伤。（刮擦、凹陷、开裂、褶皱、穿孔）</p><p>3.车险图片分类<br>对输入的车险图片进行分类。</p><h1 id="具体实施"><a href="#具体实施" class="headerlink" title="具体实施"></a>具体实施</h1><h2 id="一、本地图片上传至OSS的upload-py"><a href="#一、本地图片上传至OSS的upload-py" class="headerlink" title="一、本地图片上传至OSS的upload.py"></a>一、本地图片上传至OSS的upload.py</h2><p>1.示例代码</p><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><span class="hljs-keyword">import</span> os<span class="hljs-keyword">import</span> random<span class="hljs-keyword">import</span> string<span class="hljs-keyword">import</span> oss2<span class="hljs-comment"># 以下代码展示了文件上传的高级用法，如断点续传、分片上传等。</span><span class="hljs-comment"># 基本的文件上传如上传普通文件、追加文件，请参见object_basic.py</span><span class="hljs-comment"># 首先初始化AccessKeyId、AccessKeySecret、Endpoint等信息。</span><span class="hljs-comment"># 通过环境变量获取，或者把诸如“&lt;你的AccessKeyId&gt;”替换成真实的AccessKeyId等。</span><span class="hljs-comment">#</span><span class="hljs-comment"># 以杭州区域为例，Endpoint可以是：</span><span class="hljs-comment">#   http://oss-cn-hangzhou.aliyuncs.com</span><span class="hljs-comment">#   https://oss-cn-hangzhou.aliyuncs.com</span><span class="hljs-comment"># 分别以HTTP、HTTPS协议访问。</span>access_key_id = os.getenv(<span class="hljs-string">&#x27;OSS_TEST_ACCESS_KEY_ID&#x27;</span>, <span class="hljs-string">&#x27;&lt;你的AccessKeyId&gt;&#x27;</span>)access_key_secret = os.getenv(<span class="hljs-string">&#x27;OSS_TEST_ACCESS_KEY_SECRET&#x27;</span>, <span class="hljs-string">&#x27;&lt;你的AccessKeySecret&gt;&#x27;</span>)bucket_name = os.getenv(<span class="hljs-string">&#x27;OSS_TEST_BUCKET&#x27;</span>, <span class="hljs-string">&#x27;&lt;你的Bucket&gt;&#x27;</span>)endpoint = os.getenv(<span class="hljs-string">&#x27;OSS_TEST_ENDPOINT&#x27;</span>, <span class="hljs-string">&#x27;&lt;你的访问域名&gt;&#x27;</span>)<span class="hljs-comment"># 确认上面的参数都填写正确了</span><span class="hljs-keyword">for</span> param <span class="hljs-keyword">in</span> (access_key_id, access_key_secret, bucket_name, endpoint):    <span class="hljs-keyword">assert</span> <span class="hljs-string">&#x27;&lt;&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> param, <span class="hljs-string">&#x27;请设置参数：&#x27;</span> + param<span class="hljs-comment"># 创建Bucket对象，所有Object相关的接口都可以通过Bucket对象来进行</span>bucket = oss2.Bucket(oss2.Auth(access_key_id, access_key_secret), endpoint, bucket_name)<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">random_string</span>(<span class="hljs-params">n</span>):</span>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>.join(random.choice(string.ascii_lowercase) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n))<span class="hljs-comment"># 生成一个本地文件用于测试。文件内容是bytes类型。</span>filename = random_string(<span class="hljs-number">32</span>) + <span class="hljs-string">&#x27;.txt&#x27;</span>content = oss2.to_bytes(random_string(<span class="hljs-number">1024</span> * <span class="hljs-number">1024</span>))<span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> fileobj:    fileobj.write(content)<span class="hljs-string">&quot;&quot;&quot;</span><span class="hljs-string">断点续传上传</span><span class="hljs-string">&quot;&quot;&quot;</span><span class="hljs-comment"># 断点续传一：因为文件比较小（小于oss2.defaults.multipart_threshold），</span><span class="hljs-comment"># 所以实际上用的是oss2.Bucket.put_object</span>oss2.resumable_upload(bucket, <span class="hljs-string">&#x27;remote-normal.txt&#x27;</span>, filename)<span class="hljs-comment"># 断点续传二：为了展示的需要，我们指定multipart_threshold可选参数，确保使用分片上传</span>oss2.resumable_upload(bucket, <span class="hljs-string">&#x27;remote-multipart.txt&#x27;</span>, filename, multipart_threshold=<span class="hljs-number">100</span> * <span class="hljs-number">1024</span>)<span class="hljs-string">&quot;&quot;&quot;</span><span class="hljs-string">分片上传</span><span class="hljs-string">&quot;&quot;&quot;</span><span class="hljs-comment"># 也可以直接调用分片上传接口。</span><span class="hljs-comment"># 首先可以用帮助函数设定分片大小，设我们期望的分片大小为128KB</span>total_size = os.path.getsize(filename)part_size = oss2.determine_part_size(total_size, preferred_size=<span class="hljs-number">128</span> * <span class="hljs-number">1024</span>)<span class="hljs-comment"># 初始化分片上传，得到Upload ID。接下来的接口都要用到这个Upload ID。</span>key = <span class="hljs-string">&#x27;remote-multipart2.txt&#x27;</span>upload_id = bucket.init_multipart_upload(key).upload_id<span class="hljs-comment"># 逐个上传分片</span><span class="hljs-comment"># 其中oss2.SizedFileAdapter()把fileobj转换为一个新的文件对象，新的文件对象可读的长度等于size_to_upload</span><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> fileobj:    parts = []    part_number = <span class="hljs-number">1</span>    offset = <span class="hljs-number">0</span>    <span class="hljs-keyword">while</span> offset &lt; total_size:        size_to_upload = <span class="hljs-built_in">min</span>(part_size, total_size - offset)        result = bucket.upload_part(key, upload_id, part_number,                                    oss2.SizedFileAdapter(fileobj, size_to_upload))        parts.append(oss2.models.PartInfo(part_number, result.etag, size = size_to_upload, part_crc = result.crc))        offset += size_to_upload        part_number += <span class="hljs-number">1</span>    <span class="hljs-comment"># 完成分片上传</span>    bucket.complete_multipart_upload(key, upload_id, parts)<span class="hljs-comment"># 验证一下</span><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> fileobj:    <span class="hljs-keyword">assert</span> bucket.get_object(key).read() == fileobj.read()os.remove(filename)</code></pre><h2 id="二、车辆部件识别"><a href="#二、车辆部件识别" class="headerlink" title="二、车辆部件识别"></a>二、车辆部件识别</h2><p>1.请求参数</p><p>ImageURL：图片URL</p><p>2.示例代码<br><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python</span><span class="hljs-comment">#coding=utf-8</span><span class="hljs-keyword">from</span> aliyunsdkcore.client <span class="hljs-keyword">import</span> AcsClient<span class="hljs-keyword">from</span> aliyunsdkcore.acs_exception.exceptions <span class="hljs-keyword">import</span> ClientException<span class="hljs-keyword">from</span> aliyunsdkcore.acs_exception.exceptions <span class="hljs-keyword">import</span> ServerException<span class="hljs-keyword">from</span> aliyunsdkobjectdet.request.v20191230.RecognizeVehiclePartsRequest <span class="hljs-keyword">import</span> RecognizeVehiclePartsRequestclient = AcsClient(<span class="hljs-string">&#x27;&lt;accessKeyId&gt;&#x27;</span>, <span class="hljs-string">&#x27;&lt;accessSecret&gt;&#x27;</span>, <span class="hljs-string">&#x27;cn-shanghai&#x27;</span>)request = RecognizeVehiclePartsRequest()request.set_accept_format(<span class="hljs-string">&#x27;json&#x27;</span>)request.set_ImageURL(<span class="hljs-string">&quot;http://viapi-test.oss-cn-shanghai.aliyuncs.com/RecognizeVehicleParts.jpg&quot;</span>)response = client.do_action_with_exception(request)<span class="hljs-comment"># python2:  print(response) </span>print(<span class="hljs-built_in">str</span>(response, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>))</code></pre></p><h2 id="三、车辆损坏识别类"><a href="#三、车辆损坏识别类" class="headerlink" title="三、车辆损坏识别类"></a>三、车辆损坏识别类</h2><p>1.请求参数</p><p>ImageURL：图片URL</p><p>2.示例代码</p><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python</span><span class="hljs-comment">#coding=utf-8</span><span class="hljs-keyword">from</span> aliyunsdkcore.client <span class="hljs-keyword">import</span> AcsClient<span class="hljs-keyword">from</span> aliyunsdkcore.acs_exception.exceptions <span class="hljs-keyword">import</span> ClientException<span class="hljs-keyword">from</span> aliyunsdkcore.acs_exception.exceptions <span class="hljs-keyword">import</span> ServerException<span class="hljs-keyword">from</span> aliyunsdkobjectdet.request.v20191230.RecognizeVehicleDamageRequest <span class="hljs-keyword">import</span> RecognizeVehicleDamageRequestclient = AcsClient(<span class="hljs-string">&#x27;&lt;accessKeyId&gt;&#x27;</span>, <span class="hljs-string">&#x27;&lt;accessSecret&gt;&#x27;</span>, <span class="hljs-string">&#x27;cn-shanghai&#x27;</span>)request = RecognizeVehicleDamageRequest()request.set_accept_format(<span class="hljs-string">&#x27;json&#x27;</span>)request.set_ImageURL(<span class="hljs-string">&quot;http://viapi-test.oss-cn-shanghai.aliyuncs.com/sanjiye-meizi/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/%E8%BD%A6%E8%BE%86%E6%8D%9F%E4%BC%A4%E8%AF%86%E5%88%AB%20.jpg&quot;</span>)response = client.do_action_with_exception(request)<span class="hljs-comment"># python2:  print(response) </span>print(<span class="hljs-built_in">str</span>(response, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>))</code></pre><h2 id="四、车险图片分类"><a href="#四、车险图片分类" class="headerlink" title="四、车险图片分类"></a>四、车险图片分类</h2><p>1.请求参数</p><p>ImageURL：图片URL</p><p>2.示例代码</p><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python</span><span class="hljs-comment">#coding=utf-8</span><span class="hljs-keyword">from</span> aliyunsdkcore.client <span class="hljs-keyword">import</span> AcsClient<span class="hljs-keyword">from</span> aliyunsdkcore.acs_exception.exceptions <span class="hljs-keyword">import</span> ClientException<span class="hljs-keyword">from</span> aliyunsdkcore.acs_exception.exceptions <span class="hljs-keyword">import</span> ServerException<span class="hljs-keyword">from</span> aliyunsdkobjectdet.request.v20191230.ClassifyVehicleInsuranceRequest <span class="hljs-keyword">import</span> ClassifyVehicleInsuranceRequestclient = AcsClient(<span class="hljs-string">&#x27;&lt;accessKeyId&gt;&#x27;</span>, <span class="hljs-string">&#x27;&lt;accessSecret&gt;&#x27;</span>, <span class="hljs-string">&#x27;cn-shanghai&#x27;</span>)request = ClassifyVehicleInsuranceRequest()request.set_accept_format(<span class="hljs-string">&#x27;json&#x27;</span>)request.set_ImageURL(<span class="hljs-string">&quot;http://viapi-test.oss-cn-shanghai.aliyuncs.com/sanjiye-meizi/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/%E8%BD%A6%E9%99%A9%E5%9B%BE%E7%89%87.jpg&quot;</span>)response = client.do_action_with_exception(request)<span class="hljs-comment"># python2:  print(response) </span>print(<span class="hljs-built_in">str</span>(response, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>))</code></pre><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://developer.aliyun.com/adc/student/bootcamp/ai/2?spm=a2c6h.13788107.J_3120529270.4.450750a3fjp2m1&amp;accounttraceid=9cafb5972ade4cb484e00857d47625bbdkwh">达摩院特别版-视觉AI训练营</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>阿里云</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阿里云</tag>
      
      <tag>达摩院</tag>
      
      <tag>AI</tag>
      
      <tag>应用</tag>
      
      <tag>视觉</tag>
      
      <tag>oss存储</tag>
      
      <tag>API</tag>
      
      <tag>车辆部件识别</tag>
      
      <tag>车辆损伤识别</tag>
      
      <tag>车险图片分类</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Class 3 SLB负载均衡实践</title>
    <link href="/2020/11/29/%E9%98%BF%E9%87%8C%E4%BA%91/Class%203%20SLB%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%AE%9E%E8%B7%B5/"/>
    <url>/2020/11/29/%E9%98%BF%E9%87%8C%E4%BA%91/Class%203%20SLB%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%AE%9E%E8%B7%B5/</url>
    
    <content type="html"><![CDATA[<h1 id="一-创建开通资源"><a href="#一-创建开通资源" class="headerlink" title="一.创建开通资源"></a>一.创建开通资源</h1><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606457142887-1.PNG" alt=""></p><h1 id="二-云服务器状态确认"><a href="#二-云服务器状态确认" class="headerlink" title="二.云服务器状态确认"></a>二.云服务器状态确认</h1><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606457248119-2.PNG" alt=""><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606457248121-3.PNG" alt=""></p><p>比较两台ECS的访问结果，发现部署的网站内容相同，只是显示的后端服务器IP不同。</p><h1 id="三-负载均衡配置"><a href="#三-负载均衡配置" class="headerlink" title="三.负载均衡配置"></a>三.负载均衡配置</h1><h2 id="1-打开新的页面，登录子用户"><a href="#1-打开新的页面，登录子用户" class="headerlink" title="1.打开新的页面，登录子用户"></a>1.打开新的页面，登录子用户</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606457603020-4.PNG" alt=""></p><h2 id="2-开始配置负载均衡"><a href="#2-开始配置负载均衡" class="headerlink" title="2.开始配置负载均衡"></a>2.开始配置负载均衡</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606457651230-5.PNG" alt=""></p><h2 id="3-配置负载均衡的-监听端口、后端服务器-和-健康检查"><a href="#3-配置负载均衡的-监听端口、后端服务器-和-健康检查" class="headerlink" title="3.配置负载均衡的 监听端口、后端服务器 和 健康检查"></a>3.配置负载均衡的 监听端口、后端服务器 和 健康检查</h2><h3 id="1）在-协议-amp-监听-页面，输入如下信息，完成后，点击-下一步-。"><a href="#1）在-协议-amp-监听-页面，输入如下信息，完成后，点击-下一步-。" class="headerlink" title="1）在 协议&amp;监听 页面，输入如下信息，完成后，点击 下一步 。"></a>1）在 协议&amp;监听 页面，输入如下信息，完成后，点击 下一步 。</h3><p>负载均衡协议：选择 HTTP<br>监听端口：设为 80<br>高级配置保持默认</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606458028281-6.PNG" alt=""></p><h3 id="2）在-后端服务器-页面，监听请求转发至-默认服务器组，在已添加服务器处点击-继续添加-。"><a href="#2）在-后端服务器-页面，监听请求转发至-默认服务器组，在已添加服务器处点击-继续添加-。" class="headerlink" title="2）在 后端服务器 页面，监听请求转发至 默认服务器组，在已添加服务器处点击 继续添加  。"></a>2）在 后端服务器 页面，监听请求转发至 默认服务器组，在已添加服务器处点击 继续添加  。</h3><h3 id="3）在弹出的待添加服务器页面，在预先配置好的两台云服务器前打勾选择，然后点击下一步，之后再点击-添加；"><a href="#3）在弹出的待添加服务器页面，在预先配置好的两台云服务器前打勾选择，然后点击下一步，之后再点击-添加；" class="headerlink" title="3）在弹出的待添加服务器页面，在预先配置好的两台云服务器前打勾选择，然后点击下一步，之后再点击 添加；"></a>3）在弹出的待添加服务器页面，在预先配置好的两台云服务器前打勾选择，然后点击下一步，之后再点击 添加；</h3><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606458152680-7.PNG" alt=""></p><h3 id="4）在后端服务器界面的已添加服务器列表中，可以看到新增的两台云服务器，分别将-端口-设置为-80，并点击-下一步-。"><a href="#4）在后端服务器界面的已添加服务器列表中，可以看到新增的两台云服务器，分别将-端口-设置为-80，并点击-下一步-。" class="headerlink" title="4）在后端服务器界面的已添加服务器列表中，可以看到新增的两台云服务器，分别将 端口 设置为 80，并点击 下一步 。"></a>4）在后端服务器界面的已添加服务器列表中，可以看到新增的两台云服务器，分别将 端口 设置为 80，并点击 下一步 。</h3><p>说明：负载均衡器将会按照输入的权重比例分发请求。</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606458167408-8.PNG" alt=""></p><h3 id="5）在-健康检查-配置中，开启健康检查按钮为绿色-开启状态，点击-下一步。"><a href="#5）在-健康检查-配置中，开启健康检查按钮为绿色-开启状态，点击-下一步。" class="headerlink" title="5）在 健康检查 配置中，开启健康检查按钮为绿色 开启状态，点击 下一步。"></a>5）在 健康检查 配置中，开启健康检查按钮为绿色 开启状态，点击 下一步。</h3><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606458216714-9.PNG" alt=""></p><h3 id="6）在-配置审核-页面，确认上述配置操作正确，点击-提交；出现如下界面，提示配置成功后，点击-知道了；"><a href="#6）在-配置审核-页面，确认上述配置操作正确，点击-提交；出现如下界面，提示配置成功后，点击-知道了；" class="headerlink" title="6）在 配置审核 页面，确认上述配置操作正确，点击 提交；出现如下界面，提示配置成功后，点击 知道了；"></a>6）在 配置审核 页面，确认上述配置操作正确，点击 提交；出现如下界面，提示配置成功后，点击 知道了；</h3><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606458245050-10.PNG" alt=""></p><h3 id="7）此时，页面将显示一个状态为-运行中-的负载均衡监听实例，后端服务器组已添加完成两台ECS服务器，且-健康检查-的状态为-正常。"><a href="#7）此时，页面将显示一个状态为-运行中-的负载均衡监听实例，后端服务器组已添加完成两台ECS服务器，且-健康检查-的状态为-正常。" class="headerlink" title="7）此时，页面将显示一个状态为 运行中 的负载均衡监听实例，后端服务器组已添加完成两台ECS服务器，且 健康检查 的状态为 正常。"></a>7）此时，页面将显示一个状态为 运行中 的负载均衡监听实例，后端服务器组已添加完成两台ECS服务器，且 健康检查 的状态为 正常。</h3><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606458613517-11.PNG" alt=""></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606458788172-12.PNG" alt=""></p><h1 id="四-负载均衡验证"><a href="#四-负载均衡验证" class="headerlink" title="四.负载均衡验证"></a>四.负载均衡验证</h1><h2 id="1-两台后端服务器的权重比例相同"><a href="#1-两台后端服务器的权重比例相同" class="headerlink" title="1.两台后端服务器的权重比例相同"></a>1.两台后端服务器的权重比例相同</h2><h3 id="访问-负载均衡-的-服务地址"><a href="#访问-负载均衡-的-服务地址" class="headerlink" title="访问 负载均衡 的 服务地址"></a>访问 负载均衡 的 服务地址</h3><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606459077455-13.PNG" alt=""></p><p>界面显示内容：</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606459125831-14.PNG" alt=""></p><p>刷新两下后效果如下：</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606459134332-15.PNG" alt=""></p><p>重复刷新操作，观察 后端服务器IP 是在两个云服务器的 内网地址 间轮流更换。</p><h2 id="2-两台后端服务器的权重比例不同时"><a href="#2-两台后端服务器的权重比例不同时" class="headerlink" title="2.两台后端服务器的权重比例不同时"></a>2.两台后端服务器的权重比例不同时</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606459351250-16.PNG" alt=""><br>界面显示内容：</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606459134332-15.PNG" alt=""></p><p>刷新两下后效果如下：</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606459125831-14.PNG" alt=""></p><p>由此可见，每三次刷新中，必有两次访问到172.16.1.23，一次访问到172.16.1.22<br>，权重为2:1。</p><h2 id="3-当某一台ecs停止时，监听界面也会自动识别"><a href="#3-当某一台ecs停止时，监听界面也会自动识别" class="headerlink" title="3.当某一台ecs停止时，监听界面也会自动识别"></a>3.当某一台ecs停止时，监听界面也会自动识别</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606459999184-19.PNG" alt=""><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606459999177-18.PNG" alt=""></p><p>刷新<a href="http://101.132.190.205/页面时也只显示一个ip">http://101.132.190.205/页面时也只显示一个ip</a></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606460100949-20.PNG" alt=""></p><h1 id="五、感想"><a href="#五、感想" class="headerlink" title="五、感想"></a>五、感想</h1><p>如上结果证明：负载均衡会将用户的请求发送到后端不同的服务器进行处理。这样，可以减轻单台服务器的负载压力，从而确保业务的持续性。感觉这跟集群很像，但在性能处理上又有不同。希望自己接下来在项目中进行实战演练，实现进阶。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://developer.aliyun.com/adc/student/bootcamp/?spm=a2c6h.13788107.J_3120529270.3.450750a3CaVHui">云上实践 云上成长 ECS 7天实践训练营</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>阿里云</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阿里云</tag>
      
      <tag>在家学习</tag>
      
      <tag>ECS</tag>
      
      <tag>进阶班</tag>
      
      <tag>SLB</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Class 3 电子相册搭建（人脸、表情识别）</title>
    <link href="/2020/11/29/%E9%98%BF%E9%87%8C%E4%BA%91/Class%203%20%E7%94%B5%E5%AD%90%E7%9B%B8%E5%86%8C%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BA%BA%E8%84%B8%E3%80%81%E8%A1%A8%E6%83%85%E8%AF%86%E5%88%AB%EF%BC%89/"/>
    <url>/2020/11/29/%E9%98%BF%E9%87%8C%E4%BA%91/Class%203%20%E7%94%B5%E5%AD%90%E7%9B%B8%E5%86%8C%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BA%BA%E8%84%B8%E3%80%81%E8%A1%A8%E6%83%85%E8%AF%86%E5%88%AB%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>功能：项目分为前端和后端两个部分，调用阿里云人脸识别、表情识别的功能，对电子相册里面的照片进行自动标签和分类。</p><p>API地址<br>阿里达摩院视觉识别平台（<a href="https://vision.aliyun.com/）">https://vision.aliyun.com/）</a></p><h1 id="一、后端"><a href="#一、后端" class="headerlink" title="一、后端"></a>一、后端</h1><p>代码是Java的srping-boot项目<br>项目代码下载地址：<a href="https://github.com/aliyun/alibabacloud-viapi-demo/tree/master">https://github.com/aliyun/alibabacloud-viapi-demo/tree/master</a></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-29/1606628587522-QQ%E6%88%AA%E5%9B%BE20201129134250.png" alt=""></p><ul><li>Application：启动的入口函数，</li><li>common：一般就是存放公共的类或者常量，或者枚举值，</li><li>config：装载或者是数据库的配置。</li><li>Controller：用于接收外部的请求，通过接口调用或得到的数据返回给前端</li><li>Service: 把不同的请求 , 不同的服务抽象成一个 service。</li><li>Utils: 用于存放公共的类或者工具函数。</li></ul><h2 id="1-controller"><a href="#1-controller" class="headerlink" title="1.controller"></a>1.controller</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-29/1606628380718-QQ%E6%88%AA%E5%9B%BE20201129133918.png" alt=""></p><p>获取图片、分类等，上传文件。</p><h2 id="2-ResourceService"><a href="#2-ResourceService" class="headerlink" title="2.ResourceService"></a>2.ResourceService</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-29/1606628412703-QQ%E6%88%AA%E5%9B%BE20201129134001.png" alt=""></p><p>存储数据，资源管理</p><h2 id="3-VisionService"><a href="#3-VisionService" class="headerlink" title="3.VisionService"></a>3.VisionService</h2><p>上传图片，识别图片中的表情和场景</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-29/1606628452439-QQ%E6%88%AA%E5%9B%BE20201129134031.png" alt=""></p><p>VisionService，识别场景，表情。我们上传图片流，我们把整个图片流传到接口里面，然后从服务端去识别这个场景。新的版本的 SDK支持通过本地上传图片来进行识别</p><h2 id="4-在控制台开通相应功能"><a href="#4-在控制台开通相应功能" class="headerlink" title="4.在控制台开通相应功能"></a>4.在控制台开通相应功能</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-29/1606617922595-QQ%E6%88%AA%E5%9B%BE20201129104458.png" alt=""></p><p>图片文件需要上传到对象存储oss中<br>新的版本的 SDK支持通过本地上传图片来进行识别</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-29/1606618124294-QQ%E6%88%AA%E5%9B%BE20201129104820.png" alt=""></p><h2 id="5-ResourceService-是一个资源的管理器"><a href="#5-ResourceService-是一个资源的管理器" class="headerlink" title="5.ResourceService 是一个资源的管理器"></a>5.ResourceService 是一个资源的管理器</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-29/1606628698485-QQ%E6%88%AA%E5%9B%BE20201129134443.png" alt=""></p><h2 id="6-allImg-将所有上传的图片，放在数组里面。"><a href="#6-allImg-将所有上传的图片，放在数组里面。" class="headerlink" title="6.allImg 将所有上传的图片，放在数组里面。"></a>6.allImg 将所有上传的图片，放在数组里面。</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-29/1606628976841-QQ%E6%88%AA%E5%9B%BE20201129134922.png" alt=""></p><h2 id="7-json文件"><a href="#7-json文件" class="headerlink" title="7.json文件"></a>7.json文件</h2><p>cateMap 之后又分成两个场景 expression、scene，可以看到不同的分类，表情识别，场景识别，里面存放所有识别出来的表情，比如说惊讶、生气、开心，场景识别，存放运动、户外，这样存储是为了我们能够快速的进行查询，比如说可以通过分类，快速的找到某一个分类下面的所有的识别。</p><p>expressionMap 是表示某类标签下面都包括哪些图片，senceMap 也是同样的意思。</p><p>imgLabels 是一个反向的查找的过程，即通过一个图片，识别出来了哪些场景，比如说我们可以看到它可能这张图片它可能直接识别出来了，它是属于人物场景，属于运动场景，然后属于生气的表情，属于演出等场景。</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-29/1606629114117-QQ%E6%88%AA%E5%9B%BE20201129135140.png" alt=""></p><h1 id="二、前端"><a href="#二、前端" class="headerlink" title="二、前端"></a>二、前端</h1><h2 id="1-利用上传的组件实现图片上传"><a href="#1-利用上传的组件实现图片上传" class="headerlink" title="1.利用上传的组件实现图片上传"></a>1.利用上传的组件实现图片上传</h2><h2 id="2-实现轮播图、列表"><a href="#2-实现轮播图、列表" class="headerlink" title="2.实现轮播图、列表"></a>2.实现轮播图、列表</h2><h2 id="3-实现自定义的标签"><a href="#3-实现自定义的标签" class="headerlink" title="3.实现自定义的标签"></a>3.实现自定义的标签</h2><p>前端采用视频所述方法</p><p>前端页面通过 vue，然后加上 element-ui 这个两个组件来实现前端的逻辑。大概可以看一下整个的结构，它可以分成三部分。</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-29/1606629326420-QQ%E6%88%AA%E5%9B%BE20201129135504.png" alt=""></p><p>第一部分是通过一个上传的组件来实现拖拽上传以及点选。<br>找到一个图片，可以看到两种方式，一种拖拽，一种是点击上传，这是通过一个组件来实现的。action是在上传图片要去访问后端的 upload 接口，之后有一个事件，是在成功之后应该做哪些事情，也就是对应的要执行的函数。 比如 UploadSuccess 指上传成功之后，刷新页面，添加下面的标签分类等。</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-29/1606618226668-QQ%E6%88%AA%E5%9B%BE20201129103014.png" alt=""></p><p>第二部分是实现轮播图部分<br>通过vue 的一个组件。vue-gallery, 实现自定义的标签名，之后定义了一个属性：photos。photos 从后台去取回数据，之后把它渲染到前端的 html 页面当中。由于我们这是一个组件，它会有对应的自己一个模板，这个就是我们整个的模板部分，之后对它进行背景图片的处理，然后以及一些事件的定义。<br>vue，它的整个是一个事件的数据流，通过数据的不同的变化，然后我们就可以去触发它的渲染，比如上传一张图片，它是可以对应不同的组件进行交互，利用不同的标签，事件来驱动数据的变化。</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-29/1606629414004-QQ%E6%88%AA%E5%9B%BE20201129135638.png" alt=""></p><p>mounted定义一些事件，比如图片变化，怎么调用，以及监听按下不同的键，应该做哪些操作，然后是前张图片还是后一张图片等。<br>el 是一个 ID 的绑定，比如 #app, 在这个标签上层父级，定义了一个 ID 叫 app，这时候可以把组件放在父级 div 下面，然后在这个里面去根据模板进行渲染。</p><p>第三部分是自定义标签的组件。</p><p>V-tag 对应的是这块，我们把它分成不同的分类，下面有不同的标签是组件来实<br>现的。</p><p>Data 是指在初始化的时候，需要进行哪些渲染。这里面自定义了不同的颜色。cateMap，将返回的英文转化成汉字去显示出来。去取一个不同的 ID，然后给它选成不同的颜色，通过取一个随机的下标，然后去把它选成不同的颜色。<br>Tag 是一个两层 map 结构。就是第一层这里面某比每层结构，表情，下面有几种表情，场景下面有几种场景，这是一个两层的 map 结构。所以在渲染的时候，会对两层的 map 进行渲染，第一层完成之后，再渲染第二层数据。实现不同的触发，上传文件，成功之后要进行不同的事件操作。</p><p>因为要实现不同的组件之间进行通信，自定义了一个虚拟的 Event 的 vue 的实例，然后通过 Event 将所有的不同的 vue 实例串联起来。比如 uploadSuccess 去发送一个事件。通过 upload vue 实例去给其他的实例去发事件，在上传成功之后加载到轮播图里面。on 就对应去接收 emit 传过来的事件。如果我们得到了 uploadSuccess 事件 ,那么就会通过从后端去获取数据，对这个页面进行一个刷新操作。refresh 也是同样的道理，上传成功之后，要对整个的 tag 进行一个刷新，把新识别出来的不同的场景，不同标签，进行一个刷新。</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-29/1606618569224-QQ%E6%88%AA%E5%9B%BE20201129105530.png" alt=""></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://developer.aliyun.com/adc/student/bootcamp/ai/2?spm=a2c6h.13788107.J_3120529270.4.450750a3fjp2m1&amp;accounttraceid=9cafb5972ade4cb484e00857d47625bbdkwh">达摩院特别版-视觉AI训练营</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>阿里云</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阿里云</tag>
      
      <tag>达摩院</tag>
      
      <tag>AI</tag>
      
      <tag>应用</tag>
      
      <tag>视觉</tag>
      
      <tag>图像识别</tag>
      
      <tag>人脸识别</tag>
      
      <tag>表情识别</tag>
      
      <tag>自动标</tag>
      
      <tag>分类</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Class 2 基于ECS快速搭建Docker环境</title>
    <link href="/2020/11/28/%E9%98%BF%E9%87%8C%E4%BA%91/Class%202%20%E5%9F%BA%E4%BA%8EECS%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BADocker%E7%8E%AF%E5%A2%83/"/>
    <url>/2020/11/28/%E9%98%BF%E9%87%8C%E4%BA%91/Class%202%20%E5%9F%BA%E4%BA%8EECS%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BADocker%E7%8E%AF%E5%A2%83/</url>
    
    <content type="html"><![CDATA[<h1 id="一-ssh连接远程服务器"><a href="#一-ssh连接远程服务器" class="headerlink" title="一.ssh连接远程服务器"></a>一.ssh连接远程服务器</h1><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606449081612-19.PNG" alt=""></p><h1 id="二-安装Docker-CE"><a href="#二-安装Docker-CE" class="headerlink" title="二.安装Docker CE"></a>二.安装Docker CE</h1><p>Docker有两个分支版本：Docker CE和Docker EE，即社区版和企业版。</p><h2 id="1-安装Docker的依赖库。"><a href="#1-安装Docker的依赖库。" class="headerlink" title="1.  安装Docker的依赖库。"></a>1.  安装Docker的依赖库。</h2><pre><code class="hljs shell">yum install -y yum-utils device-mapper-persistent-data lvm2</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606449308595-20.PNG" alt=""></p><h2 id="2-添加Docker-CE的软件源信息。"><a href="#2-添加Docker-CE的软件源信息。" class="headerlink" title="2.  添加Docker CE的软件源信息。"></a>2.  添加Docker CE的软件源信息。</h2><pre><code class="hljs shell">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606449342832-21.PNG" alt=""></p><h2 id="3-安装Docker-CE。"><a href="#3-安装Docker-CE。" class="headerlink" title="3.  安装Docker CE。"></a>3.  安装Docker CE。</h2><pre><code class="hljs shell">yum makecache fastyum -y install docker-ce</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606449427975-23.PNG" alt=""></p><h2 id="4-启动Docker服务。"><a href="#4-启动Docker服务。" class="headerlink" title="4.  启动Docker服务。"></a>4.  启动Docker服务。</h2><pre><code class="hljs shell">systemctl start docker</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606449459770-24.PNG" alt=""></p><h1 id="三-配置阿里云镜像仓库（镜像加速）"><a href="#三-配置阿里云镜像仓库（镜像加速）" class="headerlink" title="三.配置阿里云镜像仓库（镜像加速）"></a>三.配置阿里云镜像仓库（镜像加速）</h1><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606449616939-25.PNG" alt=""></p><h2 id="1-配置Docker的自定义镜像仓库地址。"><a href="#1-配置Docker的自定义镜像仓库地址。" class="headerlink" title="1. 配置Docker的自定义镜像仓库地址。"></a>1. 配置Docker的自定义镜像仓库地址。</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606449732773-26.PNG" alt=""></p><h2 id="2-重新加载服务配置文件。"><a href="#2-重新加载服务配置文件。" class="headerlink" title="2.  重新加载服务配置文件。"></a>2.  重新加载服务配置文件。</h2><pre><code class="hljs shell">systemctl daemon-reload</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606449816567-27.PNG" alt=""></p><h2 id="3-重启Docker服务。"><a href="#3-重启Docker服务。" class="headerlink" title="3.  重启Docker服务。"></a>3.  重启Docker服务。</h2><pre><code class="hljs shell">systemctl restart docker</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606449847291-28.PNG" alt=""></p><h1 id="四-使用Docker安装Nginx服务"><a href="#四-使用Docker安装Nginx服务" class="headerlink" title="四.使用Docker安装Nginx服务"></a>四.使用Docker安装Nginx服务</h1><h2 id="1-查看Docker镜像仓库中Nginx的可用版本。"><a href="#1-查看Docker镜像仓库中Nginx的可用版本。" class="headerlink" title="1.  查看Docker镜像仓库中Nginx的可用版本。"></a>1.  查看Docker镜像仓库中Nginx的可用版本。</h2><pre><code class="hljs shell">docker search nginx</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606450049454-29.PNG" alt=""></p><h2 id="2-拉取最新版的Nginx镜像。"><a href="#2-拉取最新版的Nginx镜像。" class="headerlink" title="2.  拉取最新版的Nginx镜像。"></a>2.  拉取最新版的Nginx镜像。</h2><pre><code class="hljs shell">docker pull nginx:latest</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606450100193-30.PNG" alt=""></p><h2 id="3-查看本地镜像。"><a href="#3-查看本地镜像。" class="headerlink" title="3.  查看本地镜像。"></a>3.  查看本地镜像。</h2><pre><code class="hljs shell">docker images</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606450132831-31.PNG" alt=""></p><h2 id="4-运行容器。"><a href="#4-运行容器。" class="headerlink" title="4.  运行容器。"></a>4.  运行容器。</h2><pre><code class="hljs shell">docker run --name nginx-test -p 8080:80 -d nginx</code></pre><p>命令参数说明：<br>—name nginx-test：容器名称。<br>-p 8080:80： 端口进行映射，将本地8080端口映射到容器内部的80端口。<br>-d nginx： 设置容器在后台一直运行。</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606450167321-32.PNG" alt=""></p><h2 id="5-在浏览器地址栏输入http-139-196-156-125-8080-访问Nginx服务。"><a href="#5-在浏览器地址栏输入http-139-196-156-125-8080-访问Nginx服务。" class="headerlink" title="5.  在浏览器地址栏输入http://139.196.156.125:8080/访问Nginx服务。"></a>5.  在浏览器地址栏输入<a href="http://139.196.156.125:8080/访问Nginx服务。">http://139.196.156.125:8080/访问Nginx服务。</a></h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606450257544-33.PNG" alt=""></p><h1 id="五、感想"><a href="#五、感想" class="headerlink" title="五、感想"></a>五、感想</h1><p>指令介绍并不是很详细，很多参数都没有介绍。大家可以自行—help。通过这些指令，我最大的感受就是英语得过硬，很多指令、很多参数实际上就是英文单词或者缩写，并不是去盲目记忆，尤其是参数。不过好记性不如烂笔头，多敲多练习少不了。经过一段时间的学习，只能说对docker有了一个初步的入门，掌握了指令的基本使用，接下来需要在项目中进行实战演练，实现docker进阶。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://developer.aliyun.com/adc/student/bootcamp/?spm=a2c6h.13788107.J_3120529270.3.450750a3CaVHui">云上实践 云上成长 ECS 7天实践训练营</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>docker</category>
      
      <category>阿里云</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阿里云</tag>
      
      <tag>在家学习</tag>
      
      <tag>ECS</tag>
      
      <tag>进阶班</tag>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Class 2 身份证识别系统搭建</title>
    <link href="/2020/11/28/%E9%98%BF%E9%87%8C%E4%BA%91/Class%202%20%E8%BA%AB%E4%BB%BD%E8%AF%81%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/"/>
    <url>/2020/11/28/%E9%98%BF%E9%87%8C%E4%BA%91/Class%202%20%E8%BA%AB%E4%BB%BD%E8%AF%81%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="一、基本诉求"><a href="#一、基本诉求" class="headerlink" title="一、基本诉求"></a>一、基本诉求</h1><p>能够通过调用阿里达摩院视觉平台提供的API来识别出二代身份证关键字段内容，关键字段包括：姓名、性别、民族、身份证号、出生日期、地址信息、有效起始时间、签发机关，同时可输出身份证区域位置和人脸位置信息。</p><h1 id="二、项目预览"><a href="#二、项目预览" class="headerlink" title="二、项目预览"></a>二、项目预览</h1><h2 id="1-进入页面"><a href="#1-进入页面" class="headerlink" title="1.进入页面"></a>1.进入页面</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-28/1606551110652-QQ%E6%88%AA%E5%9B%BE20201128161135.png" alt=""></p><h2 id="2-上传身份证照片信息界面。"><a href="#2-上传身份证照片信息界面。" class="headerlink" title="2.上传身份证照片信息界面。"></a>2.上传身份证照片信息界面。</h2><h2 id="3-识别之后的页面"><a href="#3-识别之后的页面" class="headerlink" title="3.识别之后的页面"></a>3.识别之后的页面</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-28/1606551110652-QQ%E6%88%AA%E5%9B%BE20201128161208.png" alt=""></p><h2 id="4-源码展示"><a href="#4-源码展示" class="headerlink" title="4.源码展示"></a>4.源码展示</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-28/1606551256215-QQ%E6%88%AA%E5%9B%BE20201128161349.png" alt=""></p><h1 id="三、前期准备"><a href="#三、前期准备" class="headerlink" title="三、前期准备"></a>三、前期准备</h1><h2 id="1-查看官方说明文档"><a href="#1-查看官方说明文档" class="headerlink" title="1.查看官方说明文档"></a>1.查看官方说明文档</h2><p>进入阿里达摩院视觉识别平台（<a href="https://vision.aliyun.com/），选择能力广场&gt;文字识别&gt;身份证识别。">https://vision.aliyun.com/），选择能力广场&gt;文字识别&gt;身份证识别。</a></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-28/1606551777378-QQ%E6%88%AA%E5%9B%BE20201128162237.png" alt=""></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-28/1606551482261-QQ%E6%88%AA%E5%9B%BE20201128161735.png" alt=""></p><h2 id="2-查看SDK实例文档"><a href="#2-查看SDK实例文档" class="headerlink" title="2.查看SDK实例文档"></a>2.查看SDK实例文档</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-28/1606551567680-QQ%E6%88%AA%E5%9B%BE20201128161840.png" alt=""></p><h2 id="3-获取OCR的SDK的Maven坐标（Java）"><a href="#3-获取OCR的SDK的Maven坐标（Java）" class="headerlink" title="3.获取OCR的SDK的Maven坐标（Java）"></a>3.获取OCR的SDK的Maven坐标（Java）</h2><p><a href="https://mvnrepository.com/artifact/com.aliyun/aliyun-java-sdk-ocr/1.0.3">传送门</a><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-28/1606551666848-QQ%E6%88%AA%E5%9B%BE20201128162017.png" alt=""></p><p>通过文字识别中查看产品文档，得知SDK支持包括Java、Java（本地接入）、Python、Node.js、PHP四种常用语言。通过检索Java（支持本地上传）的SDK，获取OCR的Maven代码（version=1.0.3）:</p><pre><code class="hljs shell">&lt;artifactId&gt;ocr&lt;/artifactId&gt;&lt;version&gt;1.0.3&lt;/version&gt;</code></pre><h1 id="四、框架分析"><a href="#四、框架分析" class="headerlink" title="四、框架分析"></a>四、框架分析</h1><p>建立Springboot项目，Application为启动类；Controller为控制器层，负责模板的渲染和路由等；Ocrservice负责通过SDK调用视觉识别的能力。上传表单只允许后缀为.jpg，.jpeg，.png的文件，且不为空。</p><h2 id="1-输入限制："><a href="#1-输入限制：" class="headerlink" title="1.输入限制："></a>1.输入限制：</h2><ul><li>图片格式：JPEG、JPG、PNG、BMP、GIF。</li><li>图像大小：图像大小不超过3M。</li><li>图像分辨率：不限制图片分辨率，但图片分辨率太高可能会导致API识别超时，超时时间为5秒。</li><li>URL地址中不能包含中文字符。</li></ul><h1 id="五、示例代码"><a href="#五、示例代码" class="headerlink" title="五、示例代码"></a>五、示例代码</h1><pre><code class="hljs shell">import com.aliyuncs.DefaultAcsClient;import com.aliyuncs.IAcsClient;import com.aliyuncs.exceptions.ClientException;import com.aliyuncs.exceptions.ServerException;import com.aliyuncs.profile.DefaultProfile;import com.google.gson.Gson;import java.util.*;import com.aliyuncs.ocr.model.v20191230.*;public class RecognizeIdentityCard &#123;public static void main(String[] args) &#123;    DefaultProfile profile = DefaultProfile.getProfile(&quot;cn-shanghai&quot;, &quot;&lt;accessKeyId&gt;&quot;, &quot;&lt;accessSecret&gt;&quot;);    IAcsClient client = new DefaultAcsClient(profile);    RecognizeIdentityCardRequest request = new RecognizeIdentityCardRequest();    request.setRegionId(&quot;cn-shanghai&quot;);    request.setSide(&quot;face&quot;);    try &#123;        RecognizeIdentityCardResponse response = client.getAcsResponse(request);        System.out.println(new Gson().toJson(response));    &#125; catch (ServerException e) &#123;        e.printStackTrace();    &#125; catch (ClientException e) &#123;        System.out.println(&quot;ErrCode:&quot; + e.getErrCode());        System.out.println(&quot;ErrMsg:&quot; + e.getErrMsg());        System.out.println(&quot;RequestId:&quot; + e.getRequestId());    &#125;&#125;&#125;</code></pre><p>代码是Java的srping-boot项目</p><p><a href="https://github.com/aliyun/alibabacloud-viapi-demo?spm=a2c6h.12873639.0.0.c08529f2JzpdtR">项目代码下载地址：https://github.com/aliyun/alibabacloud-viapi-demo?spm=a2c6h.12873639.0.0.c08529f2JzpdtR</a></p><h1 id="六、python代码"><a href="#六、python代码" class="headerlink" title="六、python代码"></a>六、python代码</h1><h2 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1.准备工作"></a>1.准备工作</h2><p>在安装和使用阿里云SDK前，确保已经注册阿里云账号并生成访问密钥（AccessKey）。</p><h2 id="2-安装Python-SDK核心库。"><a href="#2-安装Python-SDK核心库。" class="headerlink" title="2.安装Python SDK核心库。"></a>2.安装Python SDK核心库。</h2><p>该SDK包为阿里云Java核心库，无论使用哪个产品的SDK，都必须先#</p><h2 id="3-安装该核心库。"><a href="#3-安装该核心库。" class="headerlink" title="3.安装该核心库。"></a>3.安装该核心库。</h2><p>使用依赖包工具安装（推荐）。</p><h2 id="4-执行如下命令，安装阿里云SDK核心库。"><a href="#4-执行如下命令，安装阿里云SDK核心库。" class="headerlink" title="4.执行如下命令，安装阿里云SDK核心库。"></a>4.执行如下命令，安装阿里云SDK核心库。</h2><pre><code class="hljs shell">pip install aliyun-python-sdk-core</code></pre><h2 id="5-自行下载安装：使用git-clone或其它方式从GitHub下载aliyun-python-sdk-core并自行添加解决方案。"><a href="#5-自行下载安装：使用git-clone或其它方式从GitHub下载aliyun-python-sdk-core并自行添加解决方案。" class="headerlink" title="5.自行下载安装：使用git clone或其它方式从GitHub下载aliyun-python-sdk-core并自行添加解决方案。"></a>5.自行下载安装：使用git clone或其它方式从GitHub下载aliyun-python-sdk-core并自行添加解决方案。</h2><h2 id="6-安装视觉智能API相关服务Python-SDK。"><a href="#6-安装视觉智能API相关服务Python-SDK。" class="headerlink" title="6.安装视觉智能API相关服务Python SDK。"></a>6.安装视觉智能API相关服务Python SDK。</h2><p>使用依赖包工具安装（推荐）。</p><h2 id="7-执行以下命令，安装需要的SDK包。"><a href="#7-执行以下命令，安装需要的SDK包。" class="headerlink" title="7.执行以下命令，安装需要的SDK包。"></a>7.执行以下命令，安装需要的SDK包。</h2><p>仅安装所需要的SDK包即可。<br><pre><code class="hljs shell">人脸人体：pip install aliyun-python-sdk-facebody文字识别：pip install aliyun-python-sdk-ocr商品理解：pip install aliyun-python-sdk-goodstech内容安全：pip install aliyun-python-sdk-imageaudit图像识别：pip install aliyun-python-sdk-imagerecog图像生产：pip install aliyun-python-sdk-imageenhan分割抠图：pip install aliyun-python-sdk-imageseg目标检测：pip install aliyun-python-sdk-objectdet图像分析处理：pip install aliyun-python-sdk-imageprocess视觉搜索：pip install aliyun-python-sdk-imgsearch视频理解：pip install aliyun-python-sdk-videorecog视频生产：pip install aliyun-python-sdk-videoenhan视频分割：pip install aliyun-python-sdk-videoseg自行下载安装：使用git clone或其它方式下载SDK包并自行添加解决方案。详细下载地址如下所示。AI类目SDK链接pypi链接人脸人体aliyun-python-sdk-facebodyaliyun-python-sdk-facebody文字识别aliyun-python-sdk-ocraliyun-python-sdk-ocr商品理解aliyun-python-sdk-goodstechaliyun-python-sdk-goodstech内容安全aliyun-python-sdk-imageauditaliyun-python-sdk-imageaudit图像识别aliyun-python-sdk-imagerecogaliyun-python-sdk-imagerecog图像生产aliyun-python-sdk-imageenhanaliyun-python-sdk-imageenhan分割抠图aliyun-python-sdk-imagesegaliyun-python-sdk-imageseg目标检测aliyun-python-sdk-objectdetaliyun-python-sdk-objectdet视觉搜索aliyun-python-sdk-imgsearchaliyun-python-sdk-imgsearch图像分析处理aliyun-python-sdk-imageprocessaliyun-python-sdk-imageprocess视频生产aliyun-python-sdk-videoenhanaliyun-python-sdk-videoenhan视频理解aliyun-python-sdk-videorecogaliyun-python-sdk-videorecog视频分割aliyun-python-sdk-videosegaliyun-python-sdk-videoseg</code></pre></p><h2 id="8-代码示例"><a href="#8-代码示例" class="headerlink" title="8.代码示例"></a>8.代码示例</h2><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> -*- coding: utf8 -*-</span>from aliyunsdkcore.client import AcsClientfrom aliyunsdkimageenhan.request.v20190930 import MakeSuperResolutionImageRequestfrom aliyunsdkimageenhan.request.v20190930 import ExtendImageStyleRequestfrom aliyunsdkimageenhan.request.v20190930 import RecolorImageRequestfrom aliyunsdkimageenhan.request.v20190930 import ChangeImageSizeRequestfrom aliyunsdkimagerecog.request.v20190930 import RecognizeImageColorRequestfrom aliyunsdkimagerecog.request.v20190930 import RecognizeImageStyleRequestfrom aliyunsdkimagerecog.request.v20190930 import DetectImageElementsRequestfrom aliyunsdkimagerecog.request.v20190930 import TaggingImageRequestfrom aliyunsdkimagerecog.request.v20190930 import RecognizeSceneRequestfrom aliyunsdkfacebody.request.v20191230 import DetectFaceRequestfrom aliyunsdkfacebody.request.v20191230 import RecognizeFaceRequestfrom aliyunsdkfacebody.request.v20191230 import CompareFaceRequestfrom aliyunsdkocr.request.v20191230 import RecognizeCharacterRequestfrom aliyunsdkocr.request.v20191230 import RecognizeTableRequestfrom aliyunsdkocr.request.v20191230 import RecognizeIdentityCardRequestfrom aliyunsdkocr.request.v20191230 import RecognizeBankCardRequestfrom aliyunsdkocr.request.v20191230 import RecognizeBusinessCardRequestfrom aliyunsdkocr.request.v20191230 import RecognizeAccountPageRequestfrom aliyunsdkocr.request.v20191230 import RecognizeDriverLicenseRequestfrom aliyunsdkocr.request.v20191230 import RecognizeDrivingLicenseRequestfrom aliyunsdkocr.request.v20191230 import RecognizeLicensePlateRequestfrom aliyunsdkocr.request.v20191230 import RecognizeVINCodeRequestfrom aliyunsdkocr.request.v20191230 import RecognizeTaxiInvoiceRequestfrom aliyunsdkocr.request.v20191230 import RecognizeTrainTicketRequestfrom aliyunsdkocr.request.v20191230 import RecognizeBusinessLicenseRequestfrom aliyunsdkocr.request.v20191230 import RecognizeStampRequestfrom aliyunsdkgoodstech.request.v20191230 import ClassifyCommodityRequestfrom aliyunsdkimageaudit.request.v20191230 import ScanImageRequestfrom aliyunsdkimageseg.request.v20191230 import SegmentCommonImageRequestfrom aliyunsdkimageseg.request.v20191230 import SegmentBodyRequestfrom aliyunsdkimageseg.request.v20191230 import SegmentCommodityRequestfrom aliyunsdkobjectdet.request.v20191230 import DetectMainBodyRequestfrom aliyunsdkobjectdet.request.v20191230 import DetectVehicleRequest<span class="hljs-meta">#</span><span class="bash"> 创建 AcsClient 实例</span>client = AcsClient(&quot;&lt;your-access-key-id&gt;&quot;, &quot;&lt;your-access-key-secret&gt;&quot;, &quot;cn-shanghai&quot;)<span class="hljs-meta">#</span><span class="bash"> 清晰化/超分辨率</span>request = MakeSuperResolutionImageRequest.MakeSuperResolutionImageRequest()request.set_Url(&quot;http://viapi-demo.oss-cn-shanghai.aliyuncs.com/viapi-demo/images/MakeSuperResolution/sup-dog.png&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 尺寸变换</span>request = ChangeImageSizeRequest.ChangeImageSizeRequest()request.set_Url(&quot;https://viapi-demo.oss-cn-shanghai.aliyuncs.com/viapi-demo/images/ChangeImageSize/change-image-size-src.png&quot;)request.set_Width(500)request.set_Height(600)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 图像元素检测</span>request = DetectImageElementsRequest.DetectImageElementsRequest()request.set_Url(&quot;http://viapi-demo.oss-cn-shanghai.aliyuncs.com/viapi-demo/images/DetectImageElements/detect-elements-src.png&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 风格迁移</span>request = ExtendImageStyleRequest.ExtendImageStyleRequest()request.set_StyleUrl(&quot;https://viapi-demo.oss-cn-shanghai.aliyuncs.com/viapi-demo/images/ExtendImageStyle/styleUrl.jpeg&quot;)request.set_MajorUrl(&quot;https://viapi-demo.oss-cn-shanghai.aliyuncs.com/viapi-demo/images/ExtendImageStyle/majorUrl.jpeg&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 色板识别</span>request = RecognizeImageColorRequest.RecognizeImageColorRequest()request.set_Url(&quot;https://viapi-demo.oss-cn-shanghai.aliyuncs.com/viapi-demo/images/RecolorImage/recolor-1-src.png&quot;)request.set_ColorCount(3)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 风格识别</span>request = RecognizeImageStyleRequest.RecognizeImageStyleRequest()request.set_Url(&quot;https://viapi-demo.oss-cn-shanghai.aliyuncs.com/viapi-demo/images/RecognizeImageStyle/technology.png&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 色彩迁移</span>request = RecolorImageRequest.RecolorImageRequest()<span class="hljs-meta">#</span><span class="bash">自动拓色</span>request.set_Mode(&quot;AUTO&quot;)request.set_Url(&quot;https://viapi-demo.oss-cn-shanghai.aliyuncs.com/viapi-demo/images/RecolorImage/recolor-1-src.png&quot;)request.set_ColorCount(3)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash">参考图拓色</span>request.set_Mode(&quot;REF_PIC&quot;)request.set_RefUrl(&quot;https://viapi-demo.oss-cn-shanghai.aliyuncs.com/viapi-demo/images/RecolorImage/recolor-1-src.png&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash">色板拓色</span>request.set_Mode(&quot;TEMPLATE&quot;)request.set_Url(&quot;https://viapi-demo.oss-cn-shanghai.aliyuncs.com/viapi-demo/images/RecolorImage/recolor-2-src.png&quot;)colorTemplateList = []colorTemplateList.append(&#123;&quot;Color&quot;: &quot;FF0000&quot;&#125;)colorTemplateList.append(&#123;&quot;Color&quot;: &quot;00FF00&quot;&#125;)colorTemplateList.append(&#123;&quot;Color&quot;: &quot;0000FF&quot;&#125;)request.set_ColorTemplates(colorTemplateList)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 通用图像打标</span>request = TaggingImageRequest.TaggingImageRequest();<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://xxx.oss-cn-shanghai.aliyuncs.com/xxx.jpg&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 场景识别</span>request = RecognizeSceneRequest.RecognizeSceneRequest();<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://xxx.oss-cn-shanghai.aliyuncs.com/xxx.jpg&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 人脸检测定位</span>request = DetectFaceRequest.DetectFaceRequest();<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://viapi-demo.oss-cn-shanghai.aliyuncs.com/viapi-demo/images/SegmentCommonImage/segmengImage.png&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 人脸属性识别</span>request = RecognizeFaceRequest.RecognizeFaceRequest();<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://xxx.oss-cn-shanghai.aliyuncs.com/xxx.jpg&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 人脸比对</span>request = CompareFaceRequest.CompareFaceRequest();<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURLA(&quot;https://xxx.oss-cn-shanghai.aliyuncs.com/xxx.jpg&quot;)request.set_ImageURLB(&quot;https://xxx.oss-cn-shanghai.aliyuncs.com/xxx.jpg&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 通用识别</span>request = RecognizeCharacterRequest.RecognizeCharacterRequest();request.set_MinHeight(10);request.set_OutputProbability(True);<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://viapi-demo.oss-cn-shanghai-internal.aliyuncs.com/viapi-demo/images/RecognizeCharacter/recognizeCharacter_demo.jpg&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 表格识别</span>request = RecognizeTableRequest.RecognizeTableRequest();request.set_UseFinanceModel(False);request.set_AssureDirection(False);request.set_HasLine(False);request.set_SkipDetection(False);request.set_OutputFormat(&quot;json&quot;);<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://xxx.oss-cn-shanghai.aliyuncs.com/xxx.jpg&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 身份证识别</span>request = RecognizeIdentityCardRequest.RecognizeIdentityCardRequest();<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://viapi-demo.oss-cn-shanghai.aliyuncs.com/viapi-demo/images/RecognizeIdentityCard/identityCard.jpg&quot;)request.set_Side(&quot;face&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 银行卡识别</span>request = RecognizeBankCardRequest.RecognizeBankCardRequest();<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://viapi-demo.oss-cn-shanghai.aliyuncs.com/viapi-demo/images/RecognizeBankCard/bankcard.jpg&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 名片识别</span>request = RecognizeBusinessCardRequest.RecognizeBusinessCardRequest();<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://xxx.oss-cn-shanghai.aliyuncs.com/xxx.jpg&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 户口页识别</span>request = RecognizeAccountPageRequest.RecognizeAccountPageRequest();<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://xxx.oss-cn-shanghai.aliyuncs.com/xxx.jpg&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 驾驶证识别</span>request = RecognizeDriverLicenseRequest.RecognizeDriverLicenseRequest();request.set_Side(&quot;face&quot;)<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://xxx.oss-cn-shanghai.aliyuncs.com/xxx.jpg&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 行驶证识别</span>request = RecognizeDrivingLicenseRequest.RecognizeDrivingLicenseRequest();request.set_Side(&quot;face&quot;)<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://xxx.oss-cn-shanghai.aliyuncs.com/xxx.jpg&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 车牌识别</span>request = RecognizeLicensePlateRequest.RecognizeLicensePlateRequest();<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://xxx.oss-cn-shanghai.aliyuncs.com/xxx.jpg&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> VIN码识别</span>request = RecognizeVINCodeRequest.RecognizeVINCodeRequest();<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://xxx.oss-cn-shanghai.aliyuncs.com/xxx.jpg&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 出租车发票识别</span>request = RecognizeTaxiInvoiceRequest.RecognizeTaxiInvoiceRequest();<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://xxx.oss-cn-shanghai.aliyuncs.com/xxx.jpg&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 火车票识别</span>request = RecognizeTrainTicketRequest.RecognizeTrainTicketRequest();<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://xxx.oss-cn-shanghai.aliyuncs.com/xxx.jpg&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 营业执照识别</span>request = RecognizeBusinessLicenseRequest.RecognizeBusinessLicenseRequest();<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://xxx.oss-cn-shanghai.aliyuncs.com/xxx.jpg&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 公章识别</span>request = RecognizeStampRequest.RecognizeStampRequest();<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://xxx.oss-cn-shanghai.aliyuncs.com/xxx.jpg&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 商品分类</span>request = ClassifyCommodityRequest.ClassifyCommodityRequest();<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://viapi-demo.oss-cn-shanghai.aliyuncs.com/viapi-demo/images/SegmentCommonImage/segmentimage-src-hu.jpeg&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 图片智能鉴黄</span>request = ScanImageRequest.ScanImageRequest();scenes = []scenes.append(&quot;porn&quot;)request.set_Scenes(scenes)tasks = []<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>tasks.append(&#123;&quot;DataId&quot;:&quot;&lt;your-data-id&gt;&quot;, &quot;ImageURL&quot;:&quot;https://viapi-demo.oss-cn-shanghai.aliyuncs.com/viapi-demo/images/ChangeImageSize/change-image-size-src.png&quot;&#125;)request.set_Tasks(tasks)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 通用分割</span>request = SegmentCommonImageRequest.SegmentCommonImageRequest();<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://viapi-demo.oss-cn-shanghai.aliyuncs.com/viapi-demo/images/SegmentCommonImage/segmentimage-src-hu.jpeg&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 人像分割</span>request = SegmentBodyRequest.SegmentBodyRequest();<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://viapi-demo.oss-cn-shanghai.aliyuncs.com/viapi-demo/images/SegmentBody/%E4%BA%BA%E5%83%8F%E5%88%86%E5%89%B2.png&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 商品分割</span>request = SegmentCommodityRequest.SegmentCommodityRequest();<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://viapi-demo.oss-cn-shanghai.aliyuncs.com/viapi-demo/images/SegmentCommodity/%E5%95%86%E5%93%81.png&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 主体检测</span>request = DetectMainBodyRequest.DetectMainBodyRequest();<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://viapi-demo.oss-cn-shanghai.aliyuncs.com/viapi-demo/images/SegmentCommonImage/segmentimage-src-hu.jpeg&quot;)response = client.do_action_with_exception(request)print(response)<span class="hljs-meta">#</span><span class="bash"> 机动车检测</span>request = DetectVehicleRequest.DetectVehicleRequest();<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment"># 如下url替换为自有的上海region的oss文件地址</span></span>request.set_ImageURL(&quot;https://xxx.oss-cn-shanghai.aliyuncs.com/xxx.jpg&quot;)response = client.do_action_with_exception(request)print(response)</code></pre><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://developer.aliyun.com/adc/student/bootcamp/ai/2?spm=a2c6h.13788107.J_3120529270.4.450750a3fjp2m1&amp;accounttraceid=9cafb5972ade4cb484e00857d47625bbdkwh">达摩院特别版-视觉AI训练营</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>阿里云</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阿里云</tag>
      
      <tag>达摩院</tag>
      
      <tag>AI</tag>
      
      <tag>应用</tag>
      
      <tag>视觉</tag>
      
      <tag>身份证识别</tag>
      
      <tag>文字识别</tag>
      
      <tag>OCR</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Class 1 达摩院视觉AI技术应用探索</title>
    <link href="/2020/11/27/%E9%98%BF%E9%87%8C%E4%BA%91/Class%201%20%E8%BE%BE%E6%91%A9%E9%99%A2%E8%A7%86%E8%A7%89AI%E6%8A%80%E6%9C%AF%E5%BA%94%E7%94%A8%E6%8E%A2%E7%B4%A2/"/>
    <url>/2020/11/27/%E9%98%BF%E9%87%8C%E4%BA%91/Class%201%20%E8%BE%BE%E6%91%A9%E9%99%A2%E8%A7%86%E8%A7%89AI%E6%8A%80%E6%9C%AF%E5%BA%94%E7%94%A8%E6%8E%A2%E7%B4%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="一、视觉生产——定义"><a href="#一、视觉生产——定义" class="headerlink" title="一、视觉生产——定义"></a>一、视觉生产——定义</h1><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606464675792-QQ%E6%88%AA%E5%9B%BE20201127161102.png" alt=""></p><p>通过一个/一系列视觉过程，产出新的视觉表达。<br>产出:人或机器能够感知的图像视频，而不是标签或特征；<br>要求:新的，和输入不一样的。<br>输入（参数/素材）——&gt;过程（视觉生产）——&gt;产出（素材/成品）</p><h1 id="二、视觉生产——分类"><a href="#二、视觉生产——分类" class="headerlink" title="二、视觉生产——分类"></a>二、视觉生产——分类</h1><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606464721190-QQ%E6%88%AA%E5%9B%BE20201127161145.png" alt=""></p><p>1.生成:从0到1<br>2.拓展:从1到N<br>3.摘要:从N到1<br>4.升维:从An到An+1（比如2D到3D，静态到动态等）<br>5.增强/变换:从A到B（改）<br>6.插入/合成:A+B=C（增）<br>7.擦除:A-B=C（删）</p><h1 id="三、视觉生产——通用基础框架"><a href="#三、视觉生产——通用基础框架" class="headerlink" title="三、视觉生产——通用基础框架"></a>三、视觉生产——通用基础框架</h1><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606464776274-QQ%E6%88%AA%E5%9B%BE20201127161244.png" alt=""></p><p>（请求）输入（参数、素材等）<br>（分发）生产类型（通用生成、素材合成等）<br>（服务）视觉生产引擎（生成引擎、搜索引擎）<br>（响应）输出图像/视频/3D（素材、案例等）</p><h1 id="四、视觉生产——五个关键维度（由下至上，由浅入深）"><a href="#四、视觉生产——五个关键维度（由下至上，由浅入深）" class="headerlink" title="四、视觉生产——五个关键维度（由下至上，由浅入深）"></a>四、视觉生产——五个关键维度（由下至上，由浅入深）</h1><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606464804833-QQ%E6%88%AA%E5%9B%BE20201127160922.png" alt=""></p><ul><li>带来用户/商业价值（可用）</li><li>提供用户预期的抓手（可控）</li><li>保证结果的丰富性（多样）</li><li>合乎语义/内容逻辑（合理）</li><li>满足视觉/美学表现（可看）</li></ul><h1 id="五、精细理解——分割抠图"><a href="#五、精细理解——分割抠图" class="headerlink" title="五、精细理解——分割抠图"></a>五、精细理解——分割抠图</h1><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606464854114-QQ%E6%88%AA%E5%9B%BE20201127161348.png" alt=""></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606464944259-QQ%E6%88%AA%E5%9B%BE20201127161449.png" alt=""></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606464967105-QQ%E6%88%AA%E5%9B%BE20201127161557.png" alt=""></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127161704.png" alt=""></p><p>识别：知道是什么<br>检测：识别+知道在哪儿<br>分割：识别+检测+每一个像素是什么</p><h1 id="六、视觉生成——框架流程"><a href="#六、视觉生成——框架流程" class="headerlink" title="六、视觉生成——框架流程"></a>六、视觉生成——框架流程</h1><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127161758.png" alt=""></p><p>1.理需求<br>2.定草图<br>3.选状态<br>4.调细节<br>5.生成图<br>6.评好坏</p><p>素材准备——基础特——智能特效——智能编排</p><h1 id="七、视觉编辑"><a href="#七、视觉编辑" class="headerlink" title="七、视觉编辑"></a>七、视觉编辑</h1><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127162042.png" alt=""><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127162043.png" alt=""><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127162047.png" alt=""><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127162046.png" alt=""><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127162045.png" alt=""><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127162044.png" alt=""></p><p>视觉植入：可实现在视频里进行文字、图片的拼接插入或者删除<br>画幅变化：调整画幅比例、图片尺寸等</p><h1 id="八、视觉增强（分辨率、帧率、色彩）"><a href="#八、视觉增强（分辨率、帧率、色彩）" class="headerlink" title="八、视觉增强（分辨率、帧率、色彩）"></a>八、视觉增强（分辨率、帧率、色彩）</h1><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127162140.png" alt=""><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127162245.png" alt=""><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127162244.png" alt=""></p><p>人脸修复增强、渲染图超分、视频超分、插帧、HDR色彩扩展、风格迁移</p><h1 id="九、视觉制造"><a href="#九、视觉制造" class="headerlink" title="九、视觉制造"></a>九、视觉制造</h1><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127162340.png" alt=""><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127162401.png" alt=""></p><p>实体设计制造、服装几何生成、多样性拓展等</p><h1 id="十、视觉智能开放平台"><a href="#十、视觉智能开放平台" class="headerlink" title="十、视觉智能开放平台"></a>十、视觉智能开放平台</h1><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201127162454.png" alt=""></p><p><a href="vision.aliyun.com">视觉开放平台</a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://developer.aliyun.com/adc/student/bootcamp/ai/2?spm=a2c6h.13788107.J_3120529270.4.450750a3fjp2m1&amp;accounttraceid=9cafb5972ade4cb484e00857d47625bbdkwh">达摩院特别版-视觉AI训练营</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>阿里云</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阿里云</tag>
      
      <tag>达摩院</tag>
      
      <tag>AI</tag>
      
      <tag>应用</tag>
      
      <tag>视觉</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Class 1 基于ECS搭建FTP服务</title>
    <link href="/2020/11/27/%E9%98%BF%E9%87%8C%E4%BA%91/Class%201%20%E5%9F%BA%E4%BA%8EECS%E6%90%AD%E5%BB%BAFTP%E6%9C%8D%E5%8A%A1/"/>
    <url>/2020/11/27/%E9%98%BF%E9%87%8C%E4%BA%91/Class%201%20%E5%9F%BA%E4%BA%8EECS%E6%90%AD%E5%BB%BAFTP%E6%9C%8D%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="一-ssh连接远程服务器"><a href="#一-ssh连接远程服务器" class="headerlink" title="一.ssh连接远程服务器"></a>一.ssh连接远程服务器</h1><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606447302650-2.PNG" alt=""></p><h1 id="二-安装vsftpd"><a href="#二-安装vsftpd" class="headerlink" title="二.安装vsftpd"></a>二.安装vsftpd</h1><h3 id="1-运行以下命令安装vsftpd。"><a href="#1-运行以下命令安装vsftpd。" class="headerlink" title="1.运行以下命令安装vsftpd。"></a>1.运行以下命令安装vsftpd。</h3><pre><code class="hljs shell">yum install -y vsftpd</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606447372928-3.PNG" alt=""></p><h3 id="2-运行以下命令设置FTP服务开机自启动。"><a href="#2-运行以下命令设置FTP服务开机自启动。" class="headerlink" title="2.运行以下命令设置FTP服务开机自启动。"></a>2.运行以下命令设置FTP服务开机自启动。</h3><pre><code class="hljs shell">systemctl enable vsftpd.service</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606447411683-4.PNG" alt=""></p><h3 id="3-启动FTP服务。"><a href="#3-启动FTP服务。" class="headerlink" title="3.启动FTP服务。"></a>3.启动FTP服务。</h3><pre><code class="hljs shell">systemctl start vsftpd.service</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606447463450-5.PNG" alt=""></p><h3 id="4-运行以下命令查看FTP服务监听的端口。"><a href="#4-运行以下命令查看FTP服务监听的端口。" class="headerlink" title="4.运行以下命令查看FTP服务监听的端口。"></a>4.运行以下命令查看FTP服务监听的端口。</h3><pre><code class="hljs shell">netstat -antup | grep ftp</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606447508354-6.PNG" alt=""></p><p>如图所示，表示FTP服务已启动，监听的端口号为 21。vsftpd默认已开启匿名访问功能，无需输入用户名密码即可登录FTP服务器，但没有修改或上传文件的权限。</p><h1 id="三-配置vsftpd"><a href="#三-配置vsftpd" class="headerlink" title="三.配置vsftpd"></a>三.配置vsftpd</h1><p>vsftpd（very secure FTP daemon）是一款在Linux发行版中最受推崇的FTP服务器。vsftpd支持匿名访问和本地用户模式两种访问方式。匿名访问方式任何用户都可以访问搭建的FTP服务；本地用户模式只支持添加的本地用户访问搭建的FTP服务。</p><ul><li>说明: 匿名用户模式和本地用户模式只可同时配置一种。</li></ul><h2 id="匿名用户模式"><a href="#匿名用户模式" class="headerlink" title="匿名用户模式"></a>匿名用户模式</h2><h3 id="1-修改配置文件vsftpd-conf。"><a href="#1-修改配置文件vsftpd-conf。" class="headerlink" title="1.  修改配置文件vsftpd.conf。"></a>1.  修改配置文件vsftpd.conf。</h3><pre><code class="hljs shell">vim /etc/vsftpd/vsftpd.conf</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606447646260-7.PNG" alt=""></p><p>将匿名上传权限 anon_upload_enable=YES 的注释解开。</p><h3 id="2-按ESC键退出编辑模式，输入-wq-保存并退出vim。"><a href="#2-按ESC键退出编辑模式，输入-wq-保存并退出vim。" class="headerlink" title="2.  按ESC键退出编辑模式，输入:wq 保存并退出vim。"></a>2.  按ESC键退出编辑模式，输入:wq 保存并退出vim。</h3><h3 id="3-更改-var-ftp-pub目录的权限，为FTP用户添加写权限。"><a href="#3-更改-var-ftp-pub目录的权限，为FTP用户添加写权限。" class="headerlink" title="3.  更改/var/ftp/pub目录的权限，为FTP用户添加写权限。"></a>3.  更改/var/ftp/pub目录的权限，为FTP用户添加写权限。</h3><pre><code class="hljs shell">chmod o+w /var/ftp/pub/</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606447723097-9.PNG" alt=""></p><h3 id="4-重启FTP服务。"><a href="#4-重启FTP服务。" class="headerlink" title="4.  重启FTP服务。"></a>4.  重启FTP服务。</h3><pre><code class="hljs shell">systemctl restart vsftpd.service</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606447784558-10.PNG" alt=""></p><h2 id="本地用户模式"><a href="#本地用户模式" class="headerlink" title="本地用户模式"></a>本地用户模式</h2><h3 id="1-为FTP服务创建一个Linux用户。"><a href="#1-为FTP服务创建一个Linux用户。" class="headerlink" title="1.  为FTP服务创建一个Linux用户。"></a>1.  为FTP服务创建一个Linux用户。</h3><pre><code class="hljs shell">adduser ftptest</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606447840217-11.PNG" alt=""></p><p>为用户设置密码。</p><pre><code class="hljs shell">passwd ftptest</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606447901540-12.PNG" alt=""></p><h3 id="2-创建一个供FTP服务使用的文件目录。"><a href="#2-创建一个供FTP服务使用的文件目录。" class="headerlink" title="2.  创建一个供FTP服务使用的文件目录。"></a>2.  创建一个供FTP服务使用的文件目录。</h3><pre><code class="hljs shell">mkdir /var/ftp/test</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606447950244-13.PNG" alt=""></p><h3 id="3-更改-var-ftp-test目录的拥有者为ftptest。"><a href="#3-更改-var-ftp-test目录的拥有者为ftptest。" class="headerlink" title="3.  更改/var/ftp/test目录的拥有者为ftptest。"></a>3.  更改/var/ftp/test目录的拥有者为ftptest。</h3><pre><code class="hljs awk">chown -R ftptest:ftptest <span class="hljs-regexp">/var/</span>ftp/test</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606447990186-14.PNG" alt=""></p><h3 id="4-修改vsftpd-conf配置文件。"><a href="#4-修改vsftpd-conf配置文件。" class="headerlink" title="4.  修改vsftpd.conf配置文件。"></a>4.  修改vsftpd.conf配置文件。</h3><p>配置FTP为主动模式请执行如下命令:</p><pre><code class="hljs shell">sed -i &#x27;s/anonymous_enable=YES/anonymous_enable=NO/&#x27; /etc/vsftpd/vsftpd.conf #禁止匿名登录FTP服务器 sed -i &#x27;s/listen=NO/listen=YES/&#x27; /etc/vsftpd/vsftpd.conf #监听IPv4 sockets sed -i &#x27;s/listen_ipv6=YES/#listen_ipv6=YES/&#x27; /etc/vsftpd/vsftpd.conf #关闭监听IPv6 sockets sed -i &#x27;s/#chroot_local_user=YES/chroot_local_user=YES/&#x27; /etc/vsftpd/vsftpd.conf #全部用户被限制在主目录 sed -i &#x27;s/#chroot_list_enable=YES/chroot_list_enable=YES/&#x27; /etc/vsftpd/vsftpd.conf #启用例外用户名单 sed -i &#x27;s/#chroot_list_file=/chroot_list_file=/&#x27; /etc/vsftpd/vsftpd.conf #指定例外用户列表文件，列表中的用户不被锁定在主目录 echo &quot;allow_writeable_chroot=YES&quot; &gt;&gt; /etc/vsftpd/vsftpd.conf echo &quot;local_root=/var/ftp/test&quot; &gt;&gt; /etc/vsftpd/vsftpd.conf #设置本地用户登录后所在的目录</code></pre><ul><li>配置FTP为被动模式请执行如下命令：</li></ul><pre><code class="hljs shell">sed -i &#x27;s/anonymous_enable=YES/anonymous_enable=NO/&#x27; /etc/vsftpd/vsftpd.conf #禁止匿名登录FTP服务器 sed -i &#x27;s/listen=NO/listen=YES/&#x27; /etc/vsftpd/vsftpd.conf #监听IPv4 sockets sed -i &#x27;s/listen_ipv6=YES/#listen_ipv6=YES/&#x27; /etc/vsftpd/vsftpd.conf #关闭监听IPv6 sockets sed -i &#x27;s/#chroot_local_user=YES/chroot_local_user=YES/&#x27; /etc/vsftpd/vsftpd.conf #全部用户被限制在主目录 sed -i &#x27;s/#chroot_list_enable=YES/chroot_list_enable=YES/&#x27; /etc/vsftpd/vsftpd.conf #启用例外用户名单 sed -i &#x27;s/#chroot_list_file=/chroot_list_file=/&#x27; /etc/vsftpd/vsftpd.conf #指定例外用户列表文件，列表中的用户不被锁定在主目录 echo &quot;allow_writeable_chroot=YES&quot; &gt;&gt; /etc/vsftpd/vsftpd.conf echo &quot;local_root=/var/ftp/test&quot; &gt;&gt; /etc/vsftpd/vsftpd.conf #设置本地用户登录后所在的目录 echo &quot;pasv_enable=YES&quot; &gt;&gt; /etc/vsftpd/vsftpd.conf #开启被动模式 echo &quot;pasv_address=&lt;FTP服务器公网IP地址&gt;&quot; &gt;&gt; /etc/vsftpd/vsftpd.conf #本教程中为ECS服务器弹性IP echo &quot;pasv_min_port=20&quot; &gt;&gt; /etc/vsftpd/vsftpd.conf #设置被动模式下，建立数据传输可使用的端口范围的最小值 echo &quot;pasv_max_port=21&quot; &gt;&gt; /etc/vsftpd/vsftpd.conf #设置被动模式下，建立数据传输可使用的端口范围的最大值</code></pre><h3 id="5-在-etc-vsftpd目录下创建chroot-list文件，并在文件中写入例外用户名单。"><a href="#5-在-etc-vsftpd目录下创建chroot-list文件，并在文件中写入例外用户名单。" class="headerlink" title="5.  在/etc/vsftpd目录下创建chroot_list文件，并在文件中写入例外用户名单。"></a>5.  在/etc/vsftpd目录下创建chroot_list文件，并在文件中写入例外用户名单。</h3><h1 id="使用vim命令编辑chroot-list文件，添加例外用户名单。此名单中的用户不会被锁定在主目录，可以访问其他目录。"><a href="#使用vim命令编辑chroot-list文件，添加例外用户名单。此名单中的用户不会被锁定在主目录，可以访问其他目录。" class="headerlink" title="使用vim命令编辑chroot_list文件，添加例外用户名单。此名单中的用户不会被锁定在主目录，可以访问其他目录。"></a>使用vim命令编辑chroot_list文件，添加例外用户名单。此名单中的用户不会被锁定在主目录，可以访问其他目录。</h1><pre><code class="hljs shell">vim /etc/vsftpd/chroot_list</code></pre><p>没有例外用户时，也必须创建chroot_list文件，内容可为空。</p><h3 id="6-重启FTP服务。"><a href="#6-重启FTP服务。" class="headerlink" title="6.  重启FTP服务。"></a>6.  重启FTP服务。</h3><pre><code class="hljs shell">systemctl restart vsftpd.service</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606448489247-16.PNG" alt=""></p><h1 id="四-客户端测试"><a href="#四-客户端测试" class="headerlink" title="四.客户端测试"></a>四.客户端测试</h1><p>FTP客户端、Windows命令行工具或浏览器均可用来测试FTP服务器。（此步骤仅适用于本地用户，匿名模式无需进行测试操作）</p><p>说明：使用浏览器访问FTP服务器出错时，建议您清除浏览器缓存后再尝试。</p><h3 id="1-打开搜狗浏览器，在地址栏中输入ftp-139-224-107-98"><a href="#1-打开搜狗浏览器，在地址栏中输入ftp-139-224-107-98" class="headerlink" title="1.    打开搜狗浏览器，在地址栏中输入ftp://139.224.107.98/"></a>1.    打开搜狗浏览器，在地址栏中输入ftp://139.224.107.98/</h3><h3 id="2-在弹出的对话框中，输入用户名和密码。"><a href="#2-在弹出的对话框中，输入用户名和密码。" class="headerlink" title="2.    在弹出的对话框中，输入用户名和密码。"></a>2.    在弹出的对话框中，输入用户名和密码。</h3><h3 id="3-登录成功界面如下，此时可对FTP文件进行相应权限的操作。"><a href="#3-登录成功界面如下，此时可对FTP文件进行相应权限的操作。" class="headerlink" title="3.    登录成功界面如下，此时可对FTP文件进行相应权限的操作。"></a>3.    登录成功界面如下，此时可对FTP文件进行相应权限的操作。</h3><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/2020-11-27/1606448628627-17.PNG" alt=""></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://developer.aliyun.com/adc/student/bootcamp/?spm=a2c6h.13788107.J_3120529270.3.450750a3CaVHui">云上实践 云上成长 ECS 7天实践训练营</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>阿里云</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阿里云</tag>
      
      <tag>在家学习</tag>
      
      <tag>ECS</tag>
      
      <tag>FTP服务</tag>
      
      <tag>进阶班</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200823】</title>
    <link href="/2020/08/23/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200823%E3%80%91/"/>
    <url>/2020/08/23/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200823%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="遗传算法"><a href="#遗传算法" class="headerlink" title="遗传算法"></a>遗传算法</h1><p>用遗传算法求解下列函数最大值。</p><script type="math/tex; mode=display">z = \sin x+\cos y+0.1(x+y)</script><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201130194141.png" alt=""></p><pre><code class="hljs matlab">clc, clear, close all<span class="hljs-comment">%%基础参数</span>N = <span class="hljs-number">100</span>;  <span class="hljs-comment">%种群内个体数目</span>N_chrom = <span class="hljs-number">2</span>; <span class="hljs-comment">%染色体节点数</span>iter = <span class="hljs-number">2000</span>; <span class="hljs-comment">%迭代次数</span>mut = <span class="hljs-number">0.2</span>;  <span class="hljs-comment">%突变概率</span>acr = <span class="hljs-number">0.2</span>; <span class="hljs-comment">%交叉概率</span>best = <span class="hljs-number">1</span>;chrom_range = [<span class="hljs-number">-10</span> <span class="hljs-number">-10</span>;<span class="hljs-number">10</span> <span class="hljs-number">10</span>];<span class="hljs-comment">%每个节点的值的区间</span>chrom = <span class="hljs-built_in">zeros</span>(N, N_chrom);<span class="hljs-comment">%存放染色体的矩阵</span>fitness = <span class="hljs-built_in">zeros</span>(N, <span class="hljs-number">1</span>);<span class="hljs-comment">%存放染色体的适应度</span>fitness_ave = <span class="hljs-built_in">zeros</span>(<span class="hljs-number">1</span>, iter);<span class="hljs-comment">%存放每一代的平均适应度</span>fitness_best = <span class="hljs-built_in">zeros</span>(<span class="hljs-number">1</span>, iter);<span class="hljs-comment">%存放每一代的最优适应度</span>chrom_best = <span class="hljs-built_in">zeros</span>(<span class="hljs-number">1</span>, N_chrom+<span class="hljs-number">1</span>);<span class="hljs-comment">%存放当前代的最优染色体与适应度</span><span class="hljs-comment">%%初始化</span>chrom = Initialize(N, N_chrom, chrom_range); <span class="hljs-comment">%初始化染色体</span>fitness = CalFitness(chrom, N, N_chrom); <span class="hljs-comment">%计算适应度</span>chrom_best = FindBest(chrom, fitness, N_chrom); <span class="hljs-comment">%寻找最优染色体</span>fitness_best(<span class="hljs-number">1</span>) = chrom_best(<span class="hljs-keyword">end</span>); <span class="hljs-comment">%将当前最优存入矩阵当中</span>fitness_ave(<span class="hljs-number">1</span>) = CalAveFitness(fitness); <span class="hljs-comment">%将当前平均适应度存入矩阵当中</span><span class="hljs-keyword">for</span> t = <span class="hljs-number">2</span>:iter    chrom = MutChrom(chrom, mut, N, N_chrom, chrom_range, t, iter); <span class="hljs-comment">%变异</span>    chrom = AcrChrom(chrom, acr, N, N_chrom); <span class="hljs-comment">%交叉</span>    fitness = CalFitness(chrom, N, N_chrom); <span class="hljs-comment">%计算适应度</span>    chrom_best_temp = FindBest(chrom, fitness, N_chrom); <span class="hljs-comment">%寻找最优染色体</span>    <span class="hljs-keyword">if</span> chrom_best_temp(<span class="hljs-keyword">end</span>)&gt;chrom_best(<span class="hljs-keyword">end</span>) <span class="hljs-comment">%替换掉当前储存的最优</span>        chrom_best = chrom_best_temp;    <span class="hljs-keyword">end</span>    <span class="hljs-comment">%%替换掉最劣</span>    [chrom, fitness] = ReplaceWorse(chrom, chrom_best, fitness);    fitness_best(t) = chrom_best(<span class="hljs-keyword">end</span>); <span class="hljs-comment">%将当前最优存入矩阵当中</span>    fitness_ave(t) = CalAveFitness(fitness); <span class="hljs-comment">%将当前平均适应度存入矩阵当中</span><span class="hljs-keyword">end</span><span class="hljs-comment">%%作图</span><span class="hljs-built_in">figure</span>(<span class="hljs-number">1</span>)<span class="hljs-built_in">plot</span>(<span class="hljs-number">1</span>:iter, fitness_ave, <span class="hljs-string">&#x27;r&#x27;</span>, <span class="hljs-number">1</span>:iter, fitness_best, <span class="hljs-string">&#x27;b&#x27;</span>)grid on<span class="hljs-built_in">legend</span>(<span class="hljs-string">&#x27;平均适应度&#x27;</span>, <span class="hljs-string">&#x27;最优适应度&#x27;</span>)e = PlotModel(chrom_best)<span class="hljs-comment">%%输出结果</span><span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;最优染色体为&#x27;</span>, num2str(chrom_best(<span class="hljs-number">1</span>:<span class="hljs-keyword">end</span><span class="hljs-number">-1</span>))])<span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;最优适应度为&#x27;</span>, num2str(chrom_best(<span class="hljs-keyword">end</span>))])</code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://blog.csdn.net/Hanpu_Liang/article/details/78169525">遗传算法简单介绍与MATLAB实现（一）</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://blog.csdn.net/Hanpu_Liang/article/details/78172537">遗传算法简单介绍与MATLAB实现（二）</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://blog.csdn.net/Hanpu_Liang/article/details/78173909">遗传算法简单介绍与MATLAB实现（三）</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200822】</title>
    <link href="/2020/08/22/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200822%E3%80%91/"/>
    <url>/2020/08/22/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200822%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="线性规划与非线性规划之间转换"><a href="#线性规划与非线性规划之间转换" class="headerlink" title="线性规划与非线性规划之间转换"></a>线性规划与非线性规划之间转换</h1><h2 id="线性规划"><a href="#线性规划" class="headerlink" title="线性规划"></a>线性规划</h2><p class="note note-primary">  分析方案</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201130193540.png" alt=""></p><pre><code class="hljs matlab">f=[<span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span>]; <span class="hljs-comment">% 目标函数的系数矩阵</span>intcon = [<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> <span class="hljs-number">5</span> <span class="hljs-number">6</span> <span class="hljs-number">7</span>]; <span class="hljs-comment">% 整数所在位置，题目没有要求，所以是空</span>A = [<span class="hljs-number">4</span> <span class="hljs-number">3</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">0</span>;<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">2</span>]; <span class="hljs-comment">% 不等式约束的变量系数矩阵</span>b = [<span class="hljs-number">-50</span>;<span class="hljs-number">-20</span>,<span class="hljs-number">-15</span>]; <span class="hljs-comment">% 不等式约束的资源数</span>[x,fval] = intlinprog(f,intcon,-A,b); <span class="hljs-comment">% fval代表最优解处的函数值</span></code></pre><pre><code class="hljs matlab">model:sets:moshi/<span class="hljs-number">1.</span><span class="hljs-number">.7</span>/:x;xuqiu/<span class="hljs-number">1.</span><span class="hljs-number">.3</span>/:b;link(moshi,xuqiu):c;endsetsdata:c=<span class="hljs-number">4</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">3</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">2</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">3</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">2</span>;b=<span class="hljs-number">50</span> <span class="hljs-number">20</span> <span class="hljs-number">15</span>;enddata<span class="hljs-built_in">min</span>=@sum(moshi:x);@<span class="hljs-keyword">for</span>(xuqiu(<span class="hljs-built_in">j</span>):@sum(moshi(<span class="hljs-built_in">i</span>):c(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>)*x(<span class="hljs-built_in">i</span>))&gt;b(<span class="hljs-built_in">j</span>));@<span class="hljs-keyword">for</span>(moshi(<span class="hljs-built_in">i</span>):@gin(x(<span class="hljs-built_in">i</span>)));<span class="hljs-keyword">end</span></code></pre><h2 id="非线性规划"><a href="#非线性规划" class="headerlink" title="非线性规划"></a>非线性规划</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201130193839.png" alt=""><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201130193840.png" alt=""><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201130193841.png" alt=""><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201130193842.png" alt=""><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201130193859.png" alt=""></p><pre><code class="hljs matlab">model:sets:moshi/<span class="hljs-number">1.</span><span class="hljs-number">.3</span>/:x;xuqiu/<span class="hljs-number">1.</span><span class="hljs-number">.3</span>/:a,b;link(moshi,xuqiu):r;endsetsdata:a=<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>;b=<span class="hljs-number">50</span>,<span class="hljs-number">20</span>,<span class="hljs-number">15</span>;enddata<span class="hljs-built_in">min</span>=@sum(moshi:x);@<span class="hljs-keyword">for</span>(xuqiu(<span class="hljs-built_in">j</span>):@sum(moshi(<span class="hljs-built_in">i</span>):r(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>)*x(<span class="hljs-built_in">i</span>))&gt;b(<span class="hljs-built_in">j</span>));@<span class="hljs-keyword">for</span>(moshi(<span class="hljs-built_in">i</span>):@sum(xuqiu(<span class="hljs-built_in">j</span>):a(<span class="hljs-built_in">j</span>)*r(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>))&lt;<span class="hljs-number">19</span>;@sum(xuqiu(<span class="hljs-built_in">j</span>):a(<span class="hljs-built_in">j</span>)*r(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>))&gt;<span class="hljs-number">16</span>);@<span class="hljs-keyword">for</span>(moshi(<span class="hljs-built_in">i</span>):@gin(x(<span class="hljs-built_in">i</span>));@<span class="hljs-keyword">for</span>(link:@gin(r)));@for(moshi(i)|i#le#2:x(i)&gt;x(i+1));@sum(moshi:x)&lt;<span class="hljs-number">28</span>;@sum(moshi:x)&gt;<span class="hljs-number">23</span>;<span class="hljs-keyword">end</span></code></pre><pre><code class="hljs matlab">Local optimal solution found.  Objective value:                              <span class="hljs-number">27.00000</span>  Objective bound:                              <span class="hljs-number">27.00000</span>  Infeasibilities:                              <span class="hljs-number">0.000000</span>  Extended solver steps:                              <span class="hljs-number">22</span>  Total solver iterations:                           <span class="hljs-number">294</span>  Elapsed runtime seconds:                          <span class="hljs-number">0.85</span>  Model Class:                                      PIQP  Total variables:                     <span class="hljs-number">12</span>  Nonlinear variables:                 <span class="hljs-number">12</span>  Integer variables:                   <span class="hljs-number">12</span>  Total constraints:                   <span class="hljs-number">14</span>  Nonlinear constraints:                <span class="hljs-number">3</span>  Total nonzeros:                      <span class="hljs-number">49</span>  Nonlinear nonzeros:                   <span class="hljs-number">9</span>                                Variable           Value        Reduced Cost                                   X( <span class="hljs-number">1</span>)        <span class="hljs-number">15.00000</span>            <span class="hljs-number">1.000000</span>                                   X( <span class="hljs-number">2</span>)        <span class="hljs-number">12.00000</span>            <span class="hljs-number">1.000000</span>                                   X( <span class="hljs-number">3</span>)        <span class="hljs-number">0.000000</span>            <span class="hljs-number">1.000000</span>                                   A( <span class="hljs-number">1</span>)        <span class="hljs-number">4.000000</span>            <span class="hljs-number">0.000000</span>                                   A( <span class="hljs-number">2</span>)        <span class="hljs-number">6.000000</span>            <span class="hljs-number">0.000000</span>                                   A( <span class="hljs-number">3</span>)        <span class="hljs-number">8.000000</span>            <span class="hljs-number">0.000000</span>                                   B( <span class="hljs-number">1</span>)        <span class="hljs-number">50.00000</span>            <span class="hljs-number">0.000000</span>                                   B( <span class="hljs-number">2</span>)        <span class="hljs-number">20.00000</span>            <span class="hljs-number">0.000000</span>                                   B( <span class="hljs-number">3</span>)        <span class="hljs-number">15.00000</span>            <span class="hljs-number">0.000000</span>                                R( <span class="hljs-number">1</span>, <span class="hljs-number">1</span>)        <span class="hljs-number">1.000000</span>            <span class="hljs-number">0.000000</span>                                R( <span class="hljs-number">1</span>, <span class="hljs-number">2</span>)        <span class="hljs-number">1.000000</span>            <span class="hljs-number">0.000000</span>                                R( <span class="hljs-number">1</span>, <span class="hljs-number">3</span>)        <span class="hljs-number">1.000000</span>            <span class="hljs-number">0.000000</span>                                R( <span class="hljs-number">2</span>, <span class="hljs-number">1</span>)        <span class="hljs-number">3.000000</span>            <span class="hljs-number">0.000000</span>                                R( <span class="hljs-number">2</span>, <span class="hljs-number">2</span>)        <span class="hljs-number">1.000000</span>            <span class="hljs-number">0.000000</span>                                R( <span class="hljs-number">2</span>, <span class="hljs-number">3</span>)        <span class="hljs-number">0.000000</span>            <span class="hljs-number">0.000000</span>                                R( <span class="hljs-number">3</span>, <span class="hljs-number">1</span>)        <span class="hljs-number">0.000000</span>            <span class="hljs-number">0.000000</span>                                R( <span class="hljs-number">3</span>, <span class="hljs-number">2</span>)        <span class="hljs-number">3.000000</span>            <span class="hljs-number">0.000000</span>                                R( <span class="hljs-number">3</span>, <span class="hljs-number">3</span>)        <span class="hljs-number">0.000000</span>            <span class="hljs-number">0.000000</span></code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>线性规划</tag>
      
      <tag>非线性规划</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200820】</title>
    <link href="/2020/08/20/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200820%E3%80%91/"/>
    <url>/2020/08/20/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200820%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="拟合"><a href="#拟合" class="headerlink" title="拟合"></a>拟合</h1><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p>表 1<br>x  0   3   5   7   9   11   12   13   14   15<br>y  0 1.2 1.7 2.0 2.1 2.0 1.8 1.2 1.0 1.6<br>拟合求解函数表达式。<br><pre><code class="hljs matlab"><span class="hljs-comment">%绘制图像，初步判断</span>x=[<span class="hljs-number">0</span> <span class="hljs-number">3</span> <span class="hljs-number">5</span> <span class="hljs-number">7</span> <span class="hljs-number">9</span> <span class="hljs-number">11</span> <span class="hljs-number">12</span> <span class="hljs-number">13</span> <span class="hljs-number">14</span> <span class="hljs-number">15</span>];y=[<span class="hljs-number">0</span> <span class="hljs-number">1.2</span> <span class="hljs-number">1.7</span> <span class="hljs-number">2.0</span> <span class="hljs-number">2.1</span> <span class="hljs-number">2.0</span> <span class="hljs-number">1.8</span> <span class="hljs-number">1.2</span> <span class="hljs-number">1.0</span> <span class="hljs-number">1.6</span>];<span class="hljs-built_in">plot</span>(x,y)</code></pre><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201130193156.png" alt=""></p><pre><code class="hljs matlab">x0=[<span class="hljs-number">0</span> <span class="hljs-number">3</span> <span class="hljs-number">5</span> <span class="hljs-number">7</span> <span class="hljs-number">9</span> <span class="hljs-number">11</span> <span class="hljs-number">12</span> <span class="hljs-number">13</span> <span class="hljs-number">14</span> <span class="hljs-number">15</span>]&#x27;;y0=[<span class="hljs-number">0</span> <span class="hljs-number">1.2</span> <span class="hljs-number">1.7</span> <span class="hljs-number">2.0</span> <span class="hljs-number">2.1</span> <span class="hljs-number">2.0</span> <span class="hljs-number">1.8</span> <span class="hljs-number">1.2</span> <span class="hljs-number">1.0</span> <span class="hljs-number">1.6</span>]&#x27;;<span class="hljs-comment">%画出散点图</span><span class="hljs-built_in">plot</span>(x0,y0,<span class="hljs-string">&#x27;ro&#x27;</span>);<span class="hljs-built_in">hold</span> on<span class="hljs-comment">%用线性拟合</span>[p1,s1]=polyfit(x0,y0,<span class="hljs-number">3</span>)[y,delete]=polyval(p1,x0,s1)<span class="hljs-built_in">plot</span>(x0,y)T = <span class="hljs-built_in">table</span>(x0,y0,y,y0-y,<span class="hljs-string">&#x27;VariableNames&#x27;</span>,&#123;<span class="hljs-string">&#x27;X&#x27;</span>,<span class="hljs-string">&#x27;Y&#x27;</span>,<span class="hljs-string">&#x27;Fit&#x27;</span>,<span class="hljs-string">&#x27;FitError&#x27;</span>&#125;)</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201130193233.png" alt=""></p><script type="math/tex; mode=display">y=0.0012x^3-0.0517x^2+0.5939x-0.0541</script><pre><code class="hljs matlab">p1 =    <span class="hljs-number">0.0012</span>   <span class="hljs-number">-0.0517</span>    <span class="hljs-number">0.5939</span>   <span class="hljs-number">-0.0541</span>s1 =  包含以下字段的 struct:        R: [<span class="hljs-number">4</span>×<span class="hljs-number">4</span> double]       df: <span class="hljs-number">6</span>    normr: <span class="hljs-number">0.6985</span>&gt;&gt; s1.R<span class="hljs-built_in">ans</span> =   <span class="hljs-number">1.0e+03</span> *   <span class="hljs-number">-5.4009</span>   <span class="hljs-number">-0.3995</span>   <span class="hljs-number">-0.0301</span>   <span class="hljs-number">-0.0023</span>         <span class="hljs-number">0</span>   <span class="hljs-number">-0.0553</span>   <span class="hljs-number">-0.0103</span>   <span class="hljs-number">-0.0016</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>   <span class="hljs-number">-0.0025</span>   <span class="hljs-number">-0.0010</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>    <span class="hljs-number">0.0010</span>delete =    <span class="hljs-number">0.3982</span>    <span class="hljs-number">0.3397</span>    <span class="hljs-number">0.3351</span>    <span class="hljs-number">0.3216</span>    <span class="hljs-number">0.3203</span>    <span class="hljs-number">0.3236</span>    <span class="hljs-number">0.3196</span>    <span class="hljs-number">0.3143</span>    <span class="hljs-number">0.3219</span>    <span class="hljs-number">0.3701</span>T =  <span class="hljs-number">10</span>×<span class="hljs-number">4</span> <span class="hljs-built_in">table</span>    X      Y        Fit       FitError    __    ___    _________    _________     <span class="hljs-number">0</span>      <span class="hljs-number">0</span>    <span class="hljs-number">-0.054067</span>     <span class="hljs-number">0.054067</span>     <span class="hljs-number">3</span>    <span class="hljs-number">1.2</span>       <span class="hljs-number">1.2944</span>    <span class="hljs-number">-0.094445</span>     <span class="hljs-number">5</span>    <span class="hljs-number">1.7</span>       <span class="hljs-number">1.7716</span>    <span class="hljs-number">-0.071558</span>     <span class="hljs-number">7</span>      <span class="hljs-number">2</span>       <span class="hljs-number">1.9776</span>     <span class="hljs-number">0.022391</span>     <span class="hljs-number">9</span>    <span class="hljs-number">2.1</span>       <span class="hljs-number">1.9696</span>      <span class="hljs-number">0.13044</span>    <span class="hljs-number">11</span>      <span class="hljs-number">2</span>       <span class="hljs-number">1.8044</span>      <span class="hljs-number">0.19564</span>    <span class="hljs-number">12</span>    <span class="hljs-number">1.8</span>       <span class="hljs-number">1.6806</span>      <span class="hljs-number">0.11936</span>    <span class="hljs-number">13</span>    <span class="hljs-number">1.2</span>        <span class="hljs-number">1.539</span>     <span class="hljs-number">-0.33899</span>    <span class="hljs-number">14</span>      <span class="hljs-number">1</span>       <span class="hljs-number">1.3865</span>     <span class="hljs-number">-0.38653</span>    <span class="hljs-number">15</span>    <span class="hljs-number">1.6</span>       <span class="hljs-number">1.2304</span>      <span class="hljs-number">0.36962</span></code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201130193312.png" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200819】</title>
    <link href="/2020/08/19/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200819%E3%80%91/"/>
    <url>/2020/08/19/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200819%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="插值"><a href="#插值" class="headerlink" title="插值"></a>插值</h1><h2 id="Lagrange插值、分段线性插值、三次样条插值"><a href="#Lagrange插值、分段线性插值、三次样条插值" class="headerlink" title="Lagrange插值、分段线性插值、三次样条插值"></a>Lagrange插值、分段线性插值、三次样条插值</h2><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p>表 1<br>x  0   3   5   7   9   11   12   13   14   15<br>y  0 1.2 1.7 2.0 2.1 2.0 1.8 1.2 1.0 1.6<br>要求用 Lagrange、分段线性和三次样条三种插值方法计算。<br><pre><code class="hljs matlab">clear,clcx0=[<span class="hljs-number">0</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>,<span class="hljs-number">13</span>,<span class="hljs-number">14</span>,<span class="hljs-number">15</span>];y0=[<span class="hljs-number">0</span>,<span class="hljs-number">1.2</span>,<span class="hljs-number">1.7</span>,<span class="hljs-number">2.0</span>,<span class="hljs-number">2.1</span>,<span class="hljs-number">2.0</span>,<span class="hljs-number">1.8</span>,<span class="hljs-number">1.2</span>,<span class="hljs-number">1.0</span>,<span class="hljs-number">1.6</span>];t=<span class="hljs-number">0</span>:<span class="hljs-number">0.05</span>:<span class="hljs-number">15</span>;showAllInterp( x0,y0,<span class="hljs-string">&#x27;all&#x27;</span>,t)<span class="hljs-comment">%显示x0,y0之间所有不同类型的插值情况</span><span class="hljs-comment">%字符串s选择要输出的插值类型：</span><span class="hljs-comment">%all：全部类型           lagrange：拉格朗日插值函数</span><span class="hljs-comment">%linear：分段线性插值    spline：三次线条插值A</span><span class="hljs-comment">%csape：三次线条插值B</span></code></pre><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201130192925.png" alt=""></p><p>综上，可以看出，拉格朗日插值函数根本不能应用，分段线性函数的光滑性较差，推荐三次样条插值。<br>同时，可以看出，interp1(x0,y0,’spline’)等价于spline(x0,y0)。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>插值</tag>
      
      <tag>Lagrange插值</tag>
      
      <tag>分段线性插值</tag>
      
      <tag>三次样条插值</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200818】</title>
    <link href="/2020/08/18/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200818%E3%80%91/"/>
    <url>/2020/08/18/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200818%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="BP神经网络"><a href="#BP神经网络" class="headerlink" title="BP神经网络"></a>BP神经网络</h1><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p>例题:人文发展指数是联合国开发计划署于1990年5月发表的一份&lt;&lt;人类发展报告&gt;&gt;中公布的数据如下，试通过已知的样品建立判别函数,误判率是多少?并判断待判的归类.</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201130192606.png" alt=""></p><pre><code class="hljs matlab"><span class="hljs-comment">%%原始数据的输入</span>clc,clear[x,textdata]=xlsread(<span class="hljs-string">&#x27;bayes.xlsx&#x27;</span>)p=x(<span class="hljs-number">1</span>:<span class="hljs-number">10</span>,<span class="hljs-number">3</span>:<span class="hljs-number">5</span>)  <span class="hljs-comment">%输入数据矩阵</span>p=p&#x27;t=x(<span class="hljs-number">1</span>:<span class="hljs-number">10</span>,<span class="hljs-number">1</span>)t=t&#x27;<span class="hljs-number">-1</span><span class="hljs-comment">%%归一化处理</span>[pn,minp,maxp] = premnmx(p);  <span class="hljs-comment">%对p矩阵进行归一化处理</span>net=newff(minmax(pn),[<span class="hljs-number">2</span>,<span class="hljs-number">1</span>],&#123;<span class="hljs-string">&#x27;tansig&#x27;</span>,<span class="hljs-string">&#x27;purelin&#x27;</span>&#125;) <span class="hljs-comment">%建立一个具有两层的神经网络，[2,1]表示输入层两层，输出层一层</span>net.trainParam.show=<span class="hljs-number">50</span> <span class="hljs-comment">%显示训练结果的间隔步数</span>net.trainParam.epochs=<span class="hljs-number">1000</span> <span class="hljs-comment">%训练次数</span>net.trainParam.goal=<span class="hljs-number">1e-2</span> <span class="hljs-comment">%设置训练参数</span>net=train(net,pn,t)pp=x(<span class="hljs-number">11</span>:<span class="hljs-number">14</span>,<span class="hljs-number">3</span>:<span class="hljs-number">5</span>) <span class="hljs-comment">%待求</span>ppn = premnmx(pp&#x27;);y=sim(net,ppn) <span class="hljs-comment">%利用已训练好的网络识别</span></code></pre><pre><code class="hljs matlab">y =    <span class="hljs-number">1.0032</span>    <span class="hljs-number">1.0026</span>    <span class="hljs-number">0.0138</span>    <span class="hljs-number">0.0502</span></code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201130192659.png" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>BP神经网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200817】</title>
    <link href="/2020/08/17/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200817%E3%80%91/"/>
    <url>/2020/08/17/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200817%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="模糊识别"><a href="#模糊识别" class="headerlink" title="模糊识别"></a>模糊识别</h1><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p>已知矩阵各指标分类情况，请对B数据进行模糊分析，匹配最佳A类。<br>A=[1 0.8 0.5 0.4 0 0.1;0.5 0.1 0.8 1 0.6 0;0 1 0.2 0.7 0.5 0.8;0.4 0 1 0.9 0.6 0.5;0.8 0.2 0 0.5 1 0.7;0.5 0.7 0.8 0 0.5 1]<br>B=[0.7 0.2 0.1 0.4 1 0.8]<br><pre><code class="hljs matlab">A=[<span class="hljs-number">1</span> <span class="hljs-number">0.8</span> <span class="hljs-number">0.5</span> <span class="hljs-number">0.4</span> <span class="hljs-number">0</span> <span class="hljs-number">0.1</span>;<span class="hljs-number">0.5</span> <span class="hljs-number">0.1</span> <span class="hljs-number">0.8</span> <span class="hljs-number">1</span> <span class="hljs-number">0.6</span> <span class="hljs-number">0</span>;<span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0.2</span> <span class="hljs-number">0.7</span> <span class="hljs-number">0.5</span> <span class="hljs-number">0.8</span>;<span class="hljs-number">0.4</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0.9</span> <span class="hljs-number">0.6</span> <span class="hljs-number">0.5</span>;<span class="hljs-number">0.8</span> <span class="hljs-number">0.2</span> <span class="hljs-number">0</span> <span class="hljs-number">0.5</span> <span class="hljs-number">1</span> <span class="hljs-number">0.7</span>;<span class="hljs-number">0.5</span> <span class="hljs-number">0.7</span> <span class="hljs-number">0.8</span> <span class="hljs-number">0</span> <span class="hljs-number">0.5</span> <span class="hljs-number">1</span>]B=[<span class="hljs-number">0.7</span> <span class="hljs-number">0.2</span> <span class="hljs-number">0.1</span> <span class="hljs-number">0.4</span> <span class="hljs-number">1</span> <span class="hljs-number">0.8</span>]</code></pre><br><pre><code class="hljs matlab"><span class="hljs-comment">%格贴近度:五</span>c =    <span class="hljs-number">0.6500</span>    <span class="hljs-number">0.7000</span>    <span class="hljs-number">0.8000</span>    <span class="hljs-number">0.7000</span>    <span class="hljs-number">0.9500</span>    <span class="hljs-number">0.7000</span><span class="hljs-comment">%最小最大贴近度：五</span>c =    <span class="hljs-number">0.3333</span>    <span class="hljs-number">0.3778</span>    <span class="hljs-number">0.4545</span>    <span class="hljs-number">0.4348</span>    <span class="hljs-number">0.8824</span>    <span class="hljs-number">0.4565</span><span class="hljs-comment">%最小平均贴近度：五</span>c =    <span class="hljs-number">0.5000</span>    <span class="hljs-number">0.5484</span>    <span class="hljs-number">0.6250</span>    <span class="hljs-number">0.6061</span>    <span class="hljs-number">0.9375</span>    <span class="hljs-number">0.6269</span><span class="hljs-comment">%海明贴近度：五</span>c =    <span class="hljs-number">0.5000</span>    <span class="hljs-number">0.5333</span>    <span class="hljs-number">0.6000</span>    <span class="hljs-number">0.5667</span>    <span class="hljs-number">0.9333</span>    <span class="hljs-number">0.5833</span><span class="hljs-comment">%欧几里得贴近度：五</span>c =    <span class="hljs-number">0.4084</span>    <span class="hljs-number">0.4677</span>    <span class="hljs-number">0.5033</span>    <span class="hljs-number">0.5101</span>    <span class="hljs-number">0.9184</span>    <span class="hljs-number">0.5472</span></code></pre></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>模糊识别</tag>
      
      <tag>贴近度</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200816】</title>
    <link href="/2020/08/16/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200816%E3%80%91/"/>
    <url>/2020/08/16/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200816%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="图论、最短路径、dijkstra算法"><a href="#图论、最短路径、dijkstra算法" class="headerlink" title="图论、最短路径、dijkstra算法"></a>图论、最短路径、dijkstra算法</h1><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201130191654.png" alt=""></p><p>用dijkstra算法求解A到各点的最短路径。<br><pre><code class="hljs matlab">a=[<span class="hljs-number">0</span> <span class="hljs-number">10</span> <span class="hljs-built_in">inf</span> <span class="hljs-number">30</span> <span class="hljs-number">100</span>;<span class="hljs-built_in">inf</span> <span class="hljs-number">0</span> <span class="hljs-number">50</span> <span class="hljs-built_in">inf</span> <span class="hljs-built_in">inf</span>;<span class="hljs-built_in">inf</span> <span class="hljs-built_in">inf</span> <span class="hljs-number">0</span> <span class="hljs-built_in">inf</span> <span class="hljs-number">10</span>;<span class="hljs-built_in">inf</span> <span class="hljs-built_in">inf</span> <span class="hljs-number">20</span> <span class="hljs-number">0</span> <span class="hljs-number">60</span>;<span class="hljs-built_in">inf</span> <span class="hljs-built_in">inf</span> <span class="hljs-built_in">inf</span> <span class="hljs-built_in">inf</span> <span class="hljs-number">0</span>]</code></pre><br><pre><code class="hljs matlab">&gt;&gt; [<span class="hljs-built_in">min</span>,path]=dijkstra(a,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)<span class="hljs-built_in">min</span> =     <span class="hljs-number">0</span>path =     <span class="hljs-number">1</span>&gt;&gt; [<span class="hljs-built_in">min</span>,path]=dijkstra(a,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>)<span class="hljs-built_in">min</span> =    <span class="hljs-number">10</span>path =     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>&gt;&gt; [<span class="hljs-built_in">min</span>,path]=dijkstra(a,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>)<span class="hljs-built_in">min</span> =    <span class="hljs-number">50</span>path =     <span class="hljs-number">1</span>     <span class="hljs-number">4</span>     <span class="hljs-number">3</span>&gt;&gt; [<span class="hljs-built_in">min</span>,path]=dijkstra(a,<span class="hljs-number">1</span>,<span class="hljs-number">4</span>)<span class="hljs-built_in">min</span> =    <span class="hljs-number">30</span>path =     <span class="hljs-number">1</span>     <span class="hljs-number">4</span>&gt;&gt; [<span class="hljs-built_in">min</span>,path]=dijkstra(a,<span class="hljs-number">1</span>,<span class="hljs-number">5</span>)<span class="hljs-built_in">min</span> =    <span class="hljs-number">60</span>path =     <span class="hljs-number">1</span>     <span class="hljs-number">4</span>     <span class="hljs-number">3</span>     <span class="hljs-number">5</span></code></pre></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>最短路径</tag>
      
      <tag>图论</tag>
      
      <tag>dijkstra算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200815】</title>
    <link href="/2020/08/15/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200815%E3%80%91/"/>
    <url>/2020/08/15/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200815%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="图论、最短路径、Floyd算法"><a href="#图论、最短路径、Floyd算法" class="headerlink" title="图论、最短路径、Floyd算法"></a>图论、最短路径、Floyd算法</h1><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201130191654.png" alt=""></p><p>用Floyd算法求解路径。<br><pre><code class="hljs matlab">a=[<span class="hljs-number">0</span> <span class="hljs-number">10</span> <span class="hljs-built_in">inf</span> <span class="hljs-number">30</span> <span class="hljs-number">100</span>;<span class="hljs-built_in">inf</span> <span class="hljs-number">0</span> <span class="hljs-number">50</span> <span class="hljs-built_in">inf</span> <span class="hljs-built_in">inf</span>;<span class="hljs-built_in">inf</span> <span class="hljs-built_in">inf</span> <span class="hljs-number">0</span> <span class="hljs-built_in">inf</span> <span class="hljs-number">10</span>;<span class="hljs-built_in">inf</span> <span class="hljs-built_in">inf</span> <span class="hljs-number">20</span> <span class="hljs-number">0</span> <span class="hljs-number">60</span>;<span class="hljs-built_in">inf</span> <span class="hljs-built_in">inf</span> <span class="hljs-built_in">inf</span> <span class="hljs-built_in">inf</span> <span class="hljs-number">0</span>][D,path]=floyd(a)</code></pre><br><pre><code class="hljs matlab">D =     <span class="hljs-number">0</span>    <span class="hljs-number">10</span>    <span class="hljs-number">50</span>    <span class="hljs-number">30</span>    <span class="hljs-number">60</span>   Inf     <span class="hljs-number">0</span>    <span class="hljs-number">50</span>   Inf    <span class="hljs-number">60</span>   Inf   Inf     <span class="hljs-number">0</span>   Inf    <span class="hljs-number">10</span>   Inf   Inf    <span class="hljs-number">20</span>     <span class="hljs-number">0</span>    <span class="hljs-number">30</span>   Inf   Inf   Inf   Inf     <span class="hljs-number">0</span>path =     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">4</span>     <span class="hljs-number">4</span>     <span class="hljs-number">4</span>     <span class="hljs-number">0</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span>     <span class="hljs-number">0</span>     <span class="hljs-number">3</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">3</span>     <span class="hljs-number">0</span>     <span class="hljs-number">5</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span>     <span class="hljs-number">3</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">5</span></code></pre></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>最短路径</tag>
      
      <tag>图论</tag>
      
      <tag>Floyd算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200814】</title>
    <link href="/2020/08/14/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200814%E3%80%91/"/>
    <url>/2020/08/14/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200814%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="种群竞争模型"><a href="#种群竞争模型" class="headerlink" title="种群竞争模型"></a>种群竞争模型</h1><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p>当种群固有增长率为k1=1，k2=1；环境容纳量为n1=100，n2=200；r1=2，r2=0.5时，两种群数量关于时间曲线如图1，相轨线如图2<br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201130191219.png" alt=""></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201130191227.png" alt=""><br><pre><code class="hljs matlab"><span class="hljs-comment">%fun.m</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dx</span>=<span class="hljs-title">fun</span><span class="hljs-params">(t,x,r1,r2,n1,n2,s1,s2)</span></span><span class="hljs-comment">%r1,r2为自然增长率</span><span class="hljs-comment">%n1,n2为各物种最大环境容纳量</span><span class="hljs-comment">%s表示为生物的生存能力</span><span class="hljs-comment">%s1的含义是对于供养甲的资源来说，单位数量的乙(相对n2)的消耗为单位数量甲(相对n1）消耗的s1倍，s2同理。</span><span class="hljs-comment">%n1为牛，n2为羊，1kg草料，一只羊吃的为牛的0.5倍</span>r1=<span class="hljs-number">1</span>;r2=<span class="hljs-number">1</span>;n1=<span class="hljs-number">100</span>;n2=<span class="hljs-number">200</span>;s1=<span class="hljs-number">2</span>;s2=<span class="hljs-number">0.5</span>;dx=[r1*x(<span class="hljs-number">1</span>)*(<span class="hljs-number">1</span>-x(<span class="hljs-number">1</span>)/n1-s1*x(<span class="hljs-number">2</span>)/n2);r2*x(<span class="hljs-number">2</span>)*(<span class="hljs-number">1</span>-s2*x(<span class="hljs-number">1</span>)/n1-x(<span class="hljs-number">2</span>)/n2)];<span class="hljs-comment">%jingzheng.m</span>h=<span class="hljs-number">0.1</span>;<span class="hljs-comment">%所取时间点间隔</span>ts=[<span class="hljs-number">0</span>:h:<span class="hljs-number">30</span>];<span class="hljs-comment">%时间区间</span>x0=[<span class="hljs-number">10</span>,<span class="hljs-number">10</span>];<span class="hljs-comment">%初始条件</span>opt=odeset(<span class="hljs-string">&#x27;reltol&#x27;</span>,<span class="hljs-number">1e-6</span>,<span class="hljs-string">&#x27;abstol&#x27;</span>,<span class="hljs-number">1e-9</span>);<span class="hljs-comment">%相对误差1e-6，绝对误差1e-9</span>[t,x]=ode45(@fun,ts,x0,opt);<span class="hljs-comment">%使用5级4阶龙格—库塔公式计算</span><span class="hljs-built_in">plot</span>(t,x(:,<span class="hljs-number">1</span>),<span class="hljs-string">&#x27;r&#x27;</span>,t,x(:,<span class="hljs-number">2</span>),<span class="hljs-string">&#x27;b&#x27;</span>,<span class="hljs-string">&#x27;LineWidth&#x27;</span>,<span class="hljs-number">2</span>),grid;pause;<span class="hljs-built_in">plot</span>(x(:,<span class="hljs-number">1</span>),x(:,<span class="hljs-number">2</span>),<span class="hljs-string">&#x27;LineWidth&#x27;</span>,<span class="hljs-number">2</span>),grid  <span class="hljs-comment">%作相轨线</span></code></pre></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>种群竞争模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200813】</title>
    <link href="/2020/08/13/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200813%E3%80%91/"/>
    <url>/2020/08/13/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200813%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="贝叶斯判别"><a href="#贝叶斯判别" class="headerlink" title="贝叶斯判别"></a>贝叶斯判别</h1><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p>6只Apf和9只Af不虫触角长度和翅膀长度数据:<br>Apf:(1.14,1.78)，(1.18,1.96)，(1.20,1.86)，(1.26,2.00)，(1.28,2.00)，(1.30,1.96) ;<br>Af:(1.24,1.72)，(1.36,1.74)，(1.38,1.64)，(1.38,1.82)，(1.38,1.90)，(1.40,1.70)，(1.48,1.82)，(1.54,1.82)，(1.56,2.08).<br>若两类虫协方差矩阵相等，假设总体Apf和Af均服从正态分布，用Bayes判别法判别三个右虫属于哪一类?<br>(1.24,1.8)，(1.28,1.84)，（1.4，2.04）<br><pre><code class="hljs matlab">pb=[<span class="hljs-number">1.14</span> <span class="hljs-number">1.18</span>;<span class="hljs-number">1.18</span> <span class="hljs-number">1.96</span>;<span class="hljs-number">1.20</span> <span class="hljs-number">1.86</span>;<span class="hljs-number">1.26</span> <span class="hljs-number">2.00</span>;<span class="hljs-number">1.28</span> <span class="hljs-number">2.00</span>;<span class="hljs-number">1.30</span> <span class="hljs-number">1.96</span>;<span class="hljs-number">1.24</span> <span class="hljs-number">1.72</span>;<span class="hljs-number">1.36</span> <span class="hljs-number">1.74</span>;<span class="hljs-number">1.38</span> <span class="hljs-number">1.64</span>;<span class="hljs-number">1.38</span> <span class="hljs-number">1.82</span>;<span class="hljs-number">1.38</span> <span class="hljs-number">1.90</span>;<span class="hljs-number">1.40</span> <span class="hljs-number">1.70</span>;<span class="hljs-number">1.48</span> <span class="hljs-number">1.82</span>;<span class="hljs-number">1.54</span> <span class="hljs-number">1.82</span>;<span class="hljs-number">1.56</span> <span class="hljs-number">2.08</span>;<span class="hljs-number">1.24</span> <span class="hljs-number">1.8</span>;<span class="hljs-number">1.28</span> <span class="hljs-number">1.84</span>;<span class="hljs-number">1.4</span> <span class="hljs-number">2.04</span>]xl=[<span class="hljs-number">1.14</span> <span class="hljs-number">1.18</span>;<span class="hljs-number">1.18</span> <span class="hljs-number">1.96</span>;<span class="hljs-number">1.20</span> <span class="hljs-number">1.86</span>;<span class="hljs-number">1.26</span> <span class="hljs-number">2.00</span>;<span class="hljs-number">1.28</span> <span class="hljs-number">2.00</span>;<span class="hljs-number">1.30</span> <span class="hljs-number">1.96</span>;<span class="hljs-number">1.24</span> <span class="hljs-number">1.72</span>;<span class="hljs-number">1.36</span> <span class="hljs-number">1.74</span>;<span class="hljs-number">1.38</span> <span class="hljs-number">1.64</span>;<span class="hljs-number">1.38</span> <span class="hljs-number">1.82</span>;<span class="hljs-number">1.38</span> <span class="hljs-number">1.90</span>;<span class="hljs-number">1.40</span> <span class="hljs-number">1.70</span>;<span class="hljs-number">1.48</span> <span class="hljs-number">1.82</span>;<span class="hljs-number">1.54</span> <span class="hljs-number">1.82</span>;<span class="hljs-number">1.56</span> <span class="hljs-number">2.08</span>]lb=[<span class="hljs-number">1</span>;<span class="hljs-number">1</span>;<span class="hljs-number">1</span>;<span class="hljs-number">1</span>;<span class="hljs-number">1</span>;<span class="hljs-number">1</span>;<span class="hljs-number">2</span>;<span class="hljs-number">2</span>;<span class="hljs-number">2</span>;<span class="hljs-number">2</span>;<span class="hljs-number">2</span>;<span class="hljs-number">2</span>;<span class="hljs-number">2</span>;<span class="hljs-number">2</span>;<span class="hljs-number">2</span>][jg,wpl,gl]=classify(pb,xl,lb)gz=<span class="hljs-number">1</span>:<span class="hljs-number">18</span>[gz&#x27;,jg,gl]wpl</code></pre><br><pre><code class="hljs matlab"><span class="hljs-number">1.0000</span>    <span class="hljs-number">1.0000</span>    <span class="hljs-number">0.7919</span>    <span class="hljs-number">0.2081</span>    <span class="hljs-number">2.0000</span>    <span class="hljs-number">1.0000</span>    <span class="hljs-number">0.9981</span>    <span class="hljs-number">0.0019</span>    <span class="hljs-number">3.0000</span>    <span class="hljs-number">1.0000</span>    <span class="hljs-number">0.9911</span>    <span class="hljs-number">0.0089</span>    <span class="hljs-number">4.0000</span>    <span class="hljs-number">1.0000</span>    <span class="hljs-number">0.9754</span>    <span class="hljs-number">0.0246</span>    <span class="hljs-number">5.0000</span>    <span class="hljs-number">1.0000</span>    <span class="hljs-number">0.9505</span>    <span class="hljs-number">0.0495</span>    <span class="hljs-number">6.0000</span>    <span class="hljs-number">1.0000</span>    <span class="hljs-number">0.8703</span>    <span class="hljs-number">0.1297</span>    <span class="hljs-number">7.0000</span>    <span class="hljs-number">1.0000</span>    <span class="hljs-number">0.8928</span>    <span class="hljs-number">0.1072</span>    <span class="hljs-number">8.0000</span>    <span class="hljs-number">2.0000</span>    <span class="hljs-number">0.1124</span>    <span class="hljs-number">0.8876</span>    <span class="hljs-number">9.0000</span>    <span class="hljs-number">2.0000</span>    <span class="hljs-number">0.0264</span>    <span class="hljs-number">0.9736</span>   <span class="hljs-number">10.0000</span>    <span class="hljs-number">2.0000</span>    <span class="hljs-number">0.1055</span>    <span class="hljs-number">0.8945</span>   <span class="hljs-number">11.0000</span>    <span class="hljs-number">2.0000</span>    <span class="hljs-number">0.1847</span>    <span class="hljs-number">0.8153</span>   <span class="hljs-number">12.0000</span>    <span class="hljs-number">2.0000</span>    <span class="hljs-number">0.0210</span>    <span class="hljs-number">0.9790</span>   <span class="hljs-number">13.0000</span>    <span class="hljs-number">2.0000</span>    <span class="hljs-number">0.0031</span>    <span class="hljs-number">0.9969</span>   <span class="hljs-number">14.0000</span>    <span class="hljs-number">2.0000</span>    <span class="hljs-number">0.0004</span>    <span class="hljs-number">0.9996</span>   <span class="hljs-number">15.0000</span>    <span class="hljs-number">2.0000</span>    <span class="hljs-number">0.0014</span>    <span class="hljs-number">0.9986</span>   <span class="hljs-number">16.0000</span>    <span class="hljs-number">1.0000</span>    <span class="hljs-number">0.9411</span>    <span class="hljs-number">0.0589</span>   <span class="hljs-number">17.0000</span>    <span class="hljs-number">1.0000</span>    <span class="hljs-number">0.8388</span>    <span class="hljs-number">0.1612</span>   <span class="hljs-number">18.0000</span>    <span class="hljs-number">2.0000</span>    <span class="hljs-number">0.2559</span>    <span class="hljs-number">0.7441</span>wpl =    <span class="hljs-number">0.0556</span></code></pre><br>最后通过结果我们可以看到前两项分到Apf类，最后一项分到Af类。总误判率为0.0556。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>贝叶斯判别</tag>
      
      <tag>协方差</tag>
      
      <tag>正态分布</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200812】</title>
    <link href="/2020/08/12/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200812%E3%80%91/"/>
    <url>/2020/08/12/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200812%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="层次聚类分析、动态聚类分析"><a href="#层次聚类分析、动态聚类分析" class="headerlink" title="层次聚类分析、动态聚类分析"></a>层次聚类分析、动态聚类分析</h1><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p>尽管我个人非常不喜欢人们被划分圈子，因为这样就有了歧视、偏见、排挤和矛盾，但“物以类聚，人以群分”确实是一种客观的现实——这其中就蕴含着聚类分析的思想。</p><h2 id="层次聚类分析"><a href="#层次聚类分析" class="headerlink" title="层次聚类分析"></a>层次聚类分析</h2><pre><code class="hljs matlab">X=xlsread(<span class="hljs-string">&#x27;chengji.xlsx&#x27;</span>)<span class="hljs-comment">%(1.标准化处理)</span>x=zscore(X(:,<span class="hljs-number">2</span>:<span class="hljs-number">3</span>))<span class="hljs-comment">%（2.计算点与点之间欧氏距离）</span>y=pdist(x,<span class="hljs-string">&#x27;euclidean&#x27;</span>)<span class="hljs-comment">%(3.类平均法进行合并过程)</span>Z=linkage(y,<span class="hljs-string">&#x27;average&#x27;</span>)obslabel=cell(<span class="hljs-number">3</span>:<span class="hljs-number">1</span>)<span class="hljs-comment">%（5.）</span>H=dendrogram(Z,<span class="hljs-number">0</span>,<span class="hljs-string">&#x27;orientation&#x27;</span>,<span class="hljs-string">&#x27;right&#x27;</span>,<span class="hljs-string">&#x27;label&#x27;</span>,obslabel)set(H,<span class="hljs-string">&#x27;LineWidth&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;Color&#x27;</span>,<span class="hljs-string">&#x27;k&#x27;</span>) <span class="hljs-comment">%画图要求，线宽为1，颜色为黑色</span>xlabel(<span class="hljs-string">&#x27;标准化距离（类平均法）&#x27;</span>)inconsisten0=inconsistent(Z,<span class="hljs-number">4</span>) <span class="hljs-comment">%4表示为深度</span></code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129234327.png" alt=""></p><h2 id="动态聚类分析"><a href="#动态聚类分析" class="headerlink" title="动态聚类分析"></a>动态聚类分析</h2><pre><code class="hljs matlab"><span class="hljs-number">1.</span>手动动态聚类分析data=xlsread(<span class="hljs-string">&#x27;chengji.xlsx&#x27;</span>)gc=data(:,<span class="hljs-number">1</span>)data=zscore(data(:,<span class="hljs-number">2</span>:<span class="hljs-number">3</span>))x1=data(:,<span class="hljs-number">1</span>)x2=data(:,<span class="hljs-number">2</span>)<span class="hljs-built_in">scatter</span>(x1,x2,<span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-comment">%画散点图，观察凝点</span></code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129234431.png" alt=""></p><pre><code class="hljs matlab">startdata=data([<span class="hljs-number">7</span>,<span class="hljs-number">11</span>,<span class="hljs-number">27</span>,<span class="hljs-number">33</span>,<span class="hljs-number">22</span>],:) <span class="hljs-comment">%找四个凝点</span>idx=kmeans(data,<span class="hljs-number">5</span>,<span class="hljs-string">&#x27;Start&#x27;</span>,startdata) <span class="hljs-comment">%&#x27;Start为初始凝结点的标识&#x27;，startdata为具体的值</span>[S,H]=silhouette(data,idx)<span class="hljs-comment">%画图</span>gc(idx==<span class="hljs-number">1</span>),gc(idx==<span class="hljs-number">2</span>),gc(idx==<span class="hljs-number">3</span>),gc(idx==<span class="hljs-number">4</span>),gc(idx==<span class="hljs-number">5</span>)<span class="hljs-comment">%展示工厂标记</span></code></pre><pre><code class="hljs matlab"><span class="hljs-built_in">ans</span> =     <span class="hljs-number">3</span>    <span class="hljs-number">12</span>    <span class="hljs-number">21</span>    <span class="hljs-number">28</span>    <span class="hljs-number">34</span>    <span class="hljs-number">36</span>    <span class="hljs-number">37</span>    <span class="hljs-number">40</span><span class="hljs-built_in">ans</span> =    <span class="hljs-number">11</span>    <span class="hljs-number">13</span>    <span class="hljs-number">14</span>    <span class="hljs-number">19</span>    <span class="hljs-number">23</span>    <span class="hljs-number">24</span>    <span class="hljs-number">30</span>    <span class="hljs-number">39</span><span class="hljs-built_in">ans</span> =     <span class="hljs-number">5</span>     <span class="hljs-number">8</span>    <span class="hljs-number">10</span>    <span class="hljs-number">26</span>    <span class="hljs-number">27</span><span class="hljs-built_in">ans</span> =     <span class="hljs-number">6</span>     <span class="hljs-number">9</span>    <span class="hljs-number">18</span>    <span class="hljs-number">29</span>    <span class="hljs-number">33</span><span class="hljs-built_in">ans</span> =     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">4</span>     <span class="hljs-number">7</span>    <span class="hljs-number">15</span>    <span class="hljs-number">16</span>    <span class="hljs-number">17</span>    <span class="hljs-number">20</span>    <span class="hljs-number">22</span>    <span class="hljs-number">25</span>    <span class="hljs-number">31</span>    <span class="hljs-number">32</span>    <span class="hljs-number">35</span>    <span class="hljs-number">38</span></code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129234525.png" alt=""><br><pre><code class="hljs matlab"><span class="hljs-number">2.</span>自动动态聚类分析data=xlsread(<span class="hljs-string">&#x27;chengji.xlsx&#x27;</span>)gc=data(:,<span class="hljs-number">1</span>)data=zscore(data(:,<span class="hljs-number">2</span>:<span class="hljs-number">3</span>))idx=kmeans(data,<span class="hljs-number">4</span>,<span class="hljs-string">&#x27;replicates&#x27;</span>,<span class="hljs-number">100</span>) <span class="hljs-comment">%自己去找凝结点，重复十次</span>[S,H]=silhouette(data,idx)<span class="hljs-comment">%画图</span>Leibie1=gc(idx==<span class="hljs-number">1</span>),Leibie2=gc(idx==<span class="hljs-number">2</span>),Leibie3=gc(idx==<span class="hljs-number">3</span>),Leibie4=gc(idx==<span class="hljs-number">4</span>)</code></pre><br><pre><code class="hljs matlab">idx =     <span class="hljs-number">4</span>     <span class="hljs-number">4</span>     <span class="hljs-number">4</span>     <span class="hljs-number">4</span>     <span class="hljs-number">3</span>     <span class="hljs-number">2</span>     <span class="hljs-number">4</span>     <span class="hljs-number">2</span>     <span class="hljs-number">2</span>     <span class="hljs-number">4</span>     <span class="hljs-number">1</span>     <span class="hljs-number">3</span>     <span class="hljs-number">1</span>     <span class="hljs-number">1</span>     <span class="hljs-number">4</span>     <span class="hljs-number">4</span>     <span class="hljs-number">4</span>     <span class="hljs-number">2</span>     <span class="hljs-number">1</span>     <span class="hljs-number">4</span>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span>     <span class="hljs-number">1</span>     <span class="hljs-number">1</span>     <span class="hljs-number">4</span>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span>     <span class="hljs-number">2</span>     <span class="hljs-number">1</span>     <span class="hljs-number">4</span>     <span class="hljs-number">4</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span>     <span class="hljs-number">3</span>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span>     <span class="hljs-number">1</span>     <span class="hljs-number">3</span>S =    <span class="hljs-number">0.8370</span>    <span class="hljs-number">0.8517</span>    <span class="hljs-number">0.2813</span>    <span class="hljs-number">0.6478</span>    <span class="hljs-number">0.5259</span>    <span class="hljs-number">0.2780</span>    <span class="hljs-number">0.7061</span>    <span class="hljs-number">0.3439</span>    <span class="hljs-number">0.5923</span>    <span class="hljs-number">0.3430</span>    <span class="hljs-number">0.8410</span>    <span class="hljs-number">0.8241</span>    <span class="hljs-number">0.4059</span>    <span class="hljs-number">0.6917</span>    <span class="hljs-number">0.7877</span>    <span class="hljs-number">0.4397</span>    <span class="hljs-number">0.5408</span>    <span class="hljs-number">0.3044</span>    <span class="hljs-number">0.6531</span>    <span class="hljs-number">0.7272</span>    <span class="hljs-number">0.5483</span>    <span class="hljs-number">0.5974</span>    <span class="hljs-number">0.6877</span>    <span class="hljs-number">0.5867</span>    <span class="hljs-number">0.7845</span>    <span class="hljs-number">0.2691</span>    <span class="hljs-number">0.1136</span>    <span class="hljs-number">0.8183</span>    <span class="hljs-number">0.5519</span>    <span class="hljs-number">0.8519</span>    <span class="hljs-number">0.8551</span>    <span class="hljs-number">0.6766</span>    <span class="hljs-number">0.5177</span>    <span class="hljs-number">0.8740</span>    <span class="hljs-number">0.6046</span>    <span class="hljs-number">0.7840</span>    <span class="hljs-number">0.7143</span>    <span class="hljs-number">0.6256</span>    <span class="hljs-number">0.7967</span>    <span class="hljs-number">0.8840</span>H =  Figure (<span class="hljs-number">1</span>) - 属性:      Number: <span class="hljs-number">1</span>        Name: <span class="hljs-string">&#x27;&#x27;</span>       Color: [<span class="hljs-number">0.9400</span> <span class="hljs-number">0.9400</span> <span class="hljs-number">0.9400</span>]    Position: [<span class="hljs-number">488</span> <span class="hljs-number">342</span> <span class="hljs-number">560</span> <span class="hljs-number">420</span>]       Units: <span class="hljs-string">&#x27;pixels&#x27;</span>  显示 所有属性Leibie1 =    <span class="hljs-number">11</span>    <span class="hljs-number">13</span>    <span class="hljs-number">14</span>    <span class="hljs-number">19</span>    <span class="hljs-number">23</span>    <span class="hljs-number">24</span>    <span class="hljs-number">26</span>    <span class="hljs-number">30</span>    <span class="hljs-number">39</span>Leibie2 =     <span class="hljs-number">6</span>     <span class="hljs-number">8</span>     <span class="hljs-number">9</span>    <span class="hljs-number">18</span>    <span class="hljs-number">27</span>    <span class="hljs-number">29</span>    <span class="hljs-number">33</span>Leibie3 =     <span class="hljs-number">5</span>    <span class="hljs-number">12</span>    <span class="hljs-number">21</span>    <span class="hljs-number">28</span>    <span class="hljs-number">34</span>    <span class="hljs-number">36</span>    <span class="hljs-number">37</span>    <span class="hljs-number">40</span>Leibie4 =     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span>     <span class="hljs-number">7</span>    <span class="hljs-number">10</span>    <span class="hljs-number">15</span>    <span class="hljs-number">16</span>    <span class="hljs-number">17</span>    <span class="hljs-number">20</span>    <span class="hljs-number">22</span>    <span class="hljs-number">25</span>    <span class="hljs-number">31</span>    <span class="hljs-number">32</span>    <span class="hljs-number">35</span>    <span class="hljs-number">38</span></code></pre><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129234628.png" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>层次聚类分析</tag>
      
      <tag>手动动态聚类分析</tag>
      
      <tag>自动动态聚类分析</tag>
      
      <tag>凝点</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200811】</title>
    <link href="/2020/08/11/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200811%E3%80%91/"/>
    <url>/2020/08/11/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200811%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="综合评价"><a href="#综合评价" class="headerlink" title="综合评价"></a>综合评价</h1><h2 id="灰色关联"><a href="#灰色关联" class="headerlink" title="灰色关联"></a>灰色关联</h2><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129223648.png" alt=""><br>题目：分析下表中，哪一个产业对2000-2005年国内生产总值影响最大<br><pre><code class="hljs matlab">&gt;&gt; data=xlsread(<span class="hljs-string">&#x27;huiseguanlian-chanzhi.xlsx&#x27;</span>,<span class="hljs-string">&#x27;B2:E7&#x27;</span>)data =        <span class="hljs-number">1988</span>         <span class="hljs-number">386</span>         <span class="hljs-number">839</span>         <span class="hljs-number">763</span>        <span class="hljs-number">2061</span>         <span class="hljs-number">408</span>         <span class="hljs-number">846</span>         <span class="hljs-number">808</span>        <span class="hljs-number">2335</span>         <span class="hljs-number">422</span>         <span class="hljs-number">960</span>         <span class="hljs-number">953</span>        <span class="hljs-number">2750</span>         <span class="hljs-number">482</span>        <span class="hljs-number">1258</span>        <span class="hljs-number">1010</span>        <span class="hljs-number">3356</span>         <span class="hljs-number">511</span>        <span class="hljs-number">1577</span>        <span class="hljs-number">1268</span>        <span class="hljs-number">3806</span>         <span class="hljs-number">561</span>        <span class="hljs-number">1893</span>        <span class="hljs-number">1352</span>&gt;&gt; k=GRA(data)k =    <span class="hljs-number">0.5084</span>    <span class="hljs-number">0.6243</span>    <span class="hljs-number">0.7573</span>&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=<span class="hljs-string">&quot;language-matlab line-numbers&quot;</span>&gt;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">correlationnew</span>=<span class="hljs-title">GRA</span><span class="hljs-params">(data)</span></span><span class="hljs-comment">%此程序默认第一列数据为母序列比较值</span>[m,n]=<span class="hljs-built_in">size</span>(data);rou=<span class="hljs-number">0.5</span>; <span class="hljs-comment">%数据之间紧密度,越紧，数越小</span><span class="hljs-comment">%（2）数据标准化去量纲</span><span class="hljs-comment">%采用均值法</span>avedata=<span class="hljs-built_in">mean</span>(data);<span class="hljs-comment">%每列的平均值</span><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:m    newdata(<span class="hljs-built_in">i</span>,:)=data(<span class="hljs-built_in">i</span>,:)./avedata;<span class="hljs-keyword">end</span><span class="hljs-comment">%(3)每一行关联系数计算</span><span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span>=<span class="hljs-number">2</span>:n    diff(:,<span class="hljs-built_in">j</span><span class="hljs-number">-1</span>)=<span class="hljs-built_in">abs</span>(newdata(:,<span class="hljs-number">1</span>)-newdata(:,<span class="hljs-built_in">j</span>));<span class="hljs-comment">%差的绝对值</span><span class="hljs-keyword">end</span><span class="hljs-comment">%最大最小极差-采用总极差法</span>maxdiff=<span class="hljs-built_in">max</span>(<span class="hljs-built_in">max</span>(diff)); <span class="hljs-comment">%最大极差</span>mindiff=<span class="hljs-built_in">min</span>(<span class="hljs-built_in">min</span>(diff)); <span class="hljs-comment">%最小极差</span><span class="hljs-comment">%(4)关联度计算</span><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:m    <span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span>=<span class="hljs-number">1</span>:n<span class="hljs-number">-1</span>        correlation(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>)=(mindiff+rou*maxdiff)/(diff(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>)+rou*maxdiff);    <span class="hljs-keyword">end</span><span class="hljs-keyword">end</span>correlationnew=<span class="hljs-built_in">mean</span>(correlation);</code></pre><br>由此我们可以知道第三产业对2000-2005年国内生产总值影响最大。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>综合评价</tag>
      
      <tag>去量纲</tag>
      
      <tag>灰色关联</tag>
      
      <tag>数据标准化</tag>
      
      <tag>极差</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200810】</title>
    <link href="/2020/08/10/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200810%E3%80%91/"/>
    <url>/2020/08/10/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200810%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="综合评价"><a href="#综合评价" class="headerlink" title="综合评价"></a>综合评价</h1><h2 id="模糊综合评价、TOPSIS法"><a href="#模糊综合评价、TOPSIS法" class="headerlink" title="模糊综合评价、TOPSIS法"></a>模糊综合评价、TOPSIS法</h2><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p>（娱乐题目）<br>根据调查数据对以下四名女艺人打分并作出综合评价。<br>1.模糊综合评价<br><span class="label label-primary">根据打分得到单因素评判矩阵。</span></p><p><table></p><p><thead></p><p><tr>  <th></th>  <th>身材</th>  <th>颜值</th>  <th>演技</th>  <th>槽点</th></tr><br>&lt;/thead&gt;</p><p><tbody></p><p><tr>  <td>深田</td>  <td>6</td>  <td>5</td>  <td>9</td>  <td>2</td></tr></p><p><tr>  <td>小泽</td>  <td>8</td>  <td>8</td>  <td>6</td>  <td>5</td></tr></p><p><tr>  <td>大乔</td>  <td>8</td>  <td>7</td>  <td>8</td>  <td>5</td></tr></p><p><tr>  <td>明日</td>  <td>7</td>  <td>6</td>  <td>7</td>  <td>5</td></tr><br>&lt;/tbody&gt;<br>&lt;/table&gt;<br><pre><code class="hljs matlab">x=[<span class="hljs-number">6</span> <span class="hljs-number">5</span> <span class="hljs-number">9</span> <span class="hljs-number">2</span> ;<span class="hljs-number">8</span> <span class="hljs-number">8</span> <span class="hljs-number">6</span> <span class="hljs-number">5</span>;<span class="hljs-number">8</span> <span class="hljs-number">7</span> <span class="hljs-number">8</span> <span class="hljs-number">5</span>;<span class="hljs-number">7</span> <span class="hljs-number">6</span> <span class="hljs-number">7</span> <span class="hljs-number">5</span>](<span class="hljs-number">1</span>)数据正向性处理zu=[<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span>][m,n]=<span class="hljs-built_in">size</span>(x);R=x;<span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:m<span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span>=<span class="hljs-number">1</span>:n<span class="hljs-comment">%根据指标确定是去哪一列的正向</span><span class="hljs-keyword">if</span> zu(<span class="hljs-built_in">j</span>)==<span class="hljs-number">1</span>R(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>)=(x(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>)-<span class="hljs-built_in">max</span>(x(:,<span class="hljs-built_in">j</span>)))/(<span class="hljs-built_in">min</span>(x(:,<span class="hljs-built_in">j</span>))-<span class="hljs-built_in">max</span>(x(:,<span class="hljs-built_in">j</span>)));<span class="hljs-keyword">end</span><span class="hljs-keyword">end</span><span class="hljs-keyword">end</span>R(<span class="hljs-number">2</span>)由层次分析法计算属性权重A=[<span class="hljs-number">6</span> <span class="hljs-number">5</span> <span class="hljs-number">9</span> <span class="hljs-number">2</span> ;<span class="hljs-number">8</span> <span class="hljs-number">8</span> <span class="hljs-number">6</span> <span class="hljs-number">5</span>;<span class="hljs-number">8</span> <span class="hljs-number">7</span> <span class="hljs-number">8</span> <span class="hljs-number">5</span>;<span class="hljs-number">7</span> <span class="hljs-number">6</span> <span class="hljs-number">7</span> <span class="hljs-number">5</span>][n,n]=<span class="hljs-built_in">size</span>(A);x=<span class="hljs-built_in">ones</span>(n,<span class="hljs-number">100</span>);y=<span class="hljs-built_in">ones</span>(n,<span class="hljs-number">100</span>);m=<span class="hljs-built_in">zeros</span>(<span class="hljs-number">1</span>,<span class="hljs-number">100</span>);m(<span class="hljs-number">1</span>)=<span class="hljs-built_in">max</span>(x(:,<span class="hljs-number">1</span>));y(:,<span class="hljs-number">1</span>)=x(:,<span class="hljs-number">1</span>);x(:,<span class="hljs-number">2</span>)=A*y(:,<span class="hljs-number">1</span>);m(<span class="hljs-number">2</span>)=<span class="hljs-built_in">max</span>(x(:,<span class="hljs-number">2</span>));y(:,<span class="hljs-number">2</span>)=x(:,<span class="hljs-number">2</span>)/m(<span class="hljs-number">2</span>);p=<span class="hljs-number">0.0001</span>;<span class="hljs-built_in">i</span>=<span class="hljs-number">2</span>;k=<span class="hljs-built_in">abs</span>(m(<span class="hljs-number">2</span>)-m(<span class="hljs-number">1</span>));<span class="hljs-keyword">while</span>  k&gt;p  <span class="hljs-built_in">i</span>=<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>;  x(:,<span class="hljs-built_in">i</span>)=A*y(:,<span class="hljs-built_in">i</span><span class="hljs-number">-1</span>);  m(<span class="hljs-built_in">i</span>)=<span class="hljs-built_in">max</span>(x(:,<span class="hljs-built_in">i</span>));  y(:,<span class="hljs-built_in">i</span>)=x(:,<span class="hljs-built_in">i</span>)/m(<span class="hljs-built_in">i</span>);  k=<span class="hljs-built_in">abs</span>(m(<span class="hljs-built_in">i</span>)-m(<span class="hljs-built_in">i</span><span class="hljs-number">-1</span>));<span class="hljs-keyword">end</span>a=sum(y(:,<span class="hljs-built_in">i</span>));w=y(:,<span class="hljs-built_in">i</span>)/a;t=m(<span class="hljs-built_in">i</span>);<span class="hljs-built_in">disp</span>(w);         <span class="hljs-comment">%以下是一致性检验</span>CI=(t-n)/(n<span class="hljs-number">-1</span>);RI=[<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0.52</span> <span class="hljs-number">0.89</span> <span class="hljs-number">1.12</span> <span class="hljs-number">1.26</span> <span class="hljs-number">1.36</span> <span class="hljs-number">1.41</span> <span class="hljs-number">1.46</span> <span class="hljs-number">1.49</span> <span class="hljs-number">1.52</span> <span class="hljs-number">1.54</span> <span class="hljs-number">1.56</span> <span class="hljs-number">1.58</span> <span class="hljs-number">1.59</span>];CR=CI/RI(n);<span class="hljs-keyword">if</span> CR&lt;<span class="hljs-number">0.10</span>    <span class="hljs-built_in">disp</span>(<span class="hljs-string">&#x27;此矩阵的一致性可以接受!&#x27;</span>);    <span class="hljs-built_in">disp</span>(<span class="hljs-string">&#x27;CI=&#x27;</span>);<span class="hljs-built_in">disp</span>(CI);    <span class="hljs-built_in">disp</span>(<span class="hljs-string">&#x27;CR=&#x27;</span>);<span class="hljs-built_in">disp</span>(CR);<span class="hljs-keyword">end</span>(<span class="hljs-number">3</span>)采用主因素突出型进行模糊综合评价w=w&#x27;fuzzy_zhpj(<span class="hljs-number">2</span>,R,w)</code></pre><br><pre><code class="hljs matlab">(<span class="hljs-number">1</span>)正向化结果R =     <span class="hljs-number">6</span>     <span class="hljs-number">5</span>     <span class="hljs-number">9</span>     <span class="hljs-number">1</span>     <span class="hljs-number">8</span>     <span class="hljs-number">8</span>     <span class="hljs-number">6</span>     <span class="hljs-number">0</span>     <span class="hljs-number">8</span>     <span class="hljs-number">7</span>     <span class="hljs-number">8</span>     <span class="hljs-number">0</span>     <span class="hljs-number">7</span>     <span class="hljs-number">6</span>     <span class="hljs-number">7</span>     <span class="hljs-number">0</span>(<span class="hljs-number">2</span>)属性权重w=    <span class="hljs-number">0.2184</span>    <span class="hljs-number">0.2629</span>    <span class="hljs-number">0.2741</span>    <span class="hljs-number">0.2445</span>(<span class="hljs-number">3</span>)采用主因素突出型进行模糊综合评价结果 fuzzy_zhpj(<span class="hljs-number">2</span>,w,R)<span class="hljs-built_in">ans</span> =    <span class="hljs-number">2.1928</span>    <span class="hljs-number">2.1032</span>    <span class="hljs-number">2.1928</span>    <span class="hljs-number">0.2184</span></code></pre><br>2.TOPSIS法</p><p><span class="label label-primary">正向化去量纲</span></p><pre><code class="hljs matlab">正向化结果：R =     <span class="hljs-number">6</span>     <span class="hljs-number">5</span>     <span class="hljs-number">9</span>     <span class="hljs-number">1</span>     <span class="hljs-number">8</span>     <span class="hljs-number">8</span>     <span class="hljs-number">6</span>     <span class="hljs-number">0</span>     <span class="hljs-number">8</span>     <span class="hljs-number">7</span>     <span class="hljs-number">8</span>     <span class="hljs-number">0</span>     <span class="hljs-number">7</span>     <span class="hljs-number">6</span>     <span class="hljs-number">7</span>     <span class="hljs-number">0</span></code></pre><p><span class="label label-primary">标准化矩阵</span></p><pre><code class="hljs matlab">&gt;&gt; R=zscore(R)R =   <span class="hljs-number">-1.3056</span>   <span class="hljs-number">-1.1619</span>    <span class="hljs-number">1.1619</span>    <span class="hljs-number">1.5000</span>    <span class="hljs-number">0.7833</span>    <span class="hljs-number">1.1619</span>   <span class="hljs-number">-1.1619</span>   <span class="hljs-number">-0.5000</span>    <span class="hljs-number">0.7833</span>    <span class="hljs-number">0.3873</span>    <span class="hljs-number">0.3873</span>   <span class="hljs-number">-0.5000</span>   <span class="hljs-number">-0.2611</span>   <span class="hljs-number">-0.3873</span>   <span class="hljs-number">-0.3873</span>   <span class="hljs-number">-0.5000</span></code></pre><p><span class="label label-primary">层次分析法计算权重</span><br><pre><code class="hljs matlab">w=    <span class="hljs-number">0.2184</span>    <span class="hljs-number">0.2629</span>    <span class="hljs-number">0.2741</span>    <span class="hljs-number">0.2445</span></code></pre><br><span class="label label-primary">TOPSIS法</span><br><pre><code class="hljs matlab">&gt;&gt; TOPSIS(R,w)<span class="hljs-built_in">ans</span> =    <span class="hljs-number">0.5129</span>    <span class="hljs-number">0.4871</span>    <span class="hljs-number">0.5661</span>    <span class="hljs-number">0.3180</span></code></pre></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>综合评价</tag>
      
      <tag>去量纲</tag>
      
      <tag>层次分析法</tag>
      
      <tag>一致性检验</tag>
      
      <tag>模糊综合评价</tag>
      
      <tag>TOPSIS法</tag>
      
      <tag>正向性处理</tag>
      
      <tag>标准化矩阵</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200809】</title>
    <link href="/2020/08/09/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200809%E3%80%91/"/>
    <url>/2020/08/09/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200809%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="层次分析法、AHP"><a href="#层次分析法、AHP" class="headerlink" title="层次分析法、AHP"></a>层次分析法、AHP</h1><h2 id="比较选择问题"><a href="#比较选择问题" class="headerlink" title="比较选择问题"></a>比较选择问题</h2><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p>有一个毕业生为挑选合适的工作。经双方恳谈，已有三个单位表示愿意录用某毕业生，该毕业生考虑的因素有6个，研究课题、发展前途、待遇、同事情况、地理位置和单位名气。<br>那么这六个因素就是准则层，三个单位就是方案层，最后要求的就是应该去哪个单位。<br>1.准则层判断矩阵（主观性）<br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129222139.png" alt=""><br>2.方案层判断矩阵（主观性）</p><pre><code class="hljs matlab">cengcifenxifa请输入比较参数个数NN=<span class="hljs-number">6</span>请输入判断矩阵A(n阶)A=[<span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">4</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span>/<span class="hljs-number">2</span>;<span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">4</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span>/<span class="hljs-number">2</span>;<span class="hljs-number">1</span> <span class="hljs-number">1</span>/<span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">5</span> <span class="hljs-number">3</span> <span class="hljs-number">1</span>/<span class="hljs-number">2</span>;<span class="hljs-number">1</span>/<span class="hljs-number">4</span> <span class="hljs-number">1</span>/<span class="hljs-number">4</span> <span class="hljs-number">1</span>/<span class="hljs-number">5</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span>/<span class="hljs-number">3</span> <span class="hljs-number">1</span>/<span class="hljs-number">3</span>;<span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span>/<span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span>;<span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">1</span>]    <span class="hljs-number">0.1507</span>    <span class="hljs-number">0.1792</span>    <span class="hljs-number">0.1886</span>    <span class="hljs-number">0.0472</span>    <span class="hljs-number">0.1464</span>    <span class="hljs-number">0.2879</span>此矩阵的一致性可以接受!CI=    <span class="hljs-number">0.1236</span>CR=    <span class="hljs-number">0.0981</span>请输入判断矩阵A(n阶)A=[<span class="hljs-number">1</span> <span class="hljs-number">1</span>/<span class="hljs-number">4</span> <span class="hljs-number">1</span>/<span class="hljs-number">2</span>;<span class="hljs-number">4</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span>;<span class="hljs-number">2</span> <span class="hljs-number">1</span>/<span class="hljs-number">3</span> <span class="hljs-number">1</span>]    <span class="hljs-number">0.1365</span>    <span class="hljs-number">0.6250</span>    <span class="hljs-number">0.2385</span>此矩阵的一致性可以接受!CI=    <span class="hljs-number">0.0091</span>CR=    <span class="hljs-number">0.0176</span>请输入判断矩阵A(n阶)A=[<span class="hljs-number">1</span> <span class="hljs-number">1</span>/<span class="hljs-number">4</span> <span class="hljs-number">1</span>/<span class="hljs-number">5</span>;<span class="hljs-number">4</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span>/<span class="hljs-number">2</span>;<span class="hljs-number">5</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span>]    <span class="hljs-number">0.0974</span>    <span class="hljs-number">0.3331</span>    <span class="hljs-number">0.5695</span>此矩阵的一致性可以接受!CI=    <span class="hljs-number">0.0123</span>CR=    <span class="hljs-number">0.0236</span>请输入判断矩阵A(n阶)A=[<span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">1</span>/<span class="hljs-number">3</span>;<span class="hljs-number">1</span>/<span class="hljs-number">3</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span>/<span class="hljs-number">7</span>;<span class="hljs-number">3</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span>]    <span class="hljs-number">0.3023</span>    <span class="hljs-number">0.1076</span>    <span class="hljs-number">0.5901</span>此矩阵的一致性可以接受!CI=   <span class="hljs-number">-0.1404</span>CR=   <span class="hljs-number">-0.2701</span>请输入判断矩阵A(n阶)A=[<span class="hljs-number">1</span> <span class="hljs-number">1</span>/<span class="hljs-number">3</span> <span class="hljs-number">5</span>;<span class="hljs-number">3</span> <span class="hljs-number">1</span> <span class="hljs-number">7</span>;<span class="hljs-number">1</span>/<span class="hljs-number">5</span> <span class="hljs-number">1</span>/<span class="hljs-number">7</span> <span class="hljs-number">1</span>]    <span class="hljs-number">0.2790</span>    <span class="hljs-number">0.6491</span>    <span class="hljs-number">0.0719</span>此矩阵的一致性可以接受!CI=    <span class="hljs-number">0.0324</span>CR=    <span class="hljs-number">0.0624</span>请输入判断矩阵A(n阶)A=[<span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">7</span>;<span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">7</span>;<span class="hljs-number">1</span>/<span class="hljs-number">7</span> <span class="hljs-number">1</span>/<span class="hljs-number">7</span> <span class="hljs-number">1</span>]    <span class="hljs-number">0.4667</span>    <span class="hljs-number">0.4667</span>    <span class="hljs-number">0.0667</span>此矩阵的一致性可以接受!CI=     <span class="hljs-number">0</span>CR=     <span class="hljs-number">0</span>请输入判断矩阵A(n阶)A=[<span class="hljs-number">1</span> <span class="hljs-number">7</span> <span class="hljs-number">9</span>;<span class="hljs-number">1</span>/<span class="hljs-number">7</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span>;<span class="hljs-number">1</span>/<span class="hljs-number">9</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span>]    <span class="hljs-number">0.7986</span>    <span class="hljs-number">0.1049</span>    <span class="hljs-number">0.0965</span>此矩阵的一致性可以接受!CI=    <span class="hljs-number">0.0035</span>CR=    <span class="hljs-number">0.0068</span>请输入选择方案个数MM=<span class="hljs-number">3</span>&gt;&gt; sumsum =    <span class="hljs-number">0.4064</span>    <span class="hljs-number">0.3033</span>    <span class="hljs-number">0.2902</span></code></pre><p>计算层次总排序权值和一致性检验三个单位对总目标的权值<br>得三家单位对总目标的权值分别为:0.4064    0.3033    0.2902,决策层对总目标的权向量为: {0.4064    0.3033    0.2902}<br>所以{0.4064    0.3033    0.2902}可作为最后的决策依据。<br>即各方案的权重排序为B1&gt;B2&gt;B3,分别表示三个单位，故最后的决策应为去第一个单位。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>权重</tag>
      
      <tag>层次分析法</tag>
      
      <tag>AHP</tag>
      
      <tag>比较选择问题</tag>
      
      <tag>准则层判断矩阵</tag>
      
      <tag>方案层判断矩阵</tag>
      
      <tag>层次排序</tag>
      
      <tag>权值</tag>
      
      <tag>一致性检验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200808】</title>
    <link href="/2020/08/08/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200808%E3%80%91/"/>
    <url>/2020/08/08/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200808%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="综合评价"><a href="#综合评价" class="headerlink" title="综合评价"></a>综合评价</h1><h2 id="模拟退火算法、优化问题、TSP、tsp"><a href="#模拟退火算法、优化问题、TSP、tsp" class="headerlink" title="模拟退火算法、优化问题、TSP、tsp"></a>模拟退火算法、优化问题、TSP、tsp</h2><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p>计算从北京走遍全国31个城市的最短距离，设计出合理算法规划出不同约束条件下的不同最优方案:<br>1．首先在不考虑外部因素的情况下，利用地球的经纬度，计算各个城市之间距离，建立数学模型，并规划出最优游遍31座城市的最短路线。<br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129221810.png" alt=""><br><pre><code class="hljs matlab">clearclcx=xlsread(<span class="hljs-string">&#x27;jingweidu.xlsx&#x27;</span>)&#x27;;R0=<span class="hljs-number">6371</span>;<span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span>=<span class="hljs-number">1</span>:<span class="hljs-built_in">length</span>(x)    x1(<span class="hljs-number">1</span>,<span class="hljs-built_in">j</span>)=x(<span class="hljs-number">1</span>,<span class="hljs-built_in">j</span>)/<span class="hljs-number">360</span>*<span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>*R0;    x1(<span class="hljs-number">2</span>,<span class="hljs-built_in">j</span>)=x(<span class="hljs-number">2</span>,<span class="hljs-built_in">j</span>)*<span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>*R0/<span class="hljs-number">4</span>;<span class="hljs-keyword">end</span>Coord=x1t0 = <span class="hljs-number">1</span> ; <span class="hljs-comment">% 初 温 t0</span>iLk = <span class="hljs-number">20</span> ; <span class="hljs-comment">% 内 循 环 最 大 迭 代 次 数 iLk</span>oLk = <span class="hljs-number">50</span> ; <span class="hljs-comment">% 外 循 环 最 大 迭 代 次 数 oLk</span>lam = <span class="hljs-number">0.95</span> ; <span class="hljs-comment">% λ lambda</span>istd = <span class="hljs-number">0.001</span> ; <span class="hljs-comment">% 若 内 循 环 函 数 值 方 差 小 于 istd 则 停 止</span>ostd = <span class="hljs-number">0.001</span> ; <span class="hljs-comment">% 若 外 循 环 函 数 值 方 差 小 于 ostd 则 停 止</span>ilen = <span class="hljs-number">5</span> ; <span class="hljs-comment">% 内 循 环 保 存 的 目 标 函 数 值 个 数</span>olen = <span class="hljs-number">5</span> ; <span class="hljs-comment">% 外 循 环 保 存 的 目 标 函 数 值 个 数</span><span class="hljs-comment">% 程 序 主 体</span>m = <span class="hljs-built_in">length</span>( Coord ) ; <span class="hljs-comment">% 城 市 的 个 数 m</span>fare = distance( Coord ) ; <span class="hljs-comment">% 路 径 费 用 fare</span>path = <span class="hljs-number">1</span> : m ; <span class="hljs-comment">% 初 始 路 径 path</span>pathfar = pathfare( fare , path ) ; <span class="hljs-comment">% 路 径 费 用 path fare</span>ores = <span class="hljs-built_in">zeros</span>( <span class="hljs-number">1</span> , olen ) ; <span class="hljs-comment">% 外 循 环 保 存 的 目 标 函 数 值</span>e0 = pathfar ; <span class="hljs-comment">% 能 量 初 值 e0</span>t = t0 ; <span class="hljs-comment">% 温 度 t</span><span class="hljs-keyword">for</span> out = <span class="hljs-number">1</span> : oLk <span class="hljs-comment">% 外 循 环 模 拟 退 火 过 程</span>ires = <span class="hljs-built_in">zeros</span>( <span class="hljs-number">1</span> , ilen ) ; <span class="hljs-comment">% 内 循 环 保 存 的 目 标 函 数 值</span><span class="hljs-keyword">for</span> in = <span class="hljs-number">1</span> : iLk <span class="hljs-comment">% 内 循 环 模 拟 热 平 衡 过 程</span>[ newpath , v ] = swap( path , <span class="hljs-number">1</span> ) ; <span class="hljs-comment">% 产 生 新 状 态</span>e1 = pathfare( fare , newpath ) ; <span class="hljs-comment">% 新 状 态 能 量</span><span class="hljs-comment">% Metropolis 抽 样 稳 定 准 则</span>r = <span class="hljs-built_in">min</span>( <span class="hljs-number">1</span> , <span class="hljs-built_in">exp</span>( - ( e1 - e0 ) / t ) ) ;<span class="hljs-keyword">if</span> <span class="hljs-built_in">rand</span> &lt; rpath = newpath ; <span class="hljs-comment">% 更 新 最 佳 状 态</span>e0 = e1 ;<span class="hljs-keyword">end</span>ires = [ ires( <span class="hljs-number">2</span> : <span class="hljs-keyword">end</span> ) e0 ] ; <span class="hljs-comment">% 保 存 新 状 态 能 量</span><span class="hljs-comment">% 内 循 环 终 止 准 则 ：连 续 ilen 个 状 态 能 量 波 动 小 于 istd</span><span class="hljs-keyword">if</span> std( ires , <span class="hljs-number">1</span> ) &lt; istd<span class="hljs-keyword">break</span> ;<span class="hljs-keyword">end</span><span class="hljs-keyword">end</span>ores = [ ores( <span class="hljs-number">2</span> : <span class="hljs-keyword">end</span> ) e0 ] ; <span class="hljs-comment">% 保 存 新 状 态 能 量</span><span class="hljs-comment">% 外 循 环 终 止 准 则 ：连 续 olen 个 状 态 能 量 波 动 小 于 ostd</span><span class="hljs-keyword">if</span> std( ores , <span class="hljs-number">1</span> ) &lt; ostd<span class="hljs-keyword">break</span> ;<span class="hljs-keyword">end</span>t = lam * t ;<span class="hljs-keyword">end</span>pathfar = e0 ;<span class="hljs-comment">% 输 入 结 果</span>fprintf( <span class="hljs-string">&#x27;近似最优路径为：\n &#x27;</span> )<span class="hljs-comment">%disp( char( [ path , path(1) ] + 64 ) ) ;</span><span class="hljs-built_in">disp</span>(path)fprintf( <span class="hljs-string">&#x27;近似最优路径路程\tpathfare=&#x27;</span> ) ;<span class="hljs-built_in">disp</span>( pathfar ) ;myplot( path , Coord , pathfar ) ;</code></pre><br><pre><code class="hljs matlab">近似最优路径为：   列 <span class="hljs-number">1</span> 至 <span class="hljs-number">19</span>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span>     <span class="hljs-number">6</span>     <span class="hljs-number">7</span>     <span class="hljs-number">8</span>     <span class="hljs-number">9</span>    <span class="hljs-number">10</span>    <span class="hljs-number">11</span>    <span class="hljs-number">12</span>    <span class="hljs-number">13</span>    <span class="hljs-number">14</span>    <span class="hljs-number">15</span>    <span class="hljs-number">16</span>    <span class="hljs-number">17</span>    <span class="hljs-number">18</span>    <span class="hljs-number">19</span>  列 <span class="hljs-number">20</span> 至 <span class="hljs-number">31</span>    <span class="hljs-number">20</span>    <span class="hljs-number">21</span>    <span class="hljs-number">22</span>    <span class="hljs-number">23</span>    <span class="hljs-number">24</span>    <span class="hljs-number">25</span>    <span class="hljs-number">26</span>    <span class="hljs-number">27</span>    <span class="hljs-number">28</span>    <span class="hljs-number">29</span>    <span class="hljs-number">30</span>    <span class="hljs-number">31</span>近似最优路径路程    pathfare=   <span class="hljs-number">1.0104e+06</span></code></pre></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129221902.png" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>综合评价</tag>
      
      <tag>模拟退火算法</tag>
      
      <tag>优化问题</tag>
      
      <tag>TSP</tag>
      
      <tag>tsp</tag>
      
      <tag>最短路径</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200806】</title>
    <link href="/2020/08/06/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200806%E3%80%91/"/>
    <url>/2020/08/06/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200806%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="主成分分析法"><a href="#主成分分析法" class="headerlink" title="主成分分析法"></a>主成分分析法</h1><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p>30个市经济各项水平统计如下，请针对各市经济水平做综合评价。<br>指标如下：GDP、居民消费水平、固定资产投资、职工平均工资、货物周转量、居民消费价格指数、商品零售价格指数、工业总产值<br><pre><code class="hljs matlab"><span class="hljs-comment">%1.对原始资料矩阵进行标准化处理</span>zef_data = xlsread(<span class="hljs-string">&#x27;zhengfu.xlsx&#x27;</span>,<span class="hljs-string">&#x27;A1:H30&#x27;</span>);z = zscore(zef_data)<span class="hljs-comment">%2.计算相关系数矩阵</span>cor = corrcoef(z)<span class="hljs-comment">%3.计算该相关系数矩阵的特征值和特征向量，并对特征值进行排序</span>[vec, val] = eig(cor)  <span class="hljs-comment">%特征向量vec  特征值val</span>newval = <span class="hljs-built_in">diag</span>(val);  <span class="hljs-comment">%取主对角线上的数值，排成一列数组</span>newy = <span class="hljs-built_in">sort</span>(newval, <span class="hljs-string">&#x27;descend&#x27;</span>)<span class="hljs-comment">%4.确定主成分个数</span>newrate = newy./sum(newy)  <span class="hljs-comment">%求方差贡献率</span></code></pre><br><pre><code class="hljs matlab">vec =    <span class="hljs-number">0.0109</span>    <span class="hljs-number">0.5539</span>    <span class="hljs-number">0.4080</span>   <span class="hljs-number">-0.1042</span>    <span class="hljs-number">0.0890</span>    <span class="hljs-number">0.2307</span>    <span class="hljs-number">0.6671</span>    <span class="hljs-number">0.0977</span>   <span class="hljs-number">-0.0771</span>   <span class="hljs-number">-0.3504</span>    <span class="hljs-number">0.3043</span>   <span class="hljs-number">-0.4476</span>   <span class="hljs-number">-0.4496</span>   <span class="hljs-number">-0.4534</span>    <span class="hljs-number">0.2001</span>    <span class="hljs-number">0.3613</span>    <span class="hljs-number">0.4191</span>    <span class="hljs-number">0.4359</span>   <span class="hljs-number">-0.5288</span>   <span class="hljs-number">-0.2359</span>   <span class="hljs-number">-0.2482</span>    <span class="hljs-number">0.0325</span>   <span class="hljs-number">-0.1290</span>    <span class="hljs-number">0.4688</span>   <span class="hljs-number">-0.6966</span>    <span class="hljs-number">0.2717</span>    <span class="hljs-number">0.0032</span>    <span class="hljs-number">0.4111</span>   <span class="hljs-number">-0.1323</span>   <span class="hljs-number">-0.0710</span>   <span class="hljs-number">-0.1781</span>    <span class="hljs-number">0.4665</span>   <span class="hljs-number">-0.2552</span>   <span class="hljs-number">-0.2215</span>    <span class="hljs-number">0.0281</span>   <span class="hljs-number">-0.5299</span>    <span class="hljs-number">0.4367</span>    <span class="hljs-number">0.5087</span>   <span class="hljs-number">-0.1960</span>    <span class="hljs-number">0.3411</span>    <span class="hljs-number">0.5152</span>   <span class="hljs-number">-0.1608</span>    <span class="hljs-number">0.5043</span>    <span class="hljs-number">0.4166</span>    <span class="hljs-number">0.1020</span>    <span class="hljs-number">0.1151</span>   <span class="hljs-number">-0.2373</span>    <span class="hljs-number">0.4482</span>   <span class="hljs-number">-0.0497</span>    <span class="hljs-number">0.0252</span>    <span class="hljs-number">0.2152</span>   <span class="hljs-number">-0.0557</span>   <span class="hljs-number">-0.6998</span>    <span class="hljs-number">0.5873</span>   <span class="hljs-number">-0.2350</span>   <span class="hljs-number">-0.2401</span>   <span class="hljs-number">-0.0024</span>   <span class="hljs-number">-0.4806</span>   <span class="hljs-number">-0.3998</span>    <span class="hljs-number">0.3266</span>   <span class="hljs-number">-0.1415</span>    <span class="hljs-number">0.3438</span>    <span class="hljs-number">0.5626</span>    <span class="hljs-number">0.2183</span>val =    <span class="hljs-number">0.0119</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>    <span class="hljs-number">0.0489</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>    <span class="hljs-number">0.0721</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>    <span class="hljs-number">0.1662</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>    <span class="hljs-number">0.5028</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>    <span class="hljs-number">1.1819</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>    <span class="hljs-number">1.9446</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>         <span class="hljs-number">0</span>    <span class="hljs-number">4.0716</span>newy =    <span class="hljs-number">4.0716</span>    <span class="hljs-number">1.9446</span>    <span class="hljs-number">1.1819</span>    <span class="hljs-number">0.5028</span>    <span class="hljs-number">0.1662</span>    <span class="hljs-number">0.0721</span>    <span class="hljs-number">0.0489</span>    <span class="hljs-number">0.0119</span>newrate =    <span class="hljs-number">0.5089</span>    <span class="hljs-number">0.2431</span>    <span class="hljs-number">0.1477</span>    <span class="hljs-number">0.0629</span>    <span class="hljs-number">0.0208</span>    <span class="hljs-number">0.0090</span>    <span class="hljs-number">0.0061</span>    <span class="hljs-number">0.0015</span></code></pre><br>由方差贡献率可知：0.5089+0.2431+0.1477&gt;0.8,因此7、6、5后三项作为主成分。<br>下图所示为特征向量值，所以7、6、5倒数3列为各省主成分。<br><pre><code class="hljs matlab">vec =    <span class="hljs-number">0.0109</span>    <span class="hljs-number">0.5539</span>    <span class="hljs-number">0.4080</span>   <span class="hljs-number">-0.1042</span>    <span class="hljs-number">0.0890</span>    <span class="hljs-number">0.2307</span>    <span class="hljs-number">0.6671</span>    <span class="hljs-number">0.0977</span>   <span class="hljs-number">-0.0771</span>   <span class="hljs-number">-0.3504</span>    <span class="hljs-number">0.3043</span>   <span class="hljs-number">-0.4476</span>   <span class="hljs-number">-0.4496</span>   <span class="hljs-number">-0.4534</span>    <span class="hljs-number">0.2001</span>    <span class="hljs-number">0.3613</span>    <span class="hljs-number">0.4191</span>    <span class="hljs-number">0.4359</span>   <span class="hljs-number">-0.5288</span>   <span class="hljs-number">-0.2359</span>   <span class="hljs-number">-0.2482</span>    <span class="hljs-number">0.0325</span>   <span class="hljs-number">-0.1290</span>    <span class="hljs-number">0.4688</span>   <span class="hljs-number">-0.6966</span>    <span class="hljs-number">0.2717</span>    <span class="hljs-number">0.0032</span>    <span class="hljs-number">0.4111</span>   <span class="hljs-number">-0.1323</span>   <span class="hljs-number">-0.0710</span>   <span class="hljs-number">-0.1781</span>    <span class="hljs-number">0.4665</span>   <span class="hljs-number">-0.2552</span>   <span class="hljs-number">-0.2215</span>    <span class="hljs-number">0.0281</span>   <span class="hljs-number">-0.5299</span>    <span class="hljs-number">0.4367</span>    <span class="hljs-number">0.5087</span>   <span class="hljs-number">-0.1960</span>    <span class="hljs-number">0.3411</span>    <span class="hljs-number">0.5152</span>   <span class="hljs-number">-0.1608</span>    <span class="hljs-number">0.5043</span>    <span class="hljs-number">0.4166</span>    <span class="hljs-number">0.1020</span>    <span class="hljs-number">0.1151</span>   <span class="hljs-number">-0.2373</span>    <span class="hljs-number">0.4482</span>   <span class="hljs-number">-0.0497</span>    <span class="hljs-number">0.0252</span>    <span class="hljs-number">0.2152</span>   <span class="hljs-number">-0.0557</span>   <span class="hljs-number">-0.6998</span>    <span class="hljs-number">0.5873</span>   <span class="hljs-number">-0.2350</span>   <span class="hljs-number">-0.2401</span>   <span class="hljs-number">-0.0024</span>   <span class="hljs-number">-0.4806</span>   <span class="hljs-number">-0.3998</span>    <span class="hljs-number">0.3266</span>   <span class="hljs-number">-0.1415</span>    <span class="hljs-number">0.3438</span>    <span class="hljs-number">0.5626</span>    <span class="hljs-number">0.2183</span></code></pre><br><pre><code class="hljs matlab"><span class="hljs-comment">%5.计算主成分得分</span>sco = z * vec<span class="hljs-comment">%6.建立排序指标，进行排序</span>nowsco = sco(:, <span class="hljs-keyword">end</span>) .* newrate(<span class="hljs-number">1</span>) + sco(:, <span class="hljs-keyword">end</span><span class="hljs-number">-1</span>) .* newrate(<span class="hljs-number">2</span>)+ sco(:, <span class="hljs-keyword">end</span><span class="hljs-number">-2</span>) .* newrate(<span class="hljs-number">3</span>)[a,x] = <span class="hljs-built_in">sort</span>(nowsco, <span class="hljs-string">&#x27;descend&#x27;</span>)</code></pre><br><pre><code class="hljs matlab"><span class="hljs-comment">%倒数第一列是第一主成分在30个城市中的得分，倒数第二列是是第二主成分在30个城市中的得分</span>sco =   <span class="hljs-number">-0.2671</span>    <span class="hljs-number">0.4404</span>   <span class="hljs-number">-0.1319</span>    <span class="hljs-number">0.7683</span>    <span class="hljs-number">0.0348</span>   <span class="hljs-number">-1.0019</span>   <span class="hljs-number">-0.8083</span>    <span class="hljs-number">3.1053</span>   <span class="hljs-number">-0.1212</span>   <span class="hljs-number">-0.0731</span>    <span class="hljs-number">0.1029</span>    <span class="hljs-number">0.5436</span>    <span class="hljs-number">0.9089</span>   <span class="hljs-number">-1.9800</span>   <span class="hljs-number">-0.7629</span>    <span class="hljs-number">2.6881</span>   <span class="hljs-number">-0.0113</span>    <span class="hljs-number">0.4556</span>   <span class="hljs-number">-0.3883</span>   <span class="hljs-number">-1.0661</span>    <span class="hljs-number">0.9795</span>    <span class="hljs-number">2.9656</span>   <span class="hljs-number">-1.0149</span>    <span class="hljs-number">3.3810</span>    <span class="hljs-number">0.0458</span>    <span class="hljs-number">0.1186</span>    <span class="hljs-number">0.2694</span>    <span class="hljs-number">0.6032</span>    <span class="hljs-number">0.2964</span>    <span class="hljs-number">0.8737</span>   <span class="hljs-number">-1.5556</span>    <span class="hljs-number">1.3791</span>    <span class="hljs-number">0.0503</span>    <span class="hljs-number">0.0518</span>    <span class="hljs-number">0.6655</span>    <span class="hljs-number">0.2457</span>   <span class="hljs-number">-0.0388</span>    <span class="hljs-number">1.0481</span>   <span class="hljs-number">-2.0285</span>    <span class="hljs-number">1.0424</span>   <span class="hljs-number">-0.2491</span>   <span class="hljs-number">-0.7849</span>    <span class="hljs-number">0.0103</span>   <span class="hljs-number">-0.2186</span>    <span class="hljs-number">0.6038</span>    <span class="hljs-number">1.4134</span>    <span class="hljs-number">0.4535</span>    <span class="hljs-number">3.2715</span>    <span class="hljs-number">0.2483</span>   <span class="hljs-number">-0.0634</span>    <span class="hljs-number">0.2053</span>    <span class="hljs-number">0.5152</span>    <span class="hljs-number">0.2555</span>   <span class="hljs-number">-0.0685</span>   <span class="hljs-number">-1.0577</span>    <span class="hljs-number">1.6799</span>    <span class="hljs-number">0.3040</span>   <span class="hljs-number">-0.2936</span>    <span class="hljs-number">0.0847</span>   <span class="hljs-number">-0.0270</span>    <span class="hljs-number">0.1158</span>    <span class="hljs-number">0.5102</span>   <span class="hljs-number">-0.2808</span>    <span class="hljs-number">2.5044</span>    <span class="hljs-number">0.0840</span>    <span class="hljs-number">0.0376</span>   <span class="hljs-number">-0.3266</span>   <span class="hljs-number">-0.4305</span>   <span class="hljs-number">-2.3921</span>   <span class="hljs-number">-1.8753</span>    <span class="hljs-number">0.8014</span>    <span class="hljs-number">5.5768</span>    <span class="hljs-number">0.0004</span>   <span class="hljs-number">-0.0170</span>    <span class="hljs-number">0.0486</span>    <span class="hljs-number">0.2251</span>   <span class="hljs-number">-0.0212</span>    <span class="hljs-number">0.6055</span>    <span class="hljs-number">3.1295</span>   <span class="hljs-number">-0.2001</span>   <span class="hljs-number">-0.0152</span>    <span class="hljs-number">0.1412</span>    <span class="hljs-number">0.3801</span>   <span class="hljs-number">-0.4242</span>    <span class="hljs-number">0.2755</span>   <span class="hljs-number">-0.7199</span>    <span class="hljs-number">1.4977</span>   <span class="hljs-number">-0.4861</span>    <span class="hljs-number">0.0839</span>    <span class="hljs-number">0.0399</span>   <span class="hljs-number">-0.4196</span>    <span class="hljs-number">0.1720</span>    <span class="hljs-number">1.0203</span>   <span class="hljs-number">-0.7362</span>    <span class="hljs-number">0.5886</span>   <span class="hljs-number">-0.9374</span>   <span class="hljs-number">-0.0532</span>    <span class="hljs-number">0.0089</span>    <span class="hljs-number">0.4601</span>   <span class="hljs-number">-0.6610</span>   <span class="hljs-number">-0.0587</span>   <span class="hljs-number">-0.9762</span>    <span class="hljs-number">0.3208</span>   <span class="hljs-number">-0.8409</span>    <span class="hljs-number">0.0016</span>    <span class="hljs-number">0.0192</span>   <span class="hljs-number">-0.1305</span>    <span class="hljs-number">0.0309</span>   <span class="hljs-number">-0.1090</span>    <span class="hljs-number">0.0185</span>   <span class="hljs-number">-0.4284</span>   <span class="hljs-number">-1.5195</span>    <span class="hljs-number">0.0368</span>   <span class="hljs-number">-0.0624</span>   <span class="hljs-number">-0.2698</span>    <span class="hljs-number">0.5473</span>    <span class="hljs-number">0.1708</span>    <span class="hljs-number">0.8670</span>    <span class="hljs-number">3.1543</span>   <span class="hljs-number">-0.2973</span>    <span class="hljs-number">0.0512</span>    <span class="hljs-number">0.0868</span>   <span class="hljs-number">-0.3433</span>    <span class="hljs-number">0.4549</span>    <span class="hljs-number">0.2526</span>    <span class="hljs-number">0.5363</span>    <span class="hljs-number">1.2403</span>   <span class="hljs-number">-1.0387</span>   <span class="hljs-number">-0.0414</span>   <span class="hljs-number">-0.1997</span>   <span class="hljs-number">-0.0449</span>    <span class="hljs-number">0.1098</span>   <span class="hljs-number">-0.6326</span>    <span class="hljs-number">0.6207</span>    <span class="hljs-number">0.7261</span>   <span class="hljs-number">-1.1425</span>   <span class="hljs-number">-0.0019</span>    <span class="hljs-number">0.0704</span>   <span class="hljs-number">-0.0080</span>    <span class="hljs-number">0.0072</span>   <span class="hljs-number">-0.0855</span>    <span class="hljs-number">0.0907</span>    <span class="hljs-number">0.3834</span>   <span class="hljs-number">-1.2070</span>    <span class="hljs-number">0.0062</span>    <span class="hljs-number">0.2360</span>    <span class="hljs-number">0.5092</span>   <span class="hljs-number">-0.4653</span>    <span class="hljs-number">0.7371</span>   <span class="hljs-number">-0.9719</span>    <span class="hljs-number">3.1392</span>    <span class="hljs-number">0.2452</span>   <span class="hljs-number">-0.0202</span>    <span class="hljs-number">0.1367</span>    <span class="hljs-number">0.0953</span>   <span class="hljs-number">-0.0901</span>   <span class="hljs-number">-0.3339</span>    <span class="hljs-number">0.1565</span>   <span class="hljs-number">-0.2945</span>   <span class="hljs-number">-1.5072</span>    <span class="hljs-number">0.0614</span>   <span class="hljs-number">-0.1975</span>   <span class="hljs-number">-0.3144</span>   <span class="hljs-number">-0.3866</span>    <span class="hljs-number">1.3292</span>   <span class="hljs-number">-2.1673</span>   <span class="hljs-number">-0.5809</span>   <span class="hljs-number">-0.9178</span>   <span class="hljs-number">-0.0205</span>    <span class="hljs-number">0.1694</span>    <span class="hljs-number">0.0782</span>    <span class="hljs-number">0.2735</span>   <span class="hljs-number">-0.6234</span>    <span class="hljs-number">1.1873</span>    <span class="hljs-number">1.3348</span>   <span class="hljs-number">-1.1501</span>   <span class="hljs-number">-0.0142</span>    <span class="hljs-number">0.1213</span>   <span class="hljs-number">-0.0579</span>    <span class="hljs-number">0.0199</span>   <span class="hljs-number">-0.4379</span>    <span class="hljs-number">0.3117</span>   <span class="hljs-number">-1.1431</span>   <span class="hljs-number">-1.9150</span>   <span class="hljs-number">-0.0636</span>   <span class="hljs-number">-0.1021</span>    <span class="hljs-number">0.0482</span>    <span class="hljs-number">0.0060</span>   <span class="hljs-number">-0.9963</span>    <span class="hljs-number">0.7430</span>   <span class="hljs-number">-0.5425</span>   <span class="hljs-number">-1.7106</span>    <span class="hljs-number">0.0281</span>    <span class="hljs-number">0.0692</span>   <span class="hljs-number">-0.1999</span>   <span class="hljs-number">-0.1376</span>    <span class="hljs-number">0.3650</span>   <span class="hljs-number">-0.7658</span>   <span class="hljs-number">-1.3861</span>   <span class="hljs-number">-1.7108</span>   <span class="hljs-number">-0.0311</span>   <span class="hljs-number">-0.0777</span>   <span class="hljs-number">-0.0733</span>    <span class="hljs-number">0.0158</span>   <span class="hljs-number">-0.5475</span>    <span class="hljs-number">0.3302</span>   <span class="hljs-number">-0.6233</span>   <span class="hljs-number">-1.6505</span>   <span class="hljs-number">-0.0028</span>   <span class="hljs-number">-0.0617</span>   <span class="hljs-number">-0.2341</span>    <span class="hljs-number">0.0926</span>   <span class="hljs-number">-0.2533</span>    <span class="hljs-number">0.1336</span>   <span class="hljs-number">-0.9374</span>   <span class="hljs-number">-1.7505</span>   <span class="hljs-number">-0.0382</span>   <span class="hljs-number">-0.0898</span>    <span class="hljs-number">0.0388</span>   <span class="hljs-number">-0.3045</span>   <span class="hljs-number">-0.3436</span>   <span class="hljs-number">-0.4329</span>   <span class="hljs-number">-1.3358</span>   <span class="hljs-number">-1.7028</span>   <span class="hljs-number">-0.0039</span>   <span class="hljs-number">-0.0719</span>   <span class="hljs-number">-0.1110</span>   <span class="hljs-number">-0.2239</span>    <span class="hljs-number">0.0702</span>   <span class="hljs-number">-0.6892</span>   <span class="hljs-number">-1.2226</span>   <span class="hljs-number">-1.6105</span>   <span class="hljs-number">-0.0471</span>   <span class="hljs-number">-0.1084</span>    <span class="hljs-number">0.0569</span>   <span class="hljs-number">-0.1955</span>   <span class="hljs-number">-0.5414</span>   <span class="hljs-number">-0.0271</span>   <span class="hljs-number">-0.7662</span>   <span class="hljs-number">-1.5784</span></code></pre><br>下面展示的为各个市按照上面计算得到的结果以及原数据排名。<br><pre><code class="hljs matlab">nowsco =    <span class="hljs-number">1.2360</span>    <span class="hljs-number">0.8902</span>    <span class="hljs-number">1.9122</span>    <span class="hljs-number">0.4528</span>    <span class="hljs-number">0.1923</span>    <span class="hljs-number">1.9841</span>    <span class="hljs-number">0.5877</span>    <span class="hljs-number">1.2817</span>    <span class="hljs-number">2.7561</span>    <span class="hljs-number">0.7483</span>    <span class="hljs-number">0.0103</span>   <span class="hljs-number">-0.4428</span>   <span class="hljs-number">-0.4942</span>   <span class="hljs-number">-0.8748</span>    <span class="hljs-number">0.7435</span>   <span class="hljs-number">-0.1479</span>   <span class="hljs-number">-0.3133</span>   <span class="hljs-number">-0.5077</span>    <span class="hljs-number">0.7443</span>   <span class="hljs-number">-0.8155</span>   <span class="hljs-number">-0.9285</span>   <span class="hljs-number">-0.0855</span>   <span class="hljs-number">-1.2065</span>   <span class="hljs-number">-0.8927</span>   <span class="hljs-number">-1.3208</span>   <span class="hljs-number">-0.9428</span>   <span class="hljs-number">-1.0990</span>   <span class="hljs-number">-1.2553</span>   <span class="hljs-number">-1.2187</span>   <span class="hljs-number">-0.9936</span>a =    <span class="hljs-number">2.7561</span>    <span class="hljs-number">1.9841</span>    <span class="hljs-number">1.9122</span>    <span class="hljs-number">1.2817</span>    <span class="hljs-number">1.2360</span>    <span class="hljs-number">0.8902</span>    <span class="hljs-number">0.7483</span>    <span class="hljs-number">0.7443</span>    <span class="hljs-number">0.7435</span>    <span class="hljs-number">0.5877</span>    <span class="hljs-number">0.4528</span>    <span class="hljs-number">0.1923</span>    <span class="hljs-number">0.0103</span>   <span class="hljs-number">-0.0855</span>   <span class="hljs-number">-0.1479</span>   <span class="hljs-number">-0.3133</span>   <span class="hljs-number">-0.4428</span>   <span class="hljs-number">-0.4942</span>   <span class="hljs-number">-0.5077</span>   <span class="hljs-number">-0.8155</span>   <span class="hljs-number">-0.8748</span>   <span class="hljs-number">-0.8927</span>   <span class="hljs-number">-0.9285</span>   <span class="hljs-number">-0.9428</span>   <span class="hljs-number">-0.9936</span>   <span class="hljs-number">-1.0990</span>   <span class="hljs-number">-1.2065</span>   <span class="hljs-number">-1.2187</span>   <span class="hljs-number">-1.2553</span>   <span class="hljs-number">-1.3208</span>x =     <span class="hljs-number">9</span>     <span class="hljs-number">6</span>     <span class="hljs-number">3</span>     <span class="hljs-number">8</span>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>    <span class="hljs-number">10</span>    <span class="hljs-number">19</span>    <span class="hljs-number">15</span>     <span class="hljs-number">7</span>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span>    <span class="hljs-number">11</span>    <span class="hljs-number">22</span>    <span class="hljs-number">16</span>    <span class="hljs-number">17</span>    <span class="hljs-number">12</span>    <span class="hljs-number">13</span>    <span class="hljs-number">18</span>    <span class="hljs-number">20</span>    <span class="hljs-number">14</span>    <span class="hljs-number">24</span>    <span class="hljs-number">21</span>    <span class="hljs-number">26</span>    <span class="hljs-number">30</span>    <span class="hljs-number">27</span>    <span class="hljs-number">23</span>    <span class="hljs-number">29</span>    <span class="hljs-number">28</span>    <span class="hljs-number">25</span></code></pre></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>主成分分析</tag>
      
      <tag>标准化处理</tag>
      
      <tag>相关系数矩阵</tag>
      
      <tag>特征值</tag>
      
      <tag>特征向量</tag>
      
      <tag>主成分得分</tag>
      
      <tag>排序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200805】</title>
    <link href="/2020/08/05/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200805%E3%80%91/"/>
    <url>/2020/08/05/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200805%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="通径系数"><a href="#通径系数" class="headerlink" title="通径系数"></a>通径系数</h1><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p>用湖北省油菜投入与产出的数据，计算油菜产量与物质费用投入、土地投入、劳动力投入的直接通径系数。</p><p>1.首先计算油菜产出y与各投入之间的简单相关系数</p><pre><code class="hljs matlab">clearclcA=xlsread(<span class="hljs-string">&#x27;youcai.xlsx&#x27;</span>,<span class="hljs-string">&#x27;B2:E14&#x27;</span>);<span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:<span class="hljs-number">3</span>    xi=<span class="hljs-built_in">log</span>(A(:,<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>));    y=<span class="hljs-built_in">log</span>(A(:,<span class="hljs-number">1</span>));    [ry(<span class="hljs-built_in">i</span>),py(<span class="hljs-built_in">i</span>)]=corr(xi,y,<span class="hljs-string">&#x27;type&#x27;</span>,<span class="hljs-string">&#x27;pearson&#x27;</span>);<span class="hljs-keyword">end</span>ry,py</code></pre><pre><code class="hljs matlab">ry =    <span class="hljs-number">0.9640</span>    <span class="hljs-number">0.9835</span>    <span class="hljs-number">0.8980</span>py =   <span class="hljs-number">1.0e-04</span> *    <span class="hljs-number">0.0011</span>    <span class="hljs-number">0.0000</span>    <span class="hljs-number">0.3076</span></code></pre><p>此处可以看到p1,p2,p3&lt;&lt;0.05，拒绝原假设，认为各投入都与油菜产出y相关。</p><p>2.计算所有自变量之间的相关系数</p><pre><code class="hljs matlab">A=xlsread(<span class="hljs-string">&#x27;youcai.xlsx&#x27;</span>,<span class="hljs-string">&#x27;B2:E14&#x27;</span>);<span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:<span class="hljs-number">3</span>    xi=<span class="hljs-built_in">log</span>(A(:,<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>));    <span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span>=<span class="hljs-number">1</span>:<span class="hljs-number">3</span>        xj=<span class="hljs-built_in">log</span>(A(:,<span class="hljs-built_in">j</span>+<span class="hljs-number">1</span>));        r(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>)=corr(xi,xj,<span class="hljs-string">&#x27;type&#x27;</span>,<span class="hljs-string">&#x27;pearson&#x27;</span>);    <span class="hljs-keyword">end</span><span class="hljs-keyword">end</span>r</code></pre><pre><code class="hljs matlab">r =    <span class="hljs-number">1.0000</span>    <span class="hljs-number">0.9565</span>    <span class="hljs-number">0.9267</span>    <span class="hljs-number">0.9565</span>    <span class="hljs-number">1.0000</span>    <span class="hljs-number">0.9420</span>    <span class="hljs-number">0.9267</span>    <span class="hljs-number">0.9420</span>    <span class="hljs-number">1.0000</span></code></pre><p>3.建立通径方程</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129220448.png" alt=""></p><p>4.计算出直接通径系数<br><pre><code class="hljs matlab">p=inv(r)*ry&#x27;p =<span class="hljs-number">0.3751</span><span class="hljs-number">0.9438</span><span class="hljs-number">-0.3386</span></code></pre><br><span class="label label-primary">可以看出，湖北省油菜产出主要是面积的投入影响的，其次是物质费用投入的影响，湖北省油菜产量没有受到劳动力减少的影响。</span></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>相关系数</tag>
      
      <tag>通径系数</tag>
      
      <tag>简单相关系数</tag>
      
      <tag>通径方程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200804】</title>
    <link href="/2020/08/04/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200804%E3%80%91/"/>
    <url>/2020/08/04/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200804%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="单因素方差分析"><a href="#单因素方差分析" class="headerlink" title="单因素方差分析"></a>单因素方差分析</h1><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129215419.png" alt=""></p><p><span class="label label-primary">正态性检验</span></p><p>原假设为不同样品的电流是符合正态分布的。<br>备择假设为不同样品的电流是符合正态分布的。<br><pre><code class="hljs matlab">a=[<span class="hljs-number">1.7</span> <span class="hljs-number">2.1</span> <span class="hljs-number">1.5</span> <span class="hljs-number">1.9</span><span class="hljs-number">2.1</span> <span class="hljs-number">2.2</span> <span class="hljs-number">1.3</span> <span class="hljs-number">1.9</span><span class="hljs-number">2.2</span> <span class="hljs-number">2.0</span> <span class="hljs-number">1.8</span> <span class="hljs-number">2.2</span><span class="hljs-number">2.1</span> <span class="hljs-number">2.2</span> <span class="hljs-number">1.4</span> <span class="hljs-number">2.3</span><span class="hljs-number">1.9</span> <span class="hljs-number">2.1</span> <span class="hljs-number">1.7</span> <span class="hljs-number">2.0</span>];b=[<span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> <span class="hljs-number">4</span> <span class="hljs-number">4</span> <span class="hljs-number">4</span> <span class="hljs-number">5</span> <span class="hljs-number">5</span> <span class="hljs-number">5</span> <span class="hljs-number">5</span>];a=<span class="hljs-built_in">reshape</span>(a&#x27;,<span class="hljs-built_in">numel</span>(a),<span class="hljs-number">1</span>);<span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:<span class="hljs-number">5</span>    ai=a(b==<span class="hljs-built_in">i</span>);    alpha=<span class="hljs-number">0.05</span>;    [mui,sigmai]=normfit(ai);    <span class="hljs-built_in">pi</span>=normcdf(ai,mui,sigmai);    [h0(<span class="hljs-built_in">i</span>),p(<span class="hljs-built_in">i</span>)]=kstest(ai,[ai,<span class="hljs-built_in">pi</span>],alpha);<span class="hljs-keyword">end</span>h0,p</code></pre><br><pre><code class="hljs matlab">h0 =  <span class="hljs-number">1</span>×<span class="hljs-number">5</span> logical 数组   <span class="hljs-number">0</span>   <span class="hljs-number">0</span>   <span class="hljs-number">0</span>   <span class="hljs-number">0</span>   <span class="hljs-number">0</span>p =    <span class="hljs-number">0.9807</span>    <span class="hljs-number">0.8446</span>    <span class="hljs-number">0.8207</span>    <span class="hljs-number">0.6162</span>    <span class="hljs-number">0.9499</span></code></pre><br>h0均为0，接受原假设，即每个样本的电流均符合正态分布。</p><p><span class="label label-primary">方差齐性检验</span></p><p>原假设是5个样本电流数据服从方差相同的正态分布。<br>备择假设是服从方差不同的正态分布。<br><pre><code class="hljs matlab">[p,stats]=vartestn(a,b)</code></pre><br><pre><code class="hljs matlab">p =    <span class="hljs-number">0.5093</span></code></pre><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129215632.png" alt=""><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129215657.png" alt=""><br>p&gt;&gt;0.05,所以接受原假设，所以5个样本服从方差相同的正态分布。</p><p><span class="label label-primary">方差分析</span></p><p>原假设是没有显著差异，即$μ_1=μ_2=μ_3=μ_4=μ_5$。<br>备择假设时有显著差异。<br><pre><code class="hljs matlab">[p,<span class="hljs-built_in">table</span>,stats]=anova1(a,b)</code></pre><br><pre><code class="hljs matlab">p =    <span class="hljs-number">0.7882</span></code></pre><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129215811.png" alt=""><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129215812.png" alt=""></p><p>p&gt;&gt;0.05,接受原假设，即没有显著差异。</p><p><span class="label label-primary">两两之间多重比较</span></p><pre><code class="hljs matlab">sta=multcompare(stats,<span class="hljs-string">&#x27;estimate&#x27;</span>,<span class="hljs-string">&#x27;column&#x27;</span>)</code></pre><pre><code class="hljs matlab">sta =    <span class="hljs-number">1.0000</span>    <span class="hljs-number">2.0000</span>   <span class="hljs-number">-0.7385</span>   <span class="hljs-number">-0.0750</span>    <span class="hljs-number">0.5885</span>    <span class="hljs-number">0.9965</span>    <span class="hljs-number">1.0000</span>    <span class="hljs-number">3.0000</span>   <span class="hljs-number">-0.9135</span>   <span class="hljs-number">-0.2500</span>    <span class="hljs-number">0.4135</span>    <span class="hljs-number">0.7711</span>    <span class="hljs-number">1.0000</span>    <span class="hljs-number">4.0000</span>   <span class="hljs-number">-0.8635</span>   <span class="hljs-number">-0.2000</span>    <span class="hljs-number">0.4635</span>    <span class="hljs-number">0.8805</span>    <span class="hljs-number">1.0000</span>    <span class="hljs-number">5.0000</span>   <span class="hljs-number">-0.7885</span>   <span class="hljs-number">-0.1250</span>    <span class="hljs-number">0.5385</span>    <span class="hljs-number">0.9758</span>    <span class="hljs-number">2.0000</span>    <span class="hljs-number">3.0000</span>   <span class="hljs-number">-0.8385</span>   <span class="hljs-number">-0.1750</span>    <span class="hljs-number">0.4885</span>    <span class="hljs-number">0.9221</span>    <span class="hljs-number">2.0000</span>    <span class="hljs-number">4.0000</span>   <span class="hljs-number">-0.7885</span>   <span class="hljs-number">-0.1250</span>    <span class="hljs-number">0.5385</span>    <span class="hljs-number">0.9758</span>    <span class="hljs-number">2.0000</span>    <span class="hljs-number">5.0000</span>   <span class="hljs-number">-0.7135</span>   <span class="hljs-number">-0.0500</span>    <span class="hljs-number">0.6135</span>    <span class="hljs-number">0.9993</span>    <span class="hljs-number">3.0000</span>    <span class="hljs-number">4.0000</span>   <span class="hljs-number">-0.6135</span>    <span class="hljs-number">0.0500</span>    <span class="hljs-number">0.7135</span>    <span class="hljs-number">0.9993</span>    <span class="hljs-number">3.0000</span>    <span class="hljs-number">5.0000</span>   <span class="hljs-number">-0.5385</span>    <span class="hljs-number">0.1250</span>    <span class="hljs-number">0.7885</span>    <span class="hljs-number">0.9758</span>    <span class="hljs-number">4.0000</span>    <span class="hljs-number">5.0000</span>   <span class="hljs-number">-0.5885</span>    <span class="hljs-number">0.0750</span>    <span class="hljs-number">0.7385</span>    <span class="hljs-number">0.9965</span></code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129215928.gif" alt=""><br>经两两之间多重验证，各样本没有显著差异，即$μ_1=μ_2=μ_3=μ_4=μ_5$</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>单因素方差分析</tag>
      
      <tag>方差分析</tag>
      
      <tag>方差齐次性检验</tag>
      
      <tag>两两多重比较</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200803】</title>
    <link href="/2020/08/03/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200803%E3%80%91/"/>
    <url>/2020/08/03/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200803%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="两变量间的相关系数"><a href="#两变量间的相关系数" class="headerlink" title="两变量间的相关系数"></a>两变量间的相关系数</h1><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p>某地区1982~1996年国民生产总值与工商税收收入的数据如下:<br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129214423.jpg" alt=""><br>计算两变量的相关系数</p><p><span class="label label-primary">K-S test正态检验</span></p><pre><code class="hljs matlab">x=[<span class="hljs-number">234</span> <span class="hljs-number">246</span> <span class="hljs-number">258</span> <span class="hljs-number">254</span> <span class="hljs-number">282</span> <span class="hljs-number">294</span> <span class="hljs-number">314</span> <span class="hljs-number">318</span>]y=[<span class="hljs-number">29</span> <span class="hljs-number">31</span> <span class="hljs-number">33</span> <span class="hljs-number">32</span> <span class="hljs-number">35</span> <span class="hljs-number">39</span> <span class="hljs-number">42</span> <span class="hljs-number">44</span>]x=x&#x27;y=y&#x27;[mu1,sigma1]=normfit(x)[mu2,sigma2]=normfit(y)p1=normcdf(x,mu1,sigma1)p2=normcdf(y,mu2,sigma2)h1=kstest(x,[x,p1])h2=kstest(y,[y,p2])</code></pre><pre><code class="hljs matlab">h1 =  logical   <span class="hljs-number">0</span>h2 =  logical   <span class="hljs-number">0</span></code></pre><p>返回值均为0，说明接受假设，两个序列均为正态序列。<br>但是分析该数据不是连续型数据，所以不能用Pearson检验，所以采用Spearman检验和Kendall检验。<br><span class="label label-primary"><br>  统计学中，连续数据，离散数据又称连续变量，离散变量。区分两种变量的方法为观察变量是否连续可分。连续变量，指在一定区间内可以任意取值，相邻的两个数值可作无限分割(即可取无限个值)。比如题主所说的身高，身高可以是183，也可以是183.1，也可以是183.111……1。离散变量，是指其数值只能用自然数、整数、计数单位等描述的数据。例如，职工个数(总不能是1.2个吧)，成绩A+等。<br>  要区分每月核心行为 1 次、 2次、3次，对于大多数产品意义不是很大。倒不如将连续数据转换为离散，比如 5 次以下归为一类，5 次以上归为另一类。更好的做法用「二八」划分，比如以累计贡献度达 80 % 的用户核心操作数值作为界线划分「高低」用户。即使 1、2、3次意义重大，那转为离散会更合适，每个数值能区分出不同意义。</span><br><strong>通过阅读相关文献，我发现可能是我理解错了qwq,也许这是连续性的数据！！！</strong></p><ul><li>读取数据</li><li>调用函数进行检验</li><li>~该数据不存在第三因素，所以我们不进行偏相关系数（qwq打脸）~</li></ul><pre><code class="hljs matlab">x=[<span class="hljs-number">234</span> <span class="hljs-number">246</span> <span class="hljs-number">258</span> <span class="hljs-number">254</span> <span class="hljs-number">282</span> <span class="hljs-number">294</span> <span class="hljs-number">314</span> <span class="hljs-number">318</span>]y=[<span class="hljs-number">29</span> <span class="hljs-number">31</span> <span class="hljs-number">33</span> <span class="hljs-number">32</span> <span class="hljs-number">35</span> <span class="hljs-number">39</span> <span class="hljs-number">42</span> <span class="hljs-number">44</span>]z=[<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> <span class="hljs-number">5</span> <span class="hljs-number">6</span> <span class="hljs-number">7</span> <span class="hljs-number">8</span>]x=x&#x27;y=y&#x27;z=z&#x27;[r,p]=corr(x,y,<span class="hljs-string">&#x27;type&#x27;</span>,<span class="hljs-string">&#x27;pearson&#x27;</span>) <span class="hljs-comment">%R检验（&lt;0.05）</span>[r,p]=partialcorr(x,y,z)[r,p]=corr(x,y,<span class="hljs-string">&#x27;type&#x27;</span>,<span class="hljs-string">&#x27;spearman&#x27;</span>) <span class="hljs-comment">%T检验</span>[e,p]=corr(x,y,<span class="hljs-string">&#x27;type&#x27;</span>,<span class="hljs-string">&#x27;kendall&#x27;</span>) <span class="hljs-comment">%正态检验</span></code></pre><pre><code class="hljs matlab">r =    <span class="hljs-number">0.9884</span>p =   <span class="hljs-number">3.8806e-06</span>r =    <span class="hljs-number">0.7921</span>p =    <span class="hljs-number">0.0337</span>r =     <span class="hljs-number">1</span>p =   <span class="hljs-number">4.9603e-05</span>e =     <span class="hljs-number">1</span>p =   <span class="hljs-number">4.9603e-05</span></code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.zhihu.com/question/306601010/answer/614207635">如何判断特征是连续的还是离散的?</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://www.jianshu.com/p/1030bf2d69a7">数据|连续还是离散</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>相关系数</tag>
      
      <tag>ks正态检验</tag>
      
      <tag>normtest</tag>
      
      <tag>R检验</tag>
      
      <tag>T检验</tag>
      
      <tag>正态检验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200802】</title>
    <link href="/2020/08/02/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200802%E3%80%91/"/>
    <url>/2020/08/02/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200802%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="随机序列的Markov链预测"><a href="#随机序列的Markov链预测" class="headerlink" title="随机序列的Markov链预测"></a>随机序列的Markov链预测</h1><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p>1978年至2004年城镇居民蔬菜人均消费数据，请给出城镇居民蔬菜消费量的长期趋势。<br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129213735.png" alt=""></p><h2 id="1-状态划分及构造"><a href="#1-状态划分及构造" class="headerlink" title="1.状态划分及构造"></a>1.状态划分及构造</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129213809.png" alt=""><br><pre><code class="hljs matlab">A=[<span class="hljs-number">130</span> <span class="hljs-number">137</span> <span class="hljs-number">143</span> <span class="hljs-number">152.34</span> <span class="hljs-number">159.08</span> <span class="hljs-number">165.48</span> <span class="hljs-number">149.04</span> <span class="hljs-number">144.36</span> <span class="hljs-number">148.32</span> <span class="hljs-number">142.58</span> <span class="hljs-number">147.02</span> <span class="hljs-number">144.56</span> <span class="hljs-number">138.70</span> <span class="hljs-number">132.18</span> <span class="hljs-number">124.91</span> <span class="hljs-number">120.64</span> <span class="hljs-number">120.74</span> <span class="hljs-number">116.47</span> <span class="hljs-number">118.51</span> <span class="hljs-number">113.34</span> <span class="hljs-number">113.76</span> <span class="hljs-number">114.94</span> <span class="hljs-number">114.74</span> <span class="hljs-number">115.86</span> <span class="hljs-number">116.52</span> <span class="hljs-number">118.34</span> <span class="hljs-number">122.30</span>];b=diff(A);A1=A(<span class="hljs-number">1</span>:<span class="hljs-keyword">end</span><span class="hljs-number">-1</span>);tt=b./A1*<span class="hljs-number">100</span>;z=[<span class="hljs-number">-3</span> <span class="hljs-number">0</span> <span class="hljs-number">3</span>];<span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:<span class="hljs-built_in">length</span>(tt)    <span class="hljs-keyword">if</span> tt(<span class="hljs-built_in">i</span>)&lt;z(<span class="hljs-number">1</span>)        aa(<span class="hljs-built_in">i</span>)=<span class="hljs-number">1</span>;    <span class="hljs-keyword">elseif</span> tt(<span class="hljs-built_in">i</span>)&lt;z(<span class="hljs-number">2</span>)        aa(<span class="hljs-built_in">i</span>)=<span class="hljs-number">2</span>;    <span class="hljs-keyword">elseif</span> tt(<span class="hljs-built_in">i</span>)&lt;z(<span class="hljs-number">3</span>)        aa(<span class="hljs-built_in">i</span>)=<span class="hljs-number">3</span>;    <span class="hljs-keyword">else</span>        aa(<span class="hljs-built_in">i</span>)=<span class="hljs-number">4</span>;    <span class="hljs-keyword">end</span><span class="hljs-keyword">end</span></code></pre></p><h2 id="2-计算各状态转移次数及转移概率"><a href="#2-计算各状态转移次数及转移概率" class="headerlink" title="2.计算各状态转移次数及转移概率"></a>2.计算各状态转移次数及转移概率</h2><pre><code class="hljs matlab"><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:<span class="hljs-number">4</span>    <span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span>=<span class="hljs-number">1</span>:<span class="hljs-number">4</span>        k=[<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>];        c(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>)=<span class="hljs-built_in">length</span>(strfind(aa,k));    <span class="hljs-keyword">end</span><span class="hljs-keyword">end</span>ccs=sum(c,<span class="hljs-number">2</span>);p=<span class="hljs-built_in">zeros</span>(<span class="hljs-number">4</span>,<span class="hljs-number">4</span>);<span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:<span class="hljs-number">4</span>    p(<span class="hljs-built_in">i</span>,:)=c(<span class="hljs-built_in">i</span>,:)./cs(<span class="hljs-built_in">i</span>);<span class="hljs-keyword">end</span>p</code></pre><pre><code class="hljs matlab">c =     <span class="hljs-number">4</span>     <span class="hljs-number">0</span>     <span class="hljs-number">4</span>     <span class="hljs-number">1</span>     <span class="hljs-number">1</span>     <span class="hljs-number">0</span>     <span class="hljs-number">1</span>     <span class="hljs-number">0</span>     <span class="hljs-number">3</span>     <span class="hljs-number">1</span>     <span class="hljs-number">3</span>     <span class="hljs-number">1</span>     <span class="hljs-number">1</span>     <span class="hljs-number">1</span>     <span class="hljs-number">0</span>     <span class="hljs-number">4</span>p =    <span class="hljs-number">0.4444</span>         <span class="hljs-number">0</span>    <span class="hljs-number">0.4444</span>    <span class="hljs-number">0.1111</span>    <span class="hljs-number">0.5000</span>         <span class="hljs-number">0</span>    <span class="hljs-number">0.5000</span>         <span class="hljs-number">0</span>    <span class="hljs-number">0.3750</span>    <span class="hljs-number">0.1250</span>    <span class="hljs-number">0.3750</span>    <span class="hljs-number">0.1250</span>    <span class="hljs-number">0.1667</span>    <span class="hljs-number">0.1667</span>         <span class="hljs-number">0</span>    <span class="hljs-number">0.6667</span></code></pre><h2 id="3-计算城镇居民年人均蔬菜消费量的长期趋势"><a href="#3-计算城镇居民年人均蔬菜消费量的长期趋势" class="headerlink" title="3.计算城镇居民年人均蔬菜消费量的长期趋势"></a>3.计算城镇居民年人均蔬菜消费量的长期趋势</h2><p><strong>(极限分布)</strong><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129214104.png" alt=""><br><pre><code class="hljs matlab">p1=p&#x27;-<span class="hljs-built_in">eye</span>(<span class="hljs-built_in">size</span>(p&#x27;));p2=[p1;<span class="hljs-built_in">ones</span>(<span class="hljs-number">1</span>,<span class="hljs-number">4</span>)];b11=[<span class="hljs-built_in">zeros</span>(<span class="hljs-number">1</span>,<span class="hljs-number">4</span>),<span class="hljs-number">1</span>]&#x27;;x=linsolve(p2,b11)</code></pre><br><pre><code class="hljs matlab">x =                      <span class="hljs-number">0.36</span>                      <span class="hljs-number">0.08</span>                      <span class="hljs-number">0.32</span>                      <span class="hljs-number">0.24</span></code></pre></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://blog.csdn.net/You_are_blind/article/details/107269665">随机序列的Markov链预测</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>预测</tag>
      
      <tag>随机序列</tag>
      
      <tag>Markov链</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200731】</title>
    <link href="/2020/07/31/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200731%E3%80%91/"/>
    <url>/2020/07/31/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200731%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="灰色预测案例分析"><a href="#灰色预测案例分析" class="headerlink" title="灰色预测案例分析"></a>灰色预测案例分析</h1><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129211843.png" alt=""><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129211913.jpg" alt=""></p><p>问：预测下一次旱灾的出现的时间</p><h2 id="matlab求解"><a href="#matlab求解" class="headerlink" title="matlab求解"></a>matlab求解</h2><pre><code class="hljs matlab">(<span class="hljs-number">1</span>)<span class="hljs-keyword">function</span>.m<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">[x,a,b,c,error1,error2]</span>=<span class="hljs-title">GM11</span><span class="hljs-params">(x0,k)</span></span><span class="hljs-comment">%其中x0为输入序列,k为预测长度</span><span class="hljs-comment">%x为预测输出序列，c为后检验检验数</span><span class="hljs-comment">%error1为残差，error2为相对误差</span><span class="hljs-comment">%format long； %精度达到软件最大值</span>n=<span class="hljs-built_in">length</span>(x0);x1=[];x1(<span class="hljs-number">1</span>)=x0(<span class="hljs-number">1</span>);<span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">2</span>:n    x1(<span class="hljs-built_in">i</span>)=x1(<span class="hljs-built_in">i</span><span class="hljs-number">-1</span>)+x0(<span class="hljs-built_in">i</span>); <span class="hljs-comment">%计算累加生成序列</span><span class="hljs-keyword">end</span><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:n<span class="hljs-number">-1</span> <span class="hljs-comment">%求紧邻矩阵</span>    B(<span class="hljs-built_in">i</span>,<span class="hljs-number">1</span>)=<span class="hljs-number">-0.5</span>*(x1(<span class="hljs-built_in">i</span>)+x1(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>));    B(<span class="hljs-built_in">i</span>,<span class="hljs-number">2</span>)=<span class="hljs-number">1</span>;    Y(<span class="hljs-built_in">i</span>)=x0(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>);<span class="hljs-keyword">end</span>alpha=(B&#x27;*B)^(<span class="hljs-number">-1</span>)*B&#x27;*Y&#x27;; <span class="hljs-comment">%做最小二乘估计求出参数</span>a=alpha(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);b=alpha(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>);d=b/a;c=x1(<span class="hljs-number">1</span>)-d;x2(<span class="hljs-number">1</span>)=x0(<span class="hljs-number">1</span>);<span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:n<span class="hljs-number">-1</span>    x2(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>)=c*<span class="hljs-built_in">exp</span>(-a*<span class="hljs-built_in">i</span>)+d;    x(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>)=x2(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>)-x2(<span class="hljs-built_in">i</span>);<span class="hljs-keyword">end</span> <span class="hljs-comment">%计算时间响应参数函数</span><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=(n+<span class="hljs-number">1</span>):(n+k)    x2(<span class="hljs-built_in">i</span>)=c*<span class="hljs-built_in">exp</span>(-a*(<span class="hljs-built_in">i</span><span class="hljs-number">-1</span>))+d;    x(<span class="hljs-built_in">i</span>)=x2(<span class="hljs-built_in">i</span>)-x2(<span class="hljs-built_in">i</span><span class="hljs-number">-1</span>);<span class="hljs-keyword">end</span> <span class="hljs-comment">%计算预测序列</span><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:n    error(<span class="hljs-built_in">i</span>)=x(<span class="hljs-built_in">i</span>)-x0(<span class="hljs-built_in">i</span>);    error1(<span class="hljs-built_in">i</span>)=<span class="hljs-built_in">abs</span>(error(<span class="hljs-built_in">i</span>)); <span class="hljs-comment">%计算残差 &lt;20%</span>    error2(<span class="hljs-built_in">i</span>)=error1(<span class="hljs-built_in">i</span>)/x0(<span class="hljs-built_in">i</span>); <span class="hljs-comment">%计算相对误差</span><span class="hljs-keyword">end</span>c=std(error1)/std(x0); <span class="hljs-comment">%计算后验差检验数</span>(<span class="hljs-number">2</span>)matlab操作代码a=[<span class="hljs-number">390.6</span>,<span class="hljs-number">412</span>,<span class="hljs-number">320</span>,<span class="hljs-number">559.2</span>,<span class="hljs-number">380.8</span>,<span class="hljs-number">542.4</span>,<span class="hljs-number">553</span>,<span class="hljs-number">310</span>,<span class="hljs-number">561</span>,<span class="hljs-number">300</span>,<span class="hljs-number">632</span>,<span class="hljs-number">540</span>,<span class="hljs-number">406.2</span>,<span class="hljs-number">313.8</span>,<span class="hljs-number">576</span>,<span class="hljs-number">587.6</span>,<span class="hljs-number">318.5</span>]&#x27;; <span class="hljs-comment">%录入数据</span>k=<span class="hljs-number">1</span>;t0=<span class="hljs-built_in">find</span>(a&lt;=<span class="hljs-number">320</span>);[x,a,b,c,error1,error2]=GM11(t0,k) <span class="hljs-comment">%执行之前已经写好的灰色系统预测函数</span>x=<span class="hljs-built_in">fix</span>(x) <span class="hljs-comment">%因为是整数，根据实际情况我们进行高斯函数(取整)处理</span></code></pre><pre><code class="hljs matlab">结果展示：x =         <span class="hljs-number">0</span>    <span class="hljs-number">7.9896</span>   <span class="hljs-number">10.2960</span>   <span class="hljs-number">13.2681</span>   <span class="hljs-number">17.0983</span>   <span class="hljs-number">22.0340</span>a =   <span class="hljs-number">-0.2536</span>b =    <span class="hljs-number">6.2585</span>c =    <span class="hljs-number">0.2302</span> <span class="hljs-comment">% c&lt;0.35优秀</span>error1 =    <span class="hljs-number">3.0000</span>    <span class="hljs-number">0.0104</span>    <span class="hljs-number">0.2960</span>    <span class="hljs-number">0.7319</span>    <span class="hljs-number">0.0983</span>error2 =    <span class="hljs-number">1.0000</span>    <span class="hljs-number">0.0013</span>    <span class="hljs-number">0.0296</span>    <span class="hljs-number">0.0523</span>    <span class="hljs-number">0.0058</span>x =     <span class="hljs-number">0</span>     <span class="hljs-number">7</span>    <span class="hljs-number">10</span>    <span class="hljs-number">13</span>    <span class="hljs-number">17</span>    <span class="hljs-number">22</span></code></pre><h2 id="绘制图像"><a href="#绘制图像" class="headerlink" title="绘制图像"></a>绘制图像</h2><pre><code class="hljs matlab">n=<span class="hljs-built_in">length</span>(t0)<span class="hljs-built_in">plot</span>((<span class="hljs-number">1</span>:n),t0,<span class="hljs-string">&#x27;k&#x27;</span>,<span class="hljs-string">&#x27;Markersize&#x27;</span>,<span class="hljs-number">10</span>)<span class="hljs-built_in">hold</span> on<span class="hljs-built_in">plot</span>((<span class="hljs-number">1</span>:n+<span class="hljs-number">1</span>),x)<span class="hljs-built_in">legend</span>(<span class="hljs-string">&#x27;原数据函数图像&#x27;</span>,<span class="hljs-string">&#x27;预测函数图像&#x27;</span>)xlabel(<span class="hljs-string">&#x27;x&#x27;</span>)ylabel(<span class="hljs-string">&#x27;y&#x27;</span>)title(<span class="hljs-string">&#x27;原始数据与预测数据图像&#x27;</span>)</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129212031.png" alt=""></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><pre><code class="hljs matlab">fprintf(<span class="hljs-string">&#x27;%s\n&#x27;</span>,<span class="hljs-string">&#x27;-----------------灰色系统预测值与实际值比较---------------&#x27;</span>)fprintf(<span class="hljs-string">&#x27;   %s              %s            %s            %s           %s\n&#x27;</span>,<span class="hljs-string">&#x27;n&#x27;</span>,<span class="hljs-string">&#x27;预测值&#x27;</span>,<span class="hljs-string">&#x27;实际值&#x27;</span>,<span class="hljs-string">&#x27;残差&#x27;</span>,<span class="hljs-string">&#x27;相对误差&#x27;</span>);fmt=<span class="hljs-string">&#x27;  %d  %20.4f  %15.4f  %15.4f  %13.4f\n&#x27;</span>;<span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">2</span>:n    fprintf(fmt,<span class="hljs-built_in">i</span>,x(<span class="hljs-built_in">i</span>),t0(<span class="hljs-built_in">i</span>),error1(<span class="hljs-built_in">i</span>),error2(<span class="hljs-built_in">i</span>));<span class="hljs-keyword">end</span></code></pre><h2 id="列表-1"><a href="#列表-1" class="headerlink" title="列表"></a>列表</h2><pre><code class="hljs matlab">-----------------灰色系统预测值与实际值比较---------------   n              预测值            实际值            残差           相对误差  <span class="hljs-number">2</span>                <span class="hljs-number">7.0000</span>           <span class="hljs-number">8.0000</span>           <span class="hljs-number">0.0104</span>         <span class="hljs-number">0.0013</span>  <span class="hljs-number">3</span>               <span class="hljs-number">10.0000</span>          <span class="hljs-number">10.0000</span>           <span class="hljs-number">0.2960</span>         <span class="hljs-number">0.0296</span>  <span class="hljs-number">4</span>               <span class="hljs-number">13.0000</span>          <span class="hljs-number">14.0000</span>           <span class="hljs-number">0.7319</span>         <span class="hljs-number">0.0523</span>  <span class="hljs-number">5</span>               <span class="hljs-number">17.0000</span>          <span class="hljs-number">17.0000</span>           <span class="hljs-number">0.0983</span>         <span class="hljs-number">0.0058</span></code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>相对误差</tag>
      
      <tag>残差</tag>
      
      <tag>灰色系统</tag>
      
      <tag>预测</tag>
      
      <tag>后检验检验数</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200730】</title>
    <link href="/2020/07/30/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200730%E3%80%91/"/>
    <url>/2020/07/30/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200730%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="灰色预测案例分析"><a href="#灰色预测案例分析" class="headerlink" title="灰色预测案例分析"></a>灰色预测案例分析</h1><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p>由1990-2001年某地蔬菜产量，建立模型预测该地2002年蔬菜产量，并对预测结果做检。<br><pre><code class="hljs matlab">(<span class="hljs-number">1</span>)编写函数文件<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">[x,c,error1,error2]</span>=<span class="hljs-title">GM11</span><span class="hljs-params">(x0,k)</span></span><span class="hljs-comment">%其中x0为输入序列,k为预测长度</span><span class="hljs-comment">%x为预测输出序列，c为后检验检验数</span><span class="hljs-comment">%error1为残差，error2为相对误差</span><span class="hljs-comment">%format long； %精度达到软件最大值</span>n=<span class="hljs-built_in">length</span>(x0);x1=[];x1(<span class="hljs-number">1</span>)=x0(<span class="hljs-number">1</span>);<span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">2</span>:n    x1(<span class="hljs-built_in">i</span>)=x1(<span class="hljs-built_in">i</span><span class="hljs-number">-1</span>)+x0(<span class="hljs-built_in">i</span>); <span class="hljs-comment">%计算累加生成序列</span><span class="hljs-keyword">end</span><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:n<span class="hljs-number">-1</span> <span class="hljs-comment">%求紧邻矩阵</span>    B(<span class="hljs-built_in">i</span>,<span class="hljs-number">1</span>)=<span class="hljs-number">-0.5</span>*(x1(<span class="hljs-built_in">i</span>)+x1(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>));    B(<span class="hljs-built_in">i</span>,<span class="hljs-number">2</span>)=<span class="hljs-number">1</span>;    Y(<span class="hljs-built_in">i</span>)=x0(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>);<span class="hljs-keyword">end</span>alpha=(B&#x27;*B)^(<span class="hljs-number">-1</span>)*B&#x27;*Y&#x27;; <span class="hljs-comment">%做最小二乘估计求出参数</span>a=alpha(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);b=alpha(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>);d=b/a;c=x1(<span class="hljs-number">1</span>)-d;x2(<span class="hljs-number">1</span>)=x0(<span class="hljs-number">1</span>);<span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:n<span class="hljs-number">-1</span>    x2(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>)=c*<span class="hljs-built_in">exp</span>(-a*<span class="hljs-built_in">i</span>)+d;    x(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>)=x2(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>)-x2(<span class="hljs-built_in">i</span>);<span class="hljs-keyword">end</span> <span class="hljs-comment">%计算时间响应参数函数</span><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=(n+<span class="hljs-number">1</span>):(n+k)    x2(<span class="hljs-built_in">i</span>)=c*<span class="hljs-built_in">exp</span>(-a*(<span class="hljs-built_in">i</span><span class="hljs-number">-1</span>))+d;    x(<span class="hljs-built_in">i</span>)=x2(<span class="hljs-built_in">i</span>)-x2(<span class="hljs-built_in">i</span><span class="hljs-number">-1</span>);<span class="hljs-keyword">end</span> <span class="hljs-comment">%计算预测序列</span><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:n    error(<span class="hljs-built_in">i</span>)=x(<span class="hljs-built_in">i</span>)-x0(<span class="hljs-built_in">i</span>);    error1(<span class="hljs-built_in">i</span>)=<span class="hljs-built_in">abs</span>(error(<span class="hljs-built_in">i</span>)); <span class="hljs-comment">%计算残差 &lt;20%</span>    error2(<span class="hljs-built_in">i</span>)=error1(<span class="hljs-built_in">i</span>)/x0(<span class="hljs-built_in">i</span>); <span class="hljs-comment">%计算相对误差</span><span class="hljs-keyword">end</span>c=std(error1)/std(x0); <span class="hljs-comment">%计算后验差检验数</span></code></pre><br><pre><code class="hljs matlab">(<span class="hljs-number">2</span>)matlab操作代码y=[<span class="hljs-number">19519</span>,<span class="hljs-number">19578</span>,<span class="hljs-number">19637</span>,<span class="hljs-number">19695</span>,<span class="hljs-number">16602</span>,<span class="hljs-number">25723</span>,<span class="hljs-number">30379</span>,<span class="hljs-number">34473</span>,<span class="hljs-number">38485</span>,<span class="hljs-number">40514</span>,<span class="hljs-number">42400</span>,<span class="hljs-number">48337</span>];k=<span class="hljs-number">1</span>;[X1,c1,e1,e2]=GM11(y,k)</code></pre><br><pre><code class="hljs matlab">结果展示-------------------------------------累加后序列--------------------------------x1 =  列 <span class="hljs-number">1</span> 至 <span class="hljs-number">9</span>       <span class="hljs-number">19519</span>       <span class="hljs-number">39097</span>       <span class="hljs-number">58734</span>       <span class="hljs-number">78429</span>       <span class="hljs-number">95031</span>      <span class="hljs-number">120754</span>      <span class="hljs-number">151133</span>      <span class="hljs-number">185606</span>      <span class="hljs-number">224091</span>  列 <span class="hljs-number">10</span> 至 <span class="hljs-number">12</span>      <span class="hljs-number">264605</span>      <span class="hljs-number">307005</span>      <span class="hljs-number">355342</span></code></pre><br><pre><code class="hljs matlab">------------------------------------x1的紧邻矩阵----------------------------------B =   <span class="hljs-number">1.0e+05</span> *   <span class="hljs-number">-0.2931</span>    <span class="hljs-number">0.0000</span>   <span class="hljs-number">-0.4892</span>    <span class="hljs-number">0.0000</span>   <span class="hljs-number">-0.6858</span>    <span class="hljs-number">0.0000</span>   <span class="hljs-number">-0.8673</span>    <span class="hljs-number">0.0000</span>   <span class="hljs-number">-1.0789</span>    <span class="hljs-number">0.0000</span>   <span class="hljs-number">-1.3594</span>    <span class="hljs-number">0.0000</span>   <span class="hljs-number">-1.6837</span>    <span class="hljs-number">0.0000</span>   <span class="hljs-number">-2.0485</span>    <span class="hljs-number">0.0000</span>   <span class="hljs-number">-2.4435</span>    <span class="hljs-number">0.0000</span>   <span class="hljs-number">-2.8580</span>    <span class="hljs-number">0.0000</span>   <span class="hljs-number">-3.3117</span>    <span class="hljs-number">0.0000</span>Y =  列 <span class="hljs-number">1</span> 至 <span class="hljs-number">9</span>       <span class="hljs-number">19578</span>       <span class="hljs-number">19637</span>       <span class="hljs-number">19695</span>       <span class="hljs-number">16602</span>       <span class="hljs-number">25723</span>       <span class="hljs-number">30379</span>       <span class="hljs-number">34473</span>       <span class="hljs-number">38485</span>       <span class="hljs-number">40514</span>  列 <span class="hljs-number">10</span> 至 <span class="hljs-number">11</span>       <span class="hljs-number">42400</span>       <span class="hljs-number">48337</span></code></pre><br><pre><code class="hljs matlab">----------------------------------最小二乘法的参数--------------------------a =   <span class="hljs-number">-0.1062</span>b =   <span class="hljs-number">1.4000e+04</span>&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=<span class="hljs-string">&quot;language-matlab line-numbers&quot;</span>&gt;-------------------------------------预测序列----------------------------------x =   <span class="hljs-number">1.0e+04</span> *  列 <span class="hljs-number">1</span> 至 <span class="hljs-number">11</span>         <span class="hljs-number">0</span>    <span class="hljs-number">1.6958</span>    <span class="hljs-number">1.8858</span>    <span class="hljs-number">2.0971</span>    <span class="hljs-number">2.3321</span>    <span class="hljs-number">2.5934</span>    <span class="hljs-number">2.8840</span>    <span class="hljs-number">3.2072</span>    <span class="hljs-number">3.5666</span>    <span class="hljs-number">3.9662</span>    <span class="hljs-number">4.4107</span>  列 <span class="hljs-number">12</span> 至 <span class="hljs-number">13</span>    <span class="hljs-number">4.9049</span>    <span class="hljs-number">5.4546</span></code></pre><br><pre><code class="hljs matlab">--------------------------------------残差值-------------------------------------error1 =   <span class="hljs-number">1.0e+04</span> *  列 <span class="hljs-number">1</span> 至 <span class="hljs-number">11</span>    <span class="hljs-number">1.9519</span>    <span class="hljs-number">0.2620</span>    <span class="hljs-number">0.0779</span>    <span class="hljs-number">0.1276</span>    <span class="hljs-number">0.6719</span>    <span class="hljs-number">0.0211</span>    <span class="hljs-number">0.1539</span>    <span class="hljs-number">0.2401</span>    <span class="hljs-number">0.2819</span>    <span class="hljs-number">0.0852</span>    <span class="hljs-number">0.1707</span>  列 <span class="hljs-number">12</span>    <span class="hljs-number">0.0712</span>-----------------------------------残差值相对误差--------------------------------error2 =  列 <span class="hljs-number">1</span> 至 <span class="hljs-number">11</span>    <span class="hljs-number">1.0000</span>    <span class="hljs-number">0.1338</span>    <span class="hljs-number">0.0397</span>    <span class="hljs-number">0.0648</span>    <span class="hljs-number">0.4047</span>    <span class="hljs-number">0.0082</span>    <span class="hljs-number">0.0506</span>    <span class="hljs-number">0.0696</span>    <span class="hljs-number">0.0733</span>    <span class="hljs-number">0.0210</span>    <span class="hljs-number">0.0403</span>  列 <span class="hljs-number">12</span>    <span class="hljs-number">0.0147</span>-----------------------------------后验差检验数--------------------------------c =    <span class="hljs-number">0.4879</span></code></pre></p><h3 id="列数据"><a href="#列数据" class="headerlink" title="列数据"></a>列数据</h3><pre><code class="hljs matlab">fprintf(<span class="hljs-string">&#x27;%s\n&#x27;</span>,<span class="hljs-string">&#x27;-----------------1991-2001年GM(1,1)灰色系统预测值与实际值比较---------------&#x27;</span>)fprintf(<span class="hljs-string">&#x27;   %s              %s            %s            %s           %s\n&#x27;</span>,<span class="hljs-string">&#x27;年份&#x27;</span>,<span class="hljs-string">&#x27;预测值&#x27;</span>,<span class="hljs-string">&#x27;实际值&#x27;</span>,<span class="hljs-string">&#x27;残差&#x27;</span>,<span class="hljs-string">&#x27;相对误差&#x27;</span>);<span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">2</span>:<span class="hljs-number">12</span>fmt=<span class="hljs-string">&#x27;  %d  %20.4f  %15.4f  %15.4f  %13.4f\n&#x27;</span>;fprintf(fmt,t(<span class="hljs-built_in">i</span>),X1(<span class="hljs-built_in">i</span>),y(<span class="hljs-built_in">i</span>),e1(<span class="hljs-built_in">i</span>),e2(<span class="hljs-built_in">i</span>));<span class="hljs-keyword">end</span></code></pre><pre><code class="hljs matlab">---------------<span class="hljs-number">-1991</span><span class="hljs-number">-2001</span>年GM(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)灰色系统预测值与实际值比较---------------   年份              预测值            实际值            残差           相对误差  <span class="hljs-number">1991</span>            <span class="hljs-number">16957.6939</span>       <span class="hljs-number">19578.0000</span>        <span class="hljs-number">2620.3061</span>         <span class="hljs-number">0.1338</span>  <span class="hljs-number">1992</span>            <span class="hljs-number">18857.9037</span>       <span class="hljs-number">19637.0000</span>         <span class="hljs-number">779.0963</span>         <span class="hljs-number">0.0397</span>  <span class="hljs-number">1993</span>            <span class="hljs-number">20971.0433</span>       <span class="hljs-number">19695.0000</span>        <span class="hljs-number">1276.0433</span>         <span class="hljs-number">0.0648</span>  <span class="hljs-number">1994</span>            <span class="hljs-number">23320.9727</span>       <span class="hljs-number">16602.0000</span>        <span class="hljs-number">6718.9727</span>         <span class="hljs-number">0.4047</span>  <span class="hljs-number">1995</span>            <span class="hljs-number">25934.2255</span>       <span class="hljs-number">25723.0000</span>         <span class="hljs-number">211.2255</span>         <span class="hljs-number">0.0082</span>  <span class="hljs-number">1996</span>            <span class="hljs-number">28840.3088</span>       <span class="hljs-number">30379.0000</span>        <span class="hljs-number">1538.6912</span>         <span class="hljs-number">0.0506</span>  <span class="hljs-number">1997</span>            <span class="hljs-number">32072.0359</span>       <span class="hljs-number">34473.0000</span>        <span class="hljs-number">2400.9641</span>         <span class="hljs-number">0.0696</span>  <span class="hljs-number">1998</span>            <span class="hljs-number">35665.8972</span>       <span class="hljs-number">38485.0000</span>        <span class="hljs-number">2819.1028</span>         <span class="hljs-number">0.0733</span>  <span class="hljs-number">1999</span>            <span class="hljs-number">39662.4718</span>       <span class="hljs-number">40514.0000</span>         <span class="hljs-number">851.5282</span>         <span class="hljs-number">0.0210</span>  <span class="hljs-number">2000</span>            <span class="hljs-number">44106.8863</span>       <span class="hljs-number">42400.0000</span>        <span class="hljs-number">1706.8863</span>         <span class="hljs-number">0.0403</span>  <span class="hljs-number">2001</span>            <span class="hljs-number">49049.3236</span>       <span class="hljs-number">48337.0000</span>         <span class="hljs-number">712.3236</span>         <span class="hljs-number">0.0147</span></code></pre><h3 id="绘制图像"><a href="#绘制图像" class="headerlink" title="绘制图像"></a>绘制图像</h3><pre><code class="hljs matlab">t=[<span class="hljs-number">1990</span> <span class="hljs-number">1991</span> <span class="hljs-number">1992</span> <span class="hljs-number">1993</span> <span class="hljs-number">1994</span> <span class="hljs-number">1995</span> <span class="hljs-number">1996</span> <span class="hljs-number">1997</span> <span class="hljs-number">1998</span> <span class="hljs-number">1999</span> <span class="hljs-number">2000</span> <span class="hljs-number">2001</span> <span class="hljs-number">2002</span>]<span class="hljs-built_in">plot</span>(t(<span class="hljs-number">1</span>:<span class="hljs-number">12</span>),y,<span class="hljs-string">&#x27;k&#x27;</span>,<span class="hljs-string">&#x27;Markersize&#x27;</span>,<span class="hljs-number">10</span>)<span class="hljs-built_in">hold</span> on<span class="hljs-built_in">plot</span>(t,X1)<span class="hljs-built_in">legend</span>(<span class="hljs-string">&#x27;原数据函数图像&#x27;</span>,<span class="hljs-string">&#x27;预测函数图像&#x27;</span>)xlabel(<span class="hljs-string">&#x27;年份&#x27;</span>)ylabel(<span class="hljs-string">&#x27;蔬菜产量&#x27;</span>)title(<span class="hljs-string">&#x27;1990-2001年蔬菜产量&#x27;</span>)</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129211024.png" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>灰色系统预测</tag>
      
      <tag>GM11</tag>
      
      <tag>后检验</tag>
      
      <tag>后验差检验数</tag>
      
      <tag>相对误差</tag>
      
      <tag>残差</tag>
      
      <tag>最小二乘法</tag>
      
      <tag>预测序列</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200729】</title>
    <link href="/2020/07/29/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200729%E3%80%91/"/>
    <url>/2020/07/29/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200729%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="时间序列分析"><a href="#时间序列分析" class="headerlink" title="时间序列分析"></a>时间序列分析</h1><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129205734.png" alt=""></p><h3 id="1-画出x的图像以及其自相关图像"><a href="#1-画出x的图像以及其自相关图像" class="headerlink" title="1.画出x的图像以及其自相关图像"></a>1.画出x的图像以及其自相关图像</h3><pre><code class="hljs matlab">x=[<span class="hljs-number">10</span> <span class="hljs-number">15</span> <span class="hljs-number">10</span> <span class="hljs-number">10</span> <span class="hljs-number">12</span> <span class="hljs-number">10</span> <span class="hljs-number">7</span> <span class="hljs-number">7</span> <span class="hljs-number">10</span> <span class="hljs-number">14</span> <span class="hljs-number">8</span> <span class="hljs-number">17</span> <span class="hljs-number">14</span> <span class="hljs-number">18</span> <span class="hljs-number">3</span> <span class="hljs-number">9</span> <span class="hljs-number">11</span> <span class="hljs-number">10</span> <span class="hljs-number">6</span> <span class="hljs-number">12</span> <span class="hljs-number">14</span> <span class="hljs-number">10</span> <span class="hljs-number">25</span> <span class="hljs-number">29</span> <span class="hljs-number">33</span> <span class="hljs-number">33</span> <span class="hljs-number">12</span> <span class="hljs-number">19</span> <span class="hljs-number">16</span> <span class="hljs-number">19</span> <span class="hljs-number">19</span> <span class="hljs-number">12</span> <span class="hljs-number">34</span> <span class="hljs-number">15</span> <span class="hljs-number">36</span> <span class="hljs-number">29</span> <span class="hljs-number">26</span> <span class="hljs-number">21</span> <span class="hljs-number">17</span> <span class="hljs-number">19</span> <span class="hljs-number">13</span> <span class="hljs-number">20</span> <span class="hljs-number">24</span> <span class="hljs-number">12</span> <span class="hljs-number">6</span> <span class="hljs-number">14</span> <span class="hljs-number">6</span> <span class="hljs-number">12</span> <span class="hljs-number">9</span> <span class="hljs-number">11</span> <span class="hljs-number">17</span> <span class="hljs-number">12</span> <span class="hljs-number">8</span> <span class="hljs-number">14</span> <span class="hljs-number">14</span> <span class="hljs-number">12</span> <span class="hljs-number">5</span> <span class="hljs-number">8</span> <span class="hljs-number">10</span> <span class="hljs-number">3</span> <span class="hljs-number">16</span> <span class="hljs-number">8</span> <span class="hljs-number">8</span> <span class="hljs-number">7</span> <span class="hljs-number">12</span> <span class="hljs-number">6</span> <span class="hljs-number">10</span> <span class="hljs-number">8</span> <span class="hljs-number">10</span> <span class="hljs-number">5</span> ]subplot(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>)<span class="hljs-built_in">plot</span>(x)subplot(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)autocorr(x)</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129205821.png" alt=""></p><h3 id="2-判断序列的平稳性以及纯随机性"><a href="#2-判断序列的平稳性以及纯随机性" class="headerlink" title="2.判断序列的平稳性以及纯随机性"></a>2.判断序列的平稳性以及纯随机性</h3><pre><code class="hljs matlab">x=[<span class="hljs-number">10</span> <span class="hljs-number">15</span> <span class="hljs-number">10</span> <span class="hljs-number">10</span> <span class="hljs-number">12</span> <span class="hljs-number">10</span> <span class="hljs-number">7</span> <span class="hljs-number">7</span> <span class="hljs-number">10</span> <span class="hljs-number">14</span> <span class="hljs-number">8</span> <span class="hljs-number">17</span> <span class="hljs-number">14</span> <span class="hljs-number">18</span> <span class="hljs-number">3</span> <span class="hljs-number">9</span> <span class="hljs-number">11</span> <span class="hljs-number">10</span> <span class="hljs-number">6</span> <span class="hljs-number">12</span> <span class="hljs-number">14</span> <span class="hljs-number">10</span> <span class="hljs-number">25</span> <span class="hljs-number">29</span> <span class="hljs-number">33</span> <span class="hljs-number">33</span> <span class="hljs-number">12</span> <span class="hljs-number">19</span> <span class="hljs-number">16</span> <span class="hljs-number">19</span> <span class="hljs-number">19</span> <span class="hljs-number">12</span> <span class="hljs-number">34</span> <span class="hljs-number">15</span> <span class="hljs-number">36</span> <span class="hljs-number">29</span> <span class="hljs-number">26</span> <span class="hljs-number">21</span> <span class="hljs-number">17</span> <span class="hljs-number">19</span> <span class="hljs-number">13</span> <span class="hljs-number">20</span> <span class="hljs-number">24</span> <span class="hljs-number">12</span> <span class="hljs-number">6</span> <span class="hljs-number">14</span> <span class="hljs-number">6</span> <span class="hljs-number">12</span> <span class="hljs-number">9</span> <span class="hljs-number">11</span> <span class="hljs-number">17</span> <span class="hljs-number">12</span> <span class="hljs-number">8</span> <span class="hljs-number">14</span> <span class="hljs-number">14</span> <span class="hljs-number">12</span> <span class="hljs-number">5</span> <span class="hljs-number">8</span> <span class="hljs-number">10</span> <span class="hljs-number">3</span> <span class="hljs-number">16</span> <span class="hljs-number">8</span> <span class="hljs-number">8</span> <span class="hljs-number">7</span> <span class="hljs-number">12</span> <span class="hljs-number">6</span> <span class="hljs-number">10</span> <span class="hljs-number">8</span> <span class="hljs-number">10</span> <span class="hljs-number">5</span> ][h,p,s,cv]=adftest(x)[h,p,s,cv]=lbqtest(x,<span class="hljs-string">&#x27;lags&#x27;</span>,[<span class="hljs-number">6</span>,<span class="hljs-number">12</span>,<span class="hljs-number">18</span>])</code></pre><pre><code class="hljs matlab">结果是：h =  logical   <span class="hljs-number">1</span>p =    <span class="hljs-number">0.0418</span>s =   <span class="hljs-number">-2.0251</span>cv =   <span class="hljs-number">-1.9451</span>h =  <span class="hljs-number">1</span>×<span class="hljs-number">3</span> logical 数组   <span class="hljs-number">0</span>   <span class="hljs-number">0</span>   <span class="hljs-number">0</span>p =    <span class="hljs-number">0.4201</span>    <span class="hljs-number">0.4499</span>    <span class="hljs-number">0.5022</span>s =   <span class="hljs-number">-0.6227</span>   <span class="hljs-number">-0.5401</span>   <span class="hljs-number">-0.3961</span>cv =   <span class="hljs-number">-1.9456</span>   <span class="hljs-number">-1.9460</span>   <span class="hljs-number">-1.9465</span></code></pre><h3 id="3-结论"><a href="#3-结论" class="headerlink" title="3.结论"></a>3.结论</h3><h4 id="a-平稳性检验"><a href="#a-平稳性检验" class="headerlink" title="a.平稳性检验"></a>a.平稳性检验</h4><p>以上时序图给我们的信息非常明确，芝加哥海德公园内每28天发生的抢包案件数序列在1971年至1972年之间波动较大，自相关图显示自相关系数长期位于零轴的一边，这是具有单调趋势序列的典型特征，还有明显的递增趋势，所以它一定不是平稳序列。<br>由adf检验也可以得知此序列不是平稳序列。</p><h4 id="b-纯随机性检验（白噪声检验）"><a href="#b-纯随机性检验（白噪声检验）" class="headerlink" title="b.纯随机性检验（白噪声检验）"></a>b.纯随机性检验（白噪声检验）</h4><p>原假设:延迟期数小于或等于m期的序列值之间相互独立。<br>备择假设:延迟期数小于或等于m期的序列值之间有相关性。<br>纯随机性检验结果显示，在前6期、前12期和前18延迟下LBQ检验统计量的Р值都非常小(&lt;0.05)，所以我们可以判断该序列属于非白噪声序列。</p><h3 id="4-一阶差分后的时序图以及自相关图"><a href="#4-一阶差分后的时序图以及自相关图" class="headerlink" title="4.一阶差分后的时序图以及自相关图"></a>4.一阶差分后的时序图以及自相关图</h3><pre><code class="hljs matlab">x1=diff(x)subplot(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>)<span class="hljs-built_in">plot</span>(x1)subplot(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)autocorr(x1)</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129210029.png" alt=""></p><h3 id="5-判断一阶差分后序列的平稳性以及纯随机性"><a href="#5-判断一阶差分后序列的平稳性以及纯随机性" class="headerlink" title="5.判断一阶差分后序列的平稳性以及纯随机性"></a>5.判断一阶差分后序列的平稳性以及纯随机性</h3><pre><code class="hljs matlab">[h,p,s,cv]=adftest(x1)[h,p,s,cv]=lbqtest(x1,<span class="hljs-string">&#x27;lags&#x27;</span>,[<span class="hljs-number">6</span>,<span class="hljs-number">12</span>,<span class="hljs-number">18</span>])</code></pre><pre><code class="hljs matlab">结果是：h =  logical   <span class="hljs-number">1</span>p =   <span class="hljs-number">1.0000e-03</span>s =  <span class="hljs-number">-14.8262</span>cv =   <span class="hljs-number">-1.9452</span>h =  <span class="hljs-number">1</span>×<span class="hljs-number">3</span> logical 数组   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>   <span class="hljs-number">1</span>p =    <span class="hljs-number">0.0000</span>    <span class="hljs-number">0.0003</span>    <span class="hljs-number">0.0032</span>s =   <span class="hljs-number">29.4582</span>   <span class="hljs-number">35.9434</span>   <span class="hljs-number">38.6135</span>cv =   <span class="hljs-number">12.5916</span>   <span class="hljs-number">21.0261</span>   <span class="hljs-number">28.8693</span></code></pre><h3 id="6-结论"><a href="#6-结论" class="headerlink" title="6.结论"></a>6.结论</h3><h4 id="c-平稳性检验"><a href="#c-平稳性检验" class="headerlink" title="c.平稳性检验"></a>c.平稳性检验</h4><p>以上时序图显示芝加哥海德公园内每28天发生的抢包案件数序<br>列始终围绕在10件附近随机波动，没有明显的趋势或周期，基本可<br>以视为平稳序列，自相关图显示该序列的自相关系数一直都比较小，<br>始终控制在2倍的标准差范围以内，故认为该序列是平稳序列。<br>由adf检验也可以得知此序列是平稳序列。</p><h4 id="d-纯随机性检验（白噪声检验）"><a href="#d-纯随机性检验（白噪声检验）" class="headerlink" title="d.纯随机性检验（白噪声检验）"></a>d.纯随机性检验（白噪声检验）</h4><p>纯随机性检验结果显示，在前6期、前12期和前18期延迟下LBQ检验统计量的Р值都非常小(&lt;0.05)，所以我们可以判断该序列属于非白噪声序列。</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129210150.png" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://wenku.baidu.com/view/f33964235fbfc77da369b1b9.html">检验时间序列的平稳性及纯随机性(白噪声序列检验)</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>时间序列分析</tag>
      
      <tag>平稳性检验</tag>
      
      <tag>白噪声检验</tag>
      
      <tag>adftest</tag>
      
      <tag>lbqtest</tag>
      
      <tag>自相关</tag>
      
      <tag>随机性检验</tag>
      
      <tag>一阶差分</tag>
      
      <tag>autocoor</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200727】</title>
    <link href="/2020/07/27/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200727%E3%80%91/"/>
    <url>/2020/07/27/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200727%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="非线性规划"><a href="#非线性规划" class="headerlink" title="非线性规划"></a>非线性规划</h1><p><a href="https://blog.csdn.net/jiejiexiao/article/details/79247115?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~first_rank_v2~rank_v25-4-79247115.nonecase">题目来源：csdn jiejiexiao</a></p><h2 id="matlab随机取样计算法解决非线性整数规划"><a href="#matlab随机取样计算法解决非线性整数规划" class="headerlink" title="matlab随机取样计算法解决非线性整数规划"></a>matlab随机取样计算法解决非线性整数规划</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129203834.jpg" alt=""></p><pre><code class="hljs matlab">matlab代码：(<span class="hljs-number">1</span>)编辑mengte.m文件<span class="hljs-comment">%目标函数f,约束条件g</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">[f,g]</span> = <span class="hljs-title">mengte</span><span class="hljs-params">(x)</span></span>f = x(<span class="hljs-number">1</span>)^<span class="hljs-number">2</span> + x(<span class="hljs-number">2</span>)^<span class="hljs-number">2</span> + <span class="hljs-number">3</span>*x(<span class="hljs-number">3</span>)^<span class="hljs-number">2</span> + <span class="hljs-number">4</span>*x(<span class="hljs-number">4</span>)^<span class="hljs-number">2</span> + <span class="hljs-number">2</span>*x(<span class="hljs-number">5</span>)^<span class="hljs-number">2</span> - <span class="hljs-number">8</span>*x(<span class="hljs-number">1</span>) - <span class="hljs-number">2</span>*x(<span class="hljs-number">2</span>) - <span class="hljs-number">3</span>*x(<span class="hljs-number">3</span>) - x(<span class="hljs-number">4</span>) - <span class="hljs-number">2</span>*x(<span class="hljs-number">5</span>);g(<span class="hljs-number">1</span>) = sum(x) - <span class="hljs-number">400</span>;g(<span class="hljs-number">2</span>) = x(<span class="hljs-number">1</span>) + <span class="hljs-number">2</span>*x(<span class="hljs-number">2</span>) + <span class="hljs-number">2</span>*x(<span class="hljs-number">3</span>) + x(<span class="hljs-number">4</span>) + <span class="hljs-number">6</span>*x(<span class="hljs-number">5</span>) - <span class="hljs-number">800</span>;g(<span class="hljs-number">3</span>) = <span class="hljs-number">2</span>*x(<span class="hljs-number">1</span>) + x(<span class="hljs-number">2</span>) + <span class="hljs-number">6</span>*x(<span class="hljs-number">3</span>) - <span class="hljs-number">200</span>;g(<span class="hljs-number">4</span>) = x(<span class="hljs-number">3</span>) + x(<span class="hljs-number">4</span>) + <span class="hljs-number">5</span>*x(<span class="hljs-number">5</span>) - <span class="hljs-number">200</span>;<span class="hljs-keyword">end</span>(<span class="hljs-number">2</span>)matlab执行代码<span class="hljs-comment">%非线性整数规划----枚举法--随机取样计算法--有误差</span><span class="hljs-comment">%tic和toc用来记录matlab命令执行的时间。</span><span class="hljs-comment">%整数问题最好用Lingo-----可每次将 p0 改为最大值</span>ticp0 = <span class="hljs-number">0</span>;<span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">1</span> : <span class="hljs-number">10</span>^<span class="hljs-number">5</span>    x = <span class="hljs-number">99</span> * <span class="hljs-built_in">rand</span>(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>);                 <span class="hljs-comment">%0 &lt;= x &lt;=99</span>    x1 = <span class="hljs-built_in">floor</span>(x);  x2 = <span class="hljs-built_in">ceil</span>(x);       <span class="hljs-comment">%取整</span>    [f,g] = mengte(x1);    <span class="hljs-keyword">if</span> sum(g &lt;= <span class="hljs-number">0</span>) == <span class="hljs-number">4</span>        <span class="hljs-keyword">if</span> f &gt;= p0            x0 = x1;            p0 = f;        <span class="hljs-keyword">end</span>    <span class="hljs-keyword">end</span>    [f,g] = mengte(x2);    <span class="hljs-keyword">if</span> sum(g &lt;= <span class="hljs-number">0</span>) == <span class="hljs-number">4</span>        <span class="hljs-keyword">if</span> f &gt;= p0;            x0 = x2;            p0 = f;        <span class="hljs-keyword">end</span>    <span class="hljs-keyword">end</span><span class="hljs-keyword">end</span>x0,p0toc</code></pre><p>答案是：<br><pre><code class="hljs matlab">x0 =    <span class="hljs-number">27</span>    <span class="hljs-number">98</span>     <span class="hljs-number">5</span>    <span class="hljs-number">99</span>     <span class="hljs-number">1</span>p0 =       <span class="hljs-number">49086</span>历时 <span class="hljs-number">0.770322</span> 秒。</code></pre></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>线性规划</tag>
      
      <tag>intlinprog</tag>
      
      <tag>0-1规划</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200726】</title>
    <link href="/2020/07/26/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200726%E3%80%91/"/>
    <url>/2020/07/26/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200726%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="线性规划"><a href="#线性规划" class="headerlink" title="线性规划"></a>线性规划</h1><h2 id="用0-1整数规划匈牙利算法求解指派问题"><a href="#用0-1整数规划匈牙利算法求解指派问题" class="headerlink" title="用0-1整数规划匈牙利算法求解指派问题"></a>用0-1整数规划匈牙利算法求解指派问题</h2><p><a href="https://blog.csdn.net/ouzuosong/article/details/52236152">题目来源：csdn lilard_ou</a></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129203413.png" alt=""></p><h3 id="根据题意，写出方程组以及约束条件"><a href="#根据题意，写出方程组以及约束条件" class="headerlink" title="根据题意，写出方程组以及约束条件"></a>根据题意，写出方程组以及约束条件</h3><p>$min \ z=25x<em>1+29x_2+31x_3+42x_4$<br>$+39x_5+38x_6+26x_7+20x_8$<br>$+34x_9+27x</em>{10}+28x<em>{11}+40x</em>{12}$<br>$+24x<em>{13}+42x</em>{14}+36x<em>{15}+23x</em>{16}$<br>$s.t. $</p><script type="math/tex; mode=display">x_1+x_2+x_3+x_4=1</script><script type="math/tex; mode=display">x_5+x_6+x_7+x_8=1</script><script type="math/tex; mode=display">x_9+x_{10}+x_{11}+x_{12}=1</script><script type="math/tex; mode=display">x_{13}+x_{14}+x_{15}+x_{16}=1</script><script type="math/tex; mode=display">x_1+x_5+x_9+x_{13}=1</script><script type="math/tex; mode=display">x_2+x_6+x_{10}+x_{14}=1</script><script type="math/tex; mode=display">x_3+x_7+x_{11}+x_{15}=1</script><script type="math/tex; mode=display">x_4+x_8+x_{12}+x_{16}=1</script><pre><code class="hljs matlab">matlab求解：c=[<span class="hljs-number">25</span> <span class="hljs-number">29</span> <span class="hljs-number">31</span> <span class="hljs-number">42</span><span class="hljs-number">39</span> <span class="hljs-number">38</span> <span class="hljs-number">26</span> <span class="hljs-number">20</span><span class="hljs-number">34</span> <span class="hljs-number">27</span> <span class="hljs-number">28</span> <span class="hljs-number">40</span><span class="hljs-number">24</span> <span class="hljs-number">42</span> <span class="hljs-number">36</span> <span class="hljs-number">23</span>];intcon=[<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> <span class="hljs-number">5</span> <span class="hljs-number">6</span> <span class="hljs-number">7</span> <span class="hljs-number">8</span> <span class="hljs-number">9</span> <span class="hljs-number">10</span> <span class="hljs-number">11</span> <span class="hljs-number">12</span> <span class="hljs-number">13</span> <span class="hljs-number">14</span> <span class="hljs-number">15</span> <span class="hljs-number">16</span>]a=[];b=[];aeq=[<span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span>;<span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span>;<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span>]beq=<span class="hljs-built_in">ones</span>(<span class="hljs-number">9</span>,<span class="hljs-number">1</span>);lb=<span class="hljs-built_in">zeros</span>(<span class="hljs-number">16</span>,<span class="hljs-number">1</span>);ub=<span class="hljs-built_in">ones</span>(<span class="hljs-number">16</span>,<span class="hljs-number">1</span>);[x,val]=intlinprog(c,intcon,a,b,aeq,beq,lb,ub)</code></pre><pre><code class="hljs matlab">x =     <span class="hljs-number">1</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">1</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">1</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">1</span>val =   <span class="hljs-number">101</span></code></pre><p>执行结果大概是这样滴！！！</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129203558.png" alt=""></p><p>$val=25+26+27+23=101$</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>线性规划</tag>
      
      <tag>intlinprog</tag>
      
      <tag>0-1规划</tag>
      
      <tag>匈牙利算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200725】</title>
    <link href="/2020/07/25/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200725%E3%80%91/"/>
    <url>/2020/07/25/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200725%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="非线性规划"><a href="#非线性规划" class="headerlink" title="非线性规划"></a>非线性规划</h1><h2 id="求下面这个非线性规划问题的最优值"><a href="#求下面这个非线性规划问题的最优值" class="headerlink" title="求下面这个非线性规划问题的最优值"></a>求下面这个非线性规划问题的最优值</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129203018.png" alt=""></p><pre><code class="hljs matlab">matlab求解：(<span class="hljs-number">1</span>)编写fun.m函数<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>=<span class="hljs-title">fun</span><span class="hljs-params">(x)</span></span>f=x(<span class="hljs-number">1</span>)^<span class="hljs-number">2</span>+x(<span class="hljs-number">2</span>)^<span class="hljs-number">2</span>+<span class="hljs-number">8</span>;<span class="hljs-keyword">end</span>(<span class="hljs-number">2</span>)编写nonlcon.m函数<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">[c,ceq]</span>=<span class="hljs-title">nonlcon</span><span class="hljs-params">(x)</span></span>c=[-x(<span class="hljs-number">1</span>)^<span class="hljs-number">2</span>+x(<span class="hljs-number">2</span>)];ceq=[-x(<span class="hljs-number">1</span>)-x(<span class="hljs-number">2</span>)^<span class="hljs-number">2</span>+<span class="hljs-number">2</span>];<span class="hljs-keyword">end</span>(<span class="hljs-number">3</span>)matlab操作：x0=[<span class="hljs-number">0</span> <span class="hljs-number">0</span>];a=[];b=[];aeq=[];beq=[];lb=<span class="hljs-built_in">zeros</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>);ub=[];[x,val]=fmincon(<span class="hljs-string">&#x27;fun&#x27;</span>,x0,a,b,aeq,beq,lb,ub,<span class="hljs-string">&#x27;nonlcon&#x27;</span>)</code></pre><pre><code class="hljs matlab">x =    <span class="hljs-number">1.0000</span>    <span class="hljs-number">1.0000</span>val =   <span class="hljs-number">10.0000</span></code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>非线性规划</tag>
      
      <tag>fmincon</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200723】</title>
    <link href="/2020/07/24/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200724%E3%80%91/"/>
    <url>/2020/07/24/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200724%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="0-1-规划问题"><a href="#0-1-规划问题" class="headerlink" title="0-1 规划问题"></a>0-1 规划问题</h1><h2 id="用matlab求解下列-0-1-规划问题"><a href="#用matlab求解下列-0-1-规划问题" class="headerlink" title="用matlab求解下列 0-1 规划问题"></a>用matlab求解下列 0-1 规划问题</h2><script type="math/tex; mode=display">max \ z=6x_1+2x_2+3x_3+5x_4</script><p><strong>s.t.</strong></p><script type="math/tex; mode=display">3x_1-5x_2+x_3+6x_4\geq4</script><script type="math/tex; mode=display">2x_1+x_2+x_3-x_4\leq3</script><script type="math/tex; mode=display">x_1+2x_2+4x_3+5x_4\leq10</script><script type="math/tex; mode=display">x_i=0或1,i=1,2，3，4</script><pre><code class="hljs matlab">matlab代码：c=[<span class="hljs-number">6</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">5</span>]intcon=[<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span>]a=[<span class="hljs-number">-3</span> <span class="hljs-number">5</span> <span class="hljs-number">-1</span> <span class="hljs-number">-6</span>;<span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">-1</span>;<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">4</span> <span class="hljs-number">5</span>]b=[<span class="hljs-number">-4</span>;<span class="hljs-number">3</span>;<span class="hljs-number">10</span>]aeq=[]beq=[]lb=<span class="hljs-built_in">zeros</span>(<span class="hljs-number">4</span>,<span class="hljs-number">1</span>)ub=<span class="hljs-built_in">ones</span>(<span class="hljs-number">4</span>,<span class="hljs-number">1</span>)[x,val]=intlinprog(-c,intcon,a,b,aeq,beq,lb,ub)x,val=-val&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=<span class="hljs-string">&quot;language-matlab line-numbers&quot;</span>&gt;matlab运行结果：x =     <span class="hljs-number">1</span>     <span class="hljs-number">0</span>     <span class="hljs-number">1</span>     <span class="hljs-number">1</span>val =    <span class="hljs-number">14</span></code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>线性规划</tag>
      
      <tag>intlinprog</tag>
      
      <tag>0-1规划</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200728】</title>
    <link href="/2020/07/24/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200728%E3%80%91/"/>
    <url>/2020/07/24/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200728%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="时间序列分析的数据预处理"><a href="#时间序列分析的数据预处理" class="headerlink" title="时间序列分析的数据预处理"></a>时间序列分析的数据预处理</h1><p>做时间序列分析，之前需要做两个准备工作，即检查序列是否是平稳的，如果是平稳的，还要检查是否是白噪声。如果一个序列是平稳的，那么下面我们就要判断数据是否是白噪声，白噪声没有研究的意义。<br><span class="label label-primary"><br>  Ljung-Box test是对randomness的检验,或者说是对时间序列是否存在滞后相关的一种统计检验。说明对于滞后相关的检验，我们常常采用的方法还包括计算ACF和PCAF并观察其图像，但是无论是ACF还是PACF都仅仅考虑是否存在某一特定滞后阶数的相关。LB检验则是基于一系列滞后阶数，判断序列总体的相关性或者说随机性是否存在。<br>  作者：Yining<br>  来源：知乎</span></p><h1 id="例"><a href="#例" class="headerlink" title="例"></a>例</h1><p>检验1964年-1999年中国纱年产量序列的平稳性与纯随机性进行检验。<br><pre><code class="hljs matlab">(<span class="hljs-number">1</span>)画出数据图及自相关函数图像x=[<span class="hljs-number">97</span> <span class="hljs-number">130</span> <span class="hljs-number">156.5</span> <span class="hljs-number">135.2</span> <span class="hljs-number">137.7</span> <span class="hljs-number">180.5</span> <span class="hljs-number">205.2</span> <span class="hljs-number">190</span> <span class="hljs-number">188.6</span> <span class="hljs-number">196.7</span> <span class="hljs-number">180.3</span> <span class="hljs-number">210.8</span> <span class="hljs-number">196</span> <span class="hljs-number">223</span> <span class="hljs-number">238.2</span> <span class="hljs-number">263.5</span> <span class="hljs-number">292.6</span> <span class="hljs-number">317</span> <span class="hljs-number">335.4</span> <span class="hljs-number">327</span> <span class="hljs-number">321.9</span> <span class="hljs-number">353.5</span> <span class="hljs-number">397.8</span> <span class="hljs-number">436.8</span> <span class="hljs-number">465.7</span> <span class="hljs-number">476.7</span> <span class="hljs-number">462.6</span> <span class="hljs-number">640.8</span> <span class="hljs-number">501.8</span> <span class="hljs-number">501.5</span> <span class="hljs-number">489.5</span> <span class="hljs-number">542.3</span> <span class="hljs-number">512.2</span> <span class="hljs-number">559.8</span> <span class="hljs-number">542</span> <span class="hljs-number">567</span>]<span class="hljs-built_in">figure</span>subplot(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>)<span class="hljs-built_in">plot</span>(x)title(<span class="hljs-string">&#x27;原始数据时序图&#x27;</span>)subplot(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)autocorr(x)title(<span class="hljs-string">&#x27;自相关函数图像&#x27;</span>)</code></pre></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129204326.png" alt=""></p><pre><code class="hljs matlab">(<span class="hljs-number">2</span>)稳定性检验[h,pval,s,cv]=adftest(x)</code></pre><pre><code class="hljs matlab">结果如下：h =  logical   <span class="hljs-number">0</span>pval =    <span class="hljs-number">0.9411</span>s =    <span class="hljs-number">1.2310</span>cv =   <span class="hljs-number">-1.9488</span></code></pre><pre><code class="hljs matlab">(<span class="hljs-number">3</span>)进行一次降阶并进行平稳性检验x=x&#x27;x1=diff(x)[h,pval,s,cv]=adftest(x1)</code></pre><pre><code class="hljs matlab">结果如下：h =  logical   <span class="hljs-number">1</span>pval =   <span class="hljs-number">1.0000e-03</span>s =   <span class="hljs-number">-8.3378</span>cv =   <span class="hljs-number">-1.9491</span></code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129204357.png" alt=""></p><pre><code class="hljs matlab">(<span class="hljs-number">4</span>)进行白噪声检验yanchi=[<span class="hljs-number">6</span>,<span class="hljs-number">12</span>,<span class="hljs-number">18</span>][H,pval,s,cv]=lbqtest(xa,<span class="hljs-string">&#x27;lags&#x27;</span>,yanchi)</code></pre><pre><code class="hljs matlab">结果如下：H =  <span class="hljs-number">1</span>×<span class="hljs-number">3</span> logical 数组   <span class="hljs-number">1</span>   <span class="hljs-number">0</span>   <span class="hljs-number">0</span>pval =    <span class="hljs-number">0.0247</span>    <span class="hljs-number">0.1729</span>    <span class="hljs-number">0.3603</span>s =   <span class="hljs-number">14.4765</span>   <span class="hljs-number">16.4168</span>   <span class="hljs-number">19.5239</span>cv =   <span class="hljs-number">12.5916</span>   <span class="hljs-number">21.0261</span>   <span class="hljs-number">28.8693</span></code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>自相关性</tag>
      
      <tag>时间序列分析</tag>
      
      <tag>数据预处理</tag>
      
      <tag>平稳性检验</tag>
      
      <tag>一维降阶</tag>
      
      <tag>白噪声检验</tag>
      
      <tag>autocorr</tag>
      
      <tag>adftest</tag>
      
      <tag>lbqtest</tag>
      
      <tag>diff</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200725】</title>
    <link href="/2020/07/24/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200801%E3%80%91/"/>
    <url>/2020/07/24/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200801%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="时间序列的ARIMA预测分析"><a href="#时间序列的ARIMA预测分析" class="headerlink" title="时间序列的ARIMA预测分析"></a>时间序列的ARIMA预测分析</h1><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p>假设我们有这么一段数据（采样自移动公司某段时间的开户客户数目），预测接下来31天的开户客户数。</p><p><p class="note note-primary">  文件地址：  链接: https://pan.baidu.com/s/1RS-x1HTQLUU1IF5g3Yesdw  提取码: xbyt</p><br>在这里，我们把时间序列数据利用Cramer分解定理将其分解为以下四项：<br><pre><code class="hljs matlab">真实数据=趋势项+周期项+信息传递项+白噪声项趋势性：例如随时间变化的一次函数/多次函数/幂函数趋势等周期项：周期规律信息传递项：白噪声项：作为残差</code></pre></p><h2 id="1-观测数据（均值，周期等）"><a href="#1-观测数据（均值，周期等）" class="headerlink" title="1.观测数据（均值，周期等）"></a>1.观测数据（均值，周期等）</h2><ul><li>读取数据</li><li>绘制数据图像</li><li>绘制自相关图像</li></ul><pre><code class="hljs matlab">x0=xlsread(<span class="hljs-string">&#x27;移动通知户开户数.xlsx&#x27;</span>,<span class="hljs-string">&#x27;B2:B732&#x27;</span>);n=<span class="hljs-number">1</span>:<span class="hljs-built_in">length</span>(x0);subplot(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>);<span class="hljs-built_in">plot</span>(n,x0);title(<span class="hljs-string">&#x27;原始数据图像&#x27;</span>);<span class="hljs-built_in">hold</span> on;subplot(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>);autocorr(x0);title(<span class="hljs-string">&#x27;自相关图&#x27;</span>);</code></pre><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129212617.png" alt=""></p><h2 id="2-数据预处理"><a href="#2-数据预处理" class="headerlink" title="2. 数据预处理"></a>2. 数据预处理</h2><ul><li>去周期/趋势</li><li>绘制数据图像</li><li>绘制自相关图像</li></ul><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129212715.png" alt=""></p><p>如图所示我们可以看到周期大约是30或31，由此我们也可以推测该数据是一个来自每天的开户统计数据。<br><pre><code class="hljs matlab">s=<span class="hljs-number">31</span>; <span class="hljs-comment">%周期s=31</span>n=<span class="hljs-number">31</span>; <span class="hljs-comment">%预报数据个数</span>m1=<span class="hljs-built_in">length</span>(x0)<span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=s+<span class="hljs-number">1</span>:m1    y(<span class="hljs-built_in">i</span>-s)=x0(<span class="hljs-built_in">i</span>)-x0(<span class="hljs-built_in">i</span>-s);<span class="hljs-keyword">end</span>x1=diff(y)m2=<span class="hljs-built_in">length</span>(x1)subplot(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>)<span class="hljs-built_in">plot</span>(<span class="hljs-number">1</span>:m2,x1)title(<span class="hljs-string">&#x27;&#x27;</span>)<span class="hljs-built_in">hold</span> onsubplot(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)autocorr(x1)</code></pre><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201129212755.png" alt=""></p><p><span class="label label-primary">adf检验处理后的数据平稳</span></p><pre><code class="hljs matlab">[h1,p1,adf,ljz]=adftest(x1)h1 =  logical   <span class="hljs-number">1</span>p1 =   <span class="hljs-number">1.0000e-03</span>adf =  <span class="hljs-number">-47.5009</span>ljz =   <span class="hljs-number">-1.9413</span></code></pre><p>结果表示一阶31步后的数据是平稳的。</p><h2 id="3-白噪声检验"><a href="#3-白噪声检验" class="headerlink" title="3. 白噪声检验"></a>3. 白噪声检验</h2><pre><code class="hljs matlab">yanchi=[<span class="hljs-number">6</span>,<span class="hljs-number">12</span>,<span class="hljs-number">18</span>];[H,pValue,Qstat,CriticalValue]=lbqtest(x1,<span class="hljs-string">&#x27;lags&#x27;</span>,yanchi);fprintf(<span class="hljs-string">&#x27;%15s%15s%15s&#x27;</span>,<span class="hljs-string">&#x27;延迟阶数&#x27;</span>,<span class="hljs-string">&#x27;卡方统计量&#x27;</span>,<span class="hljs-string">&#x27;p值&#x27;</span>);fprintf(<span class="hljs-string">&#x27;\n&#x27;</span>);<span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:<span class="hljs-built_in">length</span>(yanchi)    fprintf(<span class="hljs-string">&#x27;%18f%19f%19f&#x27;</span>,yanchi(<span class="hljs-built_in">i</span>),Qstat(<span class="hljs-built_in">i</span>),pValue(<span class="hljs-built_in">i</span>));    fprintf(<span class="hljs-string">&#x27;\n&#x27;</span>);<span class="hljs-keyword">end</span>           延迟阶数          卡方统计量             p值          <span class="hljs-number">6.000000</span>         <span class="hljs-number">200.496085</span>           <span class="hljs-number">0.000000</span>         <span class="hljs-number">12.000000</span>         <span class="hljs-number">209.963846</span>           <span class="hljs-number">0.000000</span>         <span class="hljs-number">18.000000</span>         <span class="hljs-number">235.502676</span>           <span class="hljs-number">0.000000</span></code></pre><p>p&lt;0.1说明数据不是白噪声,可以进行aeima模型。</p><h2 id="4-模型检验"><a href="#4-模型检验" class="headerlink" title="4. 模型检验"></a>4. 模型检验</h2><ul><li>aic</li><li>bic</li></ul><pre><code class="hljs matlab">x1=x1&#x27;;LOGL=<span class="hljs-built_in">zeros</span>(<span class="hljs-number">6</span>,<span class="hljs-number">6</span>); <span class="hljs-comment">%Initialize</span>PQ=<span class="hljs-built_in">zeros</span>(<span class="hljs-number">6</span>,<span class="hljs-number">6</span>);<span class="hljs-keyword">for</span> p=<span class="hljs-number">0</span>:<span class="hljs-number">5</span>    <span class="hljs-keyword">for</span> q=<span class="hljs-number">0</span>:<span class="hljs-number">5</span>        model=arima(p,<span class="hljs-number">0</span>,q); <span class="hljs-comment">%指定模型结构</span>        [fit,~,logL]=estimate(model,x1);LOGL(p+<span class="hljs-number">1</span>,q+<span class="hljs-number">1</span>)=logL;        PQ(p+<span class="hljs-number">1</span>,q+<span class="hljs-number">1</span>)=p+q; <span class="hljs-comment">%计算拟合参数的个数</span>    <span class="hljs-keyword">end</span><span class="hljs-keyword">end</span>LOGL=<span class="hljs-built_in">reshape</span>(LOGL,<span class="hljs-number">36</span>,<span class="hljs-number">1</span>);PQ=<span class="hljs-built_in">reshape</span>(PQ,<span class="hljs-number">36</span>,<span class="hljs-number">1</span>);[aic,bic]=aicbic(LOGL,PQ+<span class="hljs-number">1</span>,m2);fprintf(<span class="hljs-string">&#x27;AIC为：\n&#x27;</span>);<span class="hljs-comment">%显示计算结果</span><span class="hljs-built_in">reshape</span>(aic,<span class="hljs-number">6</span>,<span class="hljs-number">6</span>) <span class="hljs-comment">%储存36个模型AIC的值</span>fprintf(<span class="hljs-string">&#x27;BIC为: \n&#x27;</span>);<span class="hljs-built_in">reshape</span>(bic,<span class="hljs-number">6</span>,<span class="hljs-number">6</span>) <span class="hljs-comment">%储存36个模型BIC的值</span></code></pre><pre><code class="hljs matlab">AIC为：<span class="hljs-built_in">ans</span> =   <span class="hljs-number">1.0e+04</span> *    <span class="hljs-number">1.5207</span>    <span class="hljs-number">1.4932</span>    <span class="hljs-number">1.4859</span>    <span class="hljs-number">1.4859</span>    <span class="hljs-number">1.4859</span>    <span class="hljs-number">1.4861</span>    <span class="hljs-number">1.4980</span>    <span class="hljs-number">1.4858</span>    <span class="hljs-number">1.4859</span>    <span class="hljs-number">1.4843</span>    <span class="hljs-number">1.4843</span>    <span class="hljs-number">1.4864</span>    <span class="hljs-number">1.4917</span>    <span class="hljs-number">1.4858</span>    <span class="hljs-number">1.4850</span>    <span class="hljs-number">1.4840</span>    <span class="hljs-number">1.4851</span>    <span class="hljs-number">1.4844</span>    <span class="hljs-number">1.4892</span>    <span class="hljs-number">1.4858</span>    <span class="hljs-number">1.4862</span>    <span class="hljs-number">1.4852</span>    <span class="hljs-number">1.4839</span>    <span class="hljs-number">1.4843</span>    <span class="hljs-number">1.4876</span>    <span class="hljs-number">1.4846</span>    <span class="hljs-number">1.4862</span>    <span class="hljs-number">1.4844</span>    <span class="hljs-number">1.4841</span>    <span class="hljs-number">1.4841</span>    <span class="hljs-number">1.4873</span>    <span class="hljs-number">1.4850</span>    <span class="hljs-number">1.4846</span>    <span class="hljs-number">1.4845</span>    <span class="hljs-number">1.4836</span>    <span class="hljs-number">1.4833</span>BIC为:<span class="hljs-built_in">ans</span> =   <span class="hljs-number">1.0e+04</span> *    <span class="hljs-number">1.5211</span>    <span class="hljs-number">1.4942</span>    <span class="hljs-number">1.4873</span>    <span class="hljs-number">1.4877</span>    <span class="hljs-number">1.4882</span>    <span class="hljs-number">1.4889</span>    <span class="hljs-number">1.4989</span>    <span class="hljs-number">1.4872</span>    <span class="hljs-number">1.4878</span>    <span class="hljs-number">1.4865</span>    <span class="hljs-number">1.4870</span>    <span class="hljs-number">1.4896</span>    <span class="hljs-number">1.4931</span>    <span class="hljs-number">1.4877</span>    <span class="hljs-number">1.4872</span>    <span class="hljs-number">1.4867</span>    <span class="hljs-number">1.4883</span>    <span class="hljs-number">1.4880</span>    <span class="hljs-number">1.4910</span>    <span class="hljs-number">1.4881</span>    <span class="hljs-number">1.4889</span>    <span class="hljs-number">1.4884</span>    <span class="hljs-number">1.4876</span>    <span class="hljs-number">1.4883</span>    <span class="hljs-number">1.4899</span>    <span class="hljs-number">1.4873</span>    <span class="hljs-number">1.4894</span>    <span class="hljs-number">1.4880</span>    <span class="hljs-number">1.4882</span>    <span class="hljs-number">1.4887</span>    <span class="hljs-number">1.4901</span>    <span class="hljs-number">1.4882</span>    <span class="hljs-number">1.4883</span>    <span class="hljs-number">1.4886</span>    <span class="hljs-number">1.4882</span>    <span class="hljs-number">1.4883</span></code></pre><p>寻找使AIC\BIC值最小的p值和q值（p、q值越小越好）<br>如果数值相同可尽量选择阶数较小。<br>p=q=5</p><h2 id="5-模型估计"><a href="#5-模型估计" class="headerlink" title="5. 模型估计"></a>5. 模型估计</h2><pre><code class="hljs matlab">p=input(<span class="hljs-string">&#x27;输入阶数p=&#x27;</span>);q=input(<span class="hljs-string">&#x27;输入阶数q=&#x27;</span>);model=arima(p,<span class="hljs-number">0</span>,q);  <span class="hljs-comment">%指定模型的结构</span>m=estimate(model,x1);  <span class="hljs-comment">%拟合参数</span></code></pre><pre><code class="hljs matlab">ARIMA(<span class="hljs-number">5</span>,<span class="hljs-number">0</span>,<span class="hljs-number">5</span>) Model (Gaussian Distribution):                  Value       StandardError    TStatistic      PValue                __________    _____________    __________    __________    Constant      <span class="hljs-number">-0.13876</span>         <span class="hljs-number">5.2153</span>       <span class="hljs-number">-0.026606</span>       <span class="hljs-number">0.97877</span>    AR&#123;<span class="hljs-number">1</span>&#125;         <span class="hljs-number">-0.62756</span>         <span class="hljs-number">0.2344</span>         <span class="hljs-number">-2.6773</span>     <span class="hljs-number">0.0074222</span>    AR&#123;<span class="hljs-number">2</span>&#125;          <span class="hljs-number">0.63226</span>        <span class="hljs-number">0.23509</span>          <span class="hljs-number">2.6894</span>     <span class="hljs-number">0.0071576</span>    AR&#123;<span class="hljs-number">3</span>&#125;          <span class="hljs-number">0.45155</span>        <span class="hljs-number">0.16781</span>          <span class="hljs-number">2.6909</span>     <span class="hljs-number">0.0071264</span>    AR&#123;<span class="hljs-number">4</span>&#125;         <span class="hljs-number">-0.21596</span>        <span class="hljs-number">0.23391</span>        <span class="hljs-number">-0.92326</span>       <span class="hljs-number">0.35587</span>    AR&#123;<span class="hljs-number">5</span>&#125;          <span class="hljs-number">0.14475</span>       <span class="hljs-number">0.055125</span>          <span class="hljs-number">2.6259</span>     <span class="hljs-number">0.0086427</span>    MA&#123;<span class="hljs-number">1</span>&#125;         <span class="hljs-number">-0.16113</span>         <span class="hljs-number">0.2338</span>        <span class="hljs-number">-0.68919</span>        <span class="hljs-number">0.4907</span>    MA&#123;<span class="hljs-number">2</span>&#125;          <span class="hljs-number">-1.1618</span>       <span class="hljs-number">0.073341</span>         <span class="hljs-number">-15.841</span>    <span class="hljs-number">1.6094e-56</span>    MA&#123;<span class="hljs-number">3</span>&#125;         <span class="hljs-number">0.080585</span>         <span class="hljs-number">0.3241</span>         <span class="hljs-number">0.24864</span>       <span class="hljs-number">0.80364</span>    MA&#123;<span class="hljs-number">4</span>&#125;          <span class="hljs-number">0.64061</span>        <span class="hljs-number">0.12254</span>          <span class="hljs-number">5.2276</span>    <span class="hljs-number">1.7168e-07</span>    MA&#123;<span class="hljs-number">5</span>&#125;         <span class="hljs-number">-0.39824</span>        <span class="hljs-number">0.17684</span>          <span class="hljs-number">-2.252</span>       <span class="hljs-number">0.02432</span>    Variance    <span class="hljs-number">1.0281e+08</span>     <span class="hljs-number">1.3326e-06</span>      <span class="hljs-number">7.7147e+13</span>             <span class="hljs-number">0</span></code></pre><h2 id="6-模型检验"><a href="#6-模型检验" class="headerlink" title="6. 模型检验"></a>6. 模型检验</h2><pre><code class="hljs matlab">z=iddata(x1);ml1=armax(z,[p,q]);e=resid(ml1,z);  <span class="hljs-comment">%拟合做残差分析</span>[H,pValue,Qstat,CriticalValue]=lbqtest(e.OutputData,<span class="hljs-string">&#x27;lags&#x27;</span>,<span class="hljs-number">6</span>)</code></pre><pre><code class="hljs matlab">H =  logical   <span class="hljs-number">0</span>pValue =    <span class="hljs-number">0.9795</span>Qstat =    <span class="hljs-number">1.1455</span>CriticalValue =   <span class="hljs-number">12.5916</span></code></pre><p>说明残差是白噪声序列。</p><h2 id="7-预测"><a href="#7-预测" class="headerlink" title="7. 预测"></a>7. 预测</h2><pre><code class="hljs matlab">[yf,ymse]=forecast(m,n,<span class="hljs-string">&#x27;Y0&#x27;</span>,x1);yhat=y(<span class="hljs-keyword">end</span>)+cumsum(yf);  <span class="hljs-comment">%求y的预报值</span><span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span>=<span class="hljs-number">1</span>:n    x0(m1+<span class="hljs-built_in">j</span>)=yhat(<span class="hljs-built_in">j</span>)+x0(m1+<span class="hljs-built_in">j</span>-s);  <span class="hljs-comment">%求x的预测值</span><span class="hljs-keyword">end</span>xhat=x0(m1+<span class="hljs-number">1</span>:<span class="hljs-keyword">end</span>)</code></pre><pre><code class="hljs matlab">xhat =   <span class="hljs-number">1.0e+04</span> *    <span class="hljs-number">9.4432</span>    <span class="hljs-number">6.1221</span>    <span class="hljs-number">5.4381</span>    <span class="hljs-number">4.6014</span>    <span class="hljs-number">4.6824</span>    <span class="hljs-number">4.3914</span>    <span class="hljs-number">3.7724</span>    <span class="hljs-number">4.0716</span>    <span class="hljs-number">4.1337</span>    <span class="hljs-number">4.0116</span>    <span class="hljs-number">3.8555</span>    <span class="hljs-number">3.7977</span>    <span class="hljs-number">3.8511</span>    <span class="hljs-number">3.2243</span>    <span class="hljs-number">3.4339</span>    <span class="hljs-number">3.4500</span>    <span class="hljs-number">4.0557</span>    <span class="hljs-number">3.9356</span>    <span class="hljs-number">3.6604</span>    <span class="hljs-number">3.6947</span>    <span class="hljs-number">3.2538</span>    <span class="hljs-number">3.4977</span>    <span class="hljs-number">3.6063</span>    <span class="hljs-number">3.8183</span>    <span class="hljs-number">3.5776</span>    <span class="hljs-number">3.9540</span>    <span class="hljs-number">3.9762</span>    <span class="hljs-number">3.5320</span>    <span class="hljs-number">3.8284</span>    <span class="hljs-number">4.2821</span>    <span class="hljs-number">4.3404</span></code></pre><p>这就是接下来31天的预测客户数。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>数据预处理</tag>
      
      <tag>白噪声检验</tag>
      
      <tag>预测</tag>
      
      <tag>时间序列</tag>
      
      <tag>ARIMA</tag>
      
      <tag>读取数据</tag>
      
      <tag>稳定性检验</tag>
      
      <tag>拟合</tag>
      
      <tag>AIC</tag>
      
      <tag>BIC</tag>
      
      <tag>卡方统计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200807】</title>
    <link href="/2020/07/24/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200807%E3%80%91/"/>
    <url>/2020/07/24/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200807%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="综合评价"><a href="#综合评价" class="headerlink" title="综合评价"></a>综合评价</h1><h2 id="均方差、熵权定权法"><a href="#均方差、熵权定权法" class="headerlink" title="均方差、熵权定权法"></a>均方差、熵权定权法</h2><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p>30个市经济各项水平统计如下，请针对各市经济水平做综合评价。<br>指标如下：GDP、居民消费水平、固定资产投资、职工平均工资、货物周转量、居民消费价格指数、商品零售价格指数、工业总产值<br>1.均方差定权法<br><pre><code class="hljs matlab">x=xlsread(<span class="hljs-string">&#x27;zhengfu.xlsx&#x27;</span>);[m,n]=<span class="hljs-built_in">size</span>(x);<span class="hljs-comment">%求得各自均方差</span><span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span>=<span class="hljs-number">1</span>:n    sigma2(<span class="hljs-built_in">j</span>)=<span class="hljs-number">0</span>;    <span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> =<span class="hljs-number">1</span>:m        v(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>)=(x(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>)-<span class="hljs-built_in">min</span>(x(:,<span class="hljs-built_in">j</span>)))/(<span class="hljs-built_in">max</span>(x(:,<span class="hljs-built_in">j</span>))-<span class="hljs-built_in">min</span>(x(:,<span class="hljs-built_in">j</span>)));        sigma2(<span class="hljs-built_in">j</span>)=sigma2(<span class="hljs-built_in">j</span>)+((v(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>)-<span class="hljs-built_in">mean</span>(v(:,<span class="hljs-built_in">j</span>)).^<span class="hljs-number">2</span>));    <span class="hljs-keyword">end</span><span class="hljs-keyword">end</span>sigma=sigma2.^(<span class="hljs-number">1</span>/<span class="hljs-number">2</span>);<span class="hljs-comment">%求得权重</span>alpha=sigma./sum(sigma)<span class="hljs-comment">%进行综合评价</span>zh=v*alpha&#x27;<span class="hljs-comment">%对结果进行排序</span>[a,x] = <span class="hljs-built_in">sort</span>(zh, <span class="hljs-string">&#x27;descend&#x27;</span>)</code></pre><br><pre><code class="hljs matlab">alpha =    <span class="hljs-number">0.1248</span>    <span class="hljs-number">0.1110</span>    <span class="hljs-number">0.0967</span>    <span class="hljs-number">0.1077</span>    <span class="hljs-number">0.0886</span>    <span class="hljs-number">0.1288</span>    <span class="hljs-number">0.1883</span>    <span class="hljs-number">0.1540</span>zh =    <span class="hljs-number">0.4681</span>    <span class="hljs-number">0.3544</span>    <span class="hljs-number">0.6282</span>    <span class="hljs-number">0.4471</span>    <span class="hljs-number">0.4479</span>    <span class="hljs-number">0.5950</span>    <span class="hljs-number">0.4212</span>    <span class="hljs-number">0.5126</span>    <span class="hljs-number">0.6845</span>    <span class="hljs-number">0.3786</span>    <span class="hljs-number">0.2508</span>    <span class="hljs-number">0.1635</span>    <span class="hljs-number">0.2094</span>    <span class="hljs-number">0.2057</span>    <span class="hljs-number">0.3751</span>    <span class="hljs-number">0.2746</span>    <span class="hljs-number">0.3051</span>    <span class="hljs-number">0.2436</span>    <span class="hljs-number">0.2915</span>    <span class="hljs-number">0.2298</span>    <span class="hljs-number">0.0509</span>    <span class="hljs-number">0.3500</span>    <span class="hljs-number">0.2015</span>    <span class="hljs-number">0.2731</span>    <span class="hljs-number">0.1122</span>    <span class="hljs-number">0.2312</span>    <span class="hljs-number">0.1938</span>    <span class="hljs-number">0.1654</span>    <span class="hljs-number">0.1387</span>    <span class="hljs-number">0.2143</span>a =    <span class="hljs-number">0.6845</span>    <span class="hljs-number">0.6282</span>    <span class="hljs-number">0.5950</span>    <span class="hljs-number">0.5126</span>    <span class="hljs-number">0.4681</span>    <span class="hljs-number">0.4479</span>    <span class="hljs-number">0.4471</span>    <span class="hljs-number">0.4212</span>    <span class="hljs-number">0.3786</span>    <span class="hljs-number">0.3751</span>    <span class="hljs-number">0.3544</span>    <span class="hljs-number">0.3500</span>    <span class="hljs-number">0.3051</span>    <span class="hljs-number">0.2915</span>    <span class="hljs-number">0.2746</span>    <span class="hljs-number">0.2731</span>    <span class="hljs-number">0.2508</span>    <span class="hljs-number">0.2436</span>    <span class="hljs-number">0.2312</span>    <span class="hljs-number">0.2298</span>    <span class="hljs-number">0.2143</span>    <span class="hljs-number">0.2094</span>    <span class="hljs-number">0.2057</span>    <span class="hljs-number">0.2015</span>    <span class="hljs-number">0.1938</span>    <span class="hljs-number">0.1654</span>    <span class="hljs-number">0.1635</span>    <span class="hljs-number">0.1387</span>    <span class="hljs-number">0.1122</span>    <span class="hljs-number">0.0509</span>x =     <span class="hljs-number">9</span>     <span class="hljs-number">3</span>     <span class="hljs-number">6</span>     <span class="hljs-number">8</span>     <span class="hljs-number">1</span>     <span class="hljs-number">5</span>     <span class="hljs-number">4</span>     <span class="hljs-number">7</span>    <span class="hljs-number">10</span>    <span class="hljs-number">15</span>     <span class="hljs-number">2</span>    <span class="hljs-number">22</span>    <span class="hljs-number">17</span>    <span class="hljs-number">19</span>    <span class="hljs-number">16</span>    <span class="hljs-number">24</span>    <span class="hljs-number">11</span>    <span class="hljs-number">18</span>    <span class="hljs-number">26</span>    <span class="hljs-number">20</span>    <span class="hljs-number">30</span>    <span class="hljs-number">13</span>    <span class="hljs-number">14</span>    <span class="hljs-number">23</span>    <span class="hljs-number">27</span>    <span class="hljs-number">28</span>    <span class="hljs-number">12</span>    <span class="hljs-number">29</span>    <span class="hljs-number">25</span>    <span class="hljs-number">21</span></code></pre><br>2.熵权定权法<br><pre><code class="hljs matlab"><span class="hljs-comment">%选择是效率型还是成本型标记</span>L=xlsread(<span class="hljs-string">&#x27;zhengfu.xlsx&#x27;</span>,<span class="hljs-number">-1</span>)x=xlsread(<span class="hljs-string">&#x27;zhengfu.xlsx&#x27;</span>,<span class="hljs-number">-1</span>)[m,n]=<span class="hljs-built_in">size</span>(x);<span class="hljs-comment">%矩阵去量纲</span>R=<span class="hljs-built_in">zeros</span>(m,n);<span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:m    <span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span>=<span class="hljs-number">1</span>:n<span class="hljs-comment">%根据指标确定是越大越优型还是越小越优型</span>        <span class="hljs-keyword">if</span> L(<span class="hljs-built_in">j</span>)==<span class="hljs-number">1</span>            R(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>)=(x(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>)-<span class="hljs-built_in">min</span>(x(:,<span class="hljs-built_in">j</span>)))/(<span class="hljs-built_in">max</span>(x(:,<span class="hljs-built_in">j</span>))-<span class="hljs-built_in">min</span>(x(:,<span class="hljs-built_in">j</span>)));        <span class="hljs-keyword">end</span>    <span class="hljs-keyword">end</span><span class="hljs-keyword">end</span><span class="hljs-comment">%给第j项指标对不同评价对象求和，得到sumR</span>sumR=sum(R);<span class="hljs-comment">%初始化特征比重矩阵p</span>p=<span class="hljs-built_in">zeros</span>(m,n); <span class="hljs-comment">%零矩阵，可有可无</span><span class="hljs-comment">%计算第i个评价对象指标的特征比重</span><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> =<span class="hljs-number">1</span>:m    <span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span>=<span class="hljs-number">1</span>:n        p(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>)=R(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>)/sumR(<span class="hljs-built_in">j</span>);    <span class="hljs-keyword">end</span><span class="hljs-keyword">end</span><span class="hljs-comment">%判断p中元素是否为0，如果为0，p(i,j)*ln(p(i,j))=0</span>tp=<span class="hljs-built_in">zeros</span>(m,n);<span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:m    <span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span>=<span class="hljs-number">1</span>:n<span class="hljs-comment">%根据p(i,j)是否小于等于零给tp赋值</span>        <span class="hljs-keyword">if</span> p(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>)&lt;=<span class="hljs-number">0</span>            tp(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>)=<span class="hljs-number">0</span>        <span class="hljs-keyword">else</span>            tp(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>)=p(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>)*<span class="hljs-built_in">log</span>(p(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>));        <span class="hljs-keyword">end</span>    <span class="hljs-keyword">end</span><span class="hljs-keyword">end</span><span class="hljs-comment">%计算第j项指标的条件熵</span>H=-sum(tp);<span class="hljs-comment">%计算第j项指标的熵值</span>E=H/<span class="hljs-built_in">log</span>(m);<span class="hljs-comment">%计算差异系数G</span>G=<span class="hljs-number">1</span>-E;<span class="hljs-comment">%计算熵权W</span>W=G/sum(G)</code></pre><br><pre><code class="hljs matlab">W =    <span class="hljs-number">0.0486</span>    <span class="hljs-number">0.0670</span>    <span class="hljs-number">0.2085</span>    <span class="hljs-number">0.1995</span>    <span class="hljs-number">0.2264</span>    <span class="hljs-number">0.1923</span>    <span class="hljs-number">0.0191</span>    <span class="hljs-number">0.0385</span></code></pre></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>综合评价</tag>
      
      <tag>均方差法</tag>
      
      <tag>熵权定权法</tag>
      
      <tag>权重</tag>
      
      <tag>熵权</tag>
      
      <tag>去量纲</tag>
      
      <tag>熵值</tag>
      
      <tag>差异系数</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200723】</title>
    <link href="/2020/07/23/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200723%E3%80%91/"/>
    <url>/2020/07/23/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200723%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="整数规划问题"><a href="#整数规划问题" class="headerlink" title="整数规划问题"></a>整数规划问题</h1><h2 id="用分支定界法求解下列混合整数规划问题。"><a href="#用分支定界法求解下列混合整数规划问题。" class="headerlink" title="用分支定界法求解下列混合整数规划问题。"></a>用分支定界法求解下列混合整数规划问题。</h2><script type="math/tex; mode=display">max \ z=3x_1+x_2+3x_3</script><p><strong>s. t.</strong></p><script type="math/tex; mode=display">-x_1+2x_2+x_3\leq4,</script><script type="math/tex; mode=display">4x_2-3x_3\leq2,</script><script type="math/tex; mode=display">x_1-3x_2+2x_3\leq3,</script><script type="math/tex; mode=display">x_1,x_2,x_3\geq0,x_1,x_3\in{z^*}</script><pre><code class="hljs matlab">matlab实现代码：c=[<span class="hljs-number">3</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span>]intcon=[<span class="hljs-number">1</span>,<span class="hljs-number">3</span>]a=[<span class="hljs-number">-1</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span>;<span class="hljs-number">0</span> <span class="hljs-number">4</span> <span class="hljs-number">-3</span>;<span class="hljs-number">1</span> <span class="hljs-number">-3</span> <span class="hljs-number">2</span>]b=[<span class="hljs-number">4</span>;<span class="hljs-number">2</span>;<span class="hljs-number">3</span>]aeq=[]beq=[]lb=[<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>]ub=[][x,val]=intlinprog(-c,intcon,a,b,aeq,beq,lb,ub)x,val=-val</code></pre><pre><code class="hljs matlab">运行结果：x =    <span class="hljs-number">5.0000</span>    <span class="hljs-number">2.7500</span>    <span class="hljs-number">3.0000</span>val =  <span class="hljs-number">26.7500</span></code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://gitee.com/openfans-community/Debian-Pi-Aarch64/">Debian-Pi-Aarch64 ★ 全新树莓派64位系统2.0正式版 - 说明文档</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://raspberrypi.club/">树莓派俱乐部</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://shumeipai.nxez.com/">树莓派实验</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>线性规划</tag>
      
      <tag>intlinprog</tag>
      
      <tag>用分支定界法</tag>
      
      <tag>整数规划</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>视频站视频下载工具You-Get</title>
    <link href="/2020/07/22/software/%E8%A7%86%E9%A2%91%E7%AB%99%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7You-Get/"/>
    <url>/2020/07/22/software/%E8%A7%86%E9%A2%91%E7%AB%99%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7You-Get/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><p class="note note-primary">  很多时候随时随地在线看视频不是那么容易，尤其是YouTube的视频（你懂得），所以遇到好的视频下载下来还是有必要的。今天给大家介绍就是一款是使用python编写的下载视频站视频的工具——you-get。</p><br><a href="https://you-get.org/">官方网址：https://you-get.org/。</a></p><h2 id="1-1-下载、安装"><a href="#1-1-下载、安装" class="headerlink" title="1.1 下载、安装"></a>1.1 下载、安装</h2><p><span class="label label-primary"><br>依赖</p><ul><li>Python 3</li><li>FFmpeg (推荐) 或者 Libav</li><li>(可选) RTMPDump<br>&lt;/span&gt;</li></ul><h3 id="PIP安装"><a href="#PIP安装" class="headerlink" title="PIP安装"></a>PIP安装</h3><p>如果你的电脑上安装Python3，可以使用pip安装。</p><h4 id="GIT-克隆源码"><a href="#GIT-克隆源码" class="headerlink" title="GIT 克隆源码"></a>GIT 克隆源码</h4><p>首先从github下载所有源文件。<br><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> git <span class="hljs-built_in">clone</span> git://http://github.com/soimort/you-get.git</span></code></pre><br><span class="label label-primary">然后运行 ./setup.py install进行安装。</span></p><h3 id="linux安装you-get"><a href="#linux安装you-get" class="headerlink" title="linux安装you-get"></a>linux安装you-get</h3><h4 id="1、更新"><a href="#1、更新" class="headerlink" title="1、更新"></a>1、更新</h4><pre><code class="hljs shell">sudo apt-get update</code></pre><h3 id="2、安装-pip"><a href="#2、安装-pip" class="headerlink" title="2、安装 pip"></a>2、安装 pip</h3><pre><code class="hljs shell">sudo apt-get install python3-pip</code></pre><h3 id="3、安装-you-get"><a href="#3、安装-you-get" class="headerlink" title="3、安装 you-get"></a>3、安装 you-get</h3><pre><code class="hljs shell">sudo pip3 install you-get</code></pre><h3 id="4、下载网页视频"><a href="#4、下载网页视频" class="headerlink" title="4、下载网页视频"></a>4、下载网页视频</h3><pre><code class="hljs shell">you-get -o 保存路径 视频网址</code></pre><h3 id="5、查看帮助信息"><a href="#5、查看帮助信息" class="headerlink" title="5、查看帮助信息"></a>5、查看帮助信息</h3><pre><code class="hljs shell">you-get -h 来查看帮助信息</code></pre><h2 id="1-2-基本使用"><a href="#1-2-基本使用" class="headerlink" title="1.2 基本使用"></a>1.2 基本使用</h2><h3 id="1-下载视频网站视频"><a href="#1-下载视频网站视频" class="headerlink" title="1. 下载视频网站视频"></a>1. 下载视频网站视频</h3><p><span class="label label-primary">安装成功之后，就该大显身手的时候了。我在YouTube上看到一套《Hacking with Python》的视频，就拿它来做试验吧。复制该视频的URL：<br><a href="https://www.youtube.com/watch?v=UVac47TtghQ&amp;list=PL1A2CSdiySGLtKwqBnqj9BON6QQjWkP4n&amp;index=1。">https://www.youtube.com/watch?v=UVac47TtghQ&amp;list=PL1A2CSdiySGLtKwqBnqj9BON6QQjWkP4n&amp;index=1。</a></span><br>然后在命令行执行：<br><pre><code class="hljs shell">you-get-0.4.486-win32.exe -i https://www.youtube.com/watch?v=UVac47TtghQ&amp;list=PL1A2CSdiySGLtKwqBnqj9BON6QQjWkP4n&amp;index=1</code></pre><br>使用-i参数列出详细的视频下载信息，供我们进一步选择。</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201128121001.png" alt=""></p><p>从上图可以看到，程序列出了不同格式和质量的下载选项，并给出了下载方法。比如我这里下载mp4格式、1920*1080的视频，应该输入的命令为：<br>D:\工具\网络工具包&gt;you-get-0.4.486-win32.exe —itag=137 <a href="https://www.youtube.com/watch?v=UVac47TtghQ&amp;list=PL1A2CSdiySGLtKwqBnqj9BON6QQjWkP4n&amp;index=1">https://www.youtube.com/watch?v=UVac47TtghQ&amp;list=PL1A2CSdiySGLtKwqBnqj9BON6QQjWkP4n&amp;index=1</a><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201128121105.png" alt=""><br><span class="label label-primary"><br>  you-get在下载视频的过程中会依赖ffmpeg对下载的视频进行合并或者转码。很多视频站的视频都是分成多段进行加载的，如果你不希望程序自动合并视频，可以添加—no-merge/-n参数进行控制。</span><br>好了，下载成功一个视频：<br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201128121216.png" alt=""></p><h3 id="2-下载任何指定文件"><a href="#2-下载任何指定文件" class="headerlink" title="2.下载任何指定文件"></a>2.下载任何指定文件</h3><p>是不是感觉很爽呢？当然除了视频资源，如果我们给定一个文件url，它都可以帮我们下载。<br>如果我们给一个随意的URL，you-get会整体分析该网页可下载的资源，但是这个功能目前还不是很完善。</p><h3 id="3-自定义下载文件路径和名称"><a href="#3-自定义下载文件路径和名称" class="headerlink" title="3.自定义下载文件路径和名称"></a>3.自定义下载文件路径和名称</h3><p>使用—output-dir/-o参数可以指定文件保存的路径，使用—output-filename/-O参数来指定保存的文件名。例如：<br><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> you-get -o ~/Videos -O zoo.webm <span class="hljs-string">&#x27;https://www.youtube.com/watch?v=jNQXAC9IVRw&#x27;</span></span></code></pre></p><h3 id="4-设置代理"><a href="#4-设置代理" class="headerlink" title="4.设置代理"></a>4.设置代理</h3><p>使用—http-proxy/-x 参数为you-get指定http代理，默认情况下you-get会使用系统代理。如果不希望you-get使用任何代理，可以使用—no-proxy 参数来禁用。</p><h3 id="5-加载COOKIE"><a href="#5-加载COOKIE" class="headerlink" title="5.加载COOKIE"></a>5.加载COOKIE</h3><p>很多网站是需要登录才可以访问视频内容的，比如很多在线教育网站。这个时候就需要我们提交cookie信息了，you-get支持使用—cookies/-c来提交cookie数据。cookie数据支持两种格式：<br>cookies.sqlite 和 cookies.txt。</p><h2 id="1-3支持网站"><a href="#1-3支持网站" class="headerlink" title="1.3支持网站"></a>1.3支持网站</h2><table><thead><tr>  <th align="center">Site</th>  <th align="left">URL</th>  <th align="center">Videos?</th>  <th align="center">Images?</th>  <th align="center">Audios?</th></tr></thead><tbody><tr>  <td align="center"><strong>YouTube</strong></td>  <td align="left"><a href="https://www.youtube.com/">https://www.youtube.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center"><strong>Twitter</strong></td>  <td align="left"><a href="https://twitter.com/">https://twitter.com/</a></td>  <td align="center">✓</td>  <td align="center">✓</td>  <td align="center"></td></tr><tr>  <td align="center">VK</td>  <td align="left"><a href="http://vk.com/">http://vk.com/</a></td>  <td align="center">✓</td>  <td align="center">✓</td>  <td align="center"></td></tr><tr>  <td align="center">Vine</td>  <td align="left"><a href="https://vine.co/">https://vine.co/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">Vimeo</td>  <td align="left"><a href="https://vimeo.com/">https://vimeo.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">Veoh</td>  <td align="left"><a href="http://www.veoh.com/">http://www.veoh.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center"><strong>Tumblr</strong></td>  <td align="left"><a href="https://www.tumblr.com/">https://www.tumblr.com/</a></td>  <td align="center">✓</td>  <td align="center">✓</td>  <td align="center">✓</td></tr><tr>  <td align="center">TED</td>  <td align="left"><a href="http://www.ted.com/">http://www.ted.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">SoundCloud</td>  <td align="left"><a href="https://soundcloud.com/">https://soundcloud.com/</a></td>  <td align="center"></td>  <td align="center"></td>  <td align="center">✓</td></tr><tr>  <td align="center">SHOWROOM</td>  <td align="left"><a href="https://www.showroom-live.com/">https://www.showroom-live.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">Pinterest</td>  <td align="left"><a href="https://www.pinterest.com/">https://www.pinterest.com/</a></td>  <td align="center"></td>  <td align="center">✓</td>  <td align="center"></td></tr><tr>  <td align="center">MTV81</td>  <td align="left"><a href="http://www.mtv81.com/">http://www.mtv81.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">Mixcloud</td>  <td align="left"><a href="https://www.mixcloud.com/">https://www.mixcloud.com/</a></td>  <td align="center"></td>  <td align="center"></td>  <td align="center">✓</td></tr><tr>  <td align="center">Metacafe</td>  <td align="left"><a href="http://www.metacafe.com/">http://www.metacafe.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">Magisto</td>  <td align="left"><a href="http://www.magisto.com/">http://www.magisto.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">Khan Academy</td>  <td align="left"><a href="https://www.khanacademy.org/">https://www.khanacademy.org/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">Internet Archive</td>  <td align="left"><a href="https://archive.org/">https://archive.org/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center"><strong>Instagram</strong></td>  <td align="left"><a href="https://instagram.com/">https://instagram.com/</a></td>  <td align="center">✓</td>  <td align="center">✓</td>  <td align="center"></td></tr><tr>  <td align="center">InfoQ</td>  <td align="left"><a href="http://www.infoq.com/presentations/">http://www.infoq.com/presentations/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">Imgur</td>  <td align="left"><a href="http://imgur.com/">http://imgur.com/</a></td>  <td align="center"></td>  <td align="center">✓</td>  <td align="center"></td></tr><tr>  <td align="center">Heavy Music Archive</td>  <td align="left"><a href="http://www.heavy-music.ru/">http://www.heavy-music.ru/</a></td>  <td align="center"></td>  <td align="center"></td>  <td align="center">✓</td></tr><tr>  <td align="center">Freesound</td>  <td align="left"><a href="http://www.freesound.org/">http://www.freesound.org/</a></td>  <td align="center"></td>  <td align="center"></td>  <td align="center">✓</td></tr><tr>  <td align="center">Flickr</td>  <td align="left"><a href="https://www.flickr.com/">https://www.flickr.com/</a></td>  <td align="center">✓</td>  <td align="center">✓</td>  <td align="center"></td></tr><tr>  <td align="center">FC2 Video</td>  <td align="left"><a href="http://video.fc2.com/">http://video.fc2.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">Facebook</td>  <td align="left"><a href="https://www.facebook.com/">https://www.facebook.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">eHow</td>  <td align="left"><a href="http://www.ehow.com/">http://www.ehow.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">Dailymotion</td>  <td align="left"><a href="http://www.dailymotion.com/">http://www.dailymotion.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">Coub</td>  <td align="left"><a href="http://coub.com/">http://coub.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">CBS</td>  <td align="left"><a href="http://www.cbs.com/">http://www.cbs.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">Bandcamp</td>  <td align="left"><a href="http://bandcamp.com/">http://bandcamp.com/</a></td>  <td align="center"></td>  <td align="center"></td>  <td align="center">✓</td></tr><tr>  <td align="center">AliveThai</td>  <td align="left"><a href="http://alive.in.th/">http://alive.in.th/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">interest.me</td>  <td align="left"><a href="http://ch.interest.me/tvn">http://ch.interest.me/tvn</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center"><strong>755<br/>ナナゴーゴー</strong></td>  <td align="left"><a href="http://7gogo.jp/">http://7gogo.jp/</a></td>  <td align="center">✓</td>  <td align="center">✓</td>  <td align="center"></td></tr><tr>  <td align="center"><strong>niconico<br/>ニコニコ動画</strong></td>  <td align="left"><a href="http://www.nicovideo.jp/">http://www.nicovideo.jp/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center"><strong>163<br/>网易视频<br/>网易云音乐</strong></td>  <td align="left"><a href="http://v.163.com/">http://v.163.com/</a><br/><a href="http://music.163.com/">http://music.163.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center">✓</td></tr><tr>  <td align="center">56网</td>  <td align="left"><a href="http://www.56.com/">http://www.56.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center"><strong>AcFun</strong></td>  <td align="left"><a href="http://www.acfun.cn/">http://www.acfun.cn/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center"><strong>Baidu<br/>百度贴吧</strong></td>  <td align="left"><a href="http://tieba.baidu.com/">http://tieba.baidu.com/</a></td>  <td align="center">✓</td>  <td align="center">✓</td>  <td align="center"></td></tr><tr>  <td align="center">爆米花网</td>  <td align="left"><a href="http://www.baomihua.com/">http://www.baomihua.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center"><strong>bilibili<br/>哔哩哔哩</strong></td>  <td align="left"><a href="http://www.bilibili.com/">http://www.bilibili.com/</a></td>  <td align="center">✓</td>  <td align="center">✓</td>  <td align="center">✓</td></tr><tr>  <td align="center">豆瓣</td>  <td align="left"><a href="http://www.douban.com/">http://www.douban.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center">✓</td></tr><tr>  <td align="center">斗鱼</td>  <td align="left"><a href="http://www.douyutv.com/">http://www.douyutv.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">凤凰视频</td>  <td align="left"><a href="http://v.ifeng.com/">http://v.ifeng.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">风行网</td>  <td align="left"><a href="http://www.fun.tv/">http://www.fun.tv/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">iQIYI<br/>爱奇艺</td>  <td align="left"><a href="http://www.iqiyi.com/">http://www.iqiyi.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">激动网</td>  <td align="left"><a href="http://www.joy.cn/">http://www.joy.cn/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">酷6网</td>  <td align="left"><a href="http://www.ku6.com/">http://www.ku6.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">酷狗音乐</td>  <td align="left"><a href="http://www.kugou.com/">http://www.kugou.com/</a></td>  <td align="center"></td>  <td align="center"></td>  <td align="center">✓</td></tr><tr>  <td align="center">酷我音乐</td>  <td align="left"><a href="http://www.kuwo.cn/">http://www.kuwo.cn/</a></td>  <td align="center"></td>  <td align="center"></td>  <td align="center">✓</td></tr><tr>  <td align="center">乐视网</td>  <td align="left"><a href="http://www.le.com/">http://www.le.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">荔枝FM</td>  <td align="left"><a href="http://www.lizhi.fm/">http://www.lizhi.fm/</a></td>  <td align="center"></td>  <td align="center"></td>  <td align="center">✓</td></tr><tr>  <td align="center">秒拍</td>  <td align="left"><a href="http://www.miaopai.com/">http://www.miaopai.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">MioMio弹幕网</td>  <td align="left"><a href="http://www.miomio.tv/">http://www.miomio.tv/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">MissEvan<br/>猫耳FM</td>  <td align="left"><a href="http://www.missevan.com/">http://www.missevan.com/</a></td>  <td align="center"></td>  <td align="center"></td>  <td align="center">✓</td></tr><tr>  <td align="center">痞客邦</td>  <td align="left"><a href="https://www.pixnet.net/">https://www.pixnet.net/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">PPTV聚力</td>  <td align="left"><a href="http://www.pptv.com/">http://www.pptv.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">齐鲁网</td>  <td align="left"><a href="http://v.iqilu.com/">http://v.iqilu.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">QQ<br/>腾讯视频</td>  <td align="left"><a href="http://v.qq.com/">http://v.qq.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">企鹅直播</td>  <td align="left"><a href="http://live.qq.com/">http://live.qq.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">Sina<br/>新浪视频<br/>微博秒拍视频</td>  <td align="left"><a href="http://video.sina.com.cn/">http://video.sina.com.cn/</a><br/><a href="http://video.weibo.com/">http://video.weibo.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">Sohu<br/>搜狐视频</td>  <td align="left"><a href="http://tv.sohu.com/">http://tv.sohu.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center"><strong>Tudou<br/>土豆</strong></td>  <td align="left"><a href="http://www.tudou.com/">http://www.tudou.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">虾米</td>  <td align="left"><a href="http://www.xiami.com/">http://www.xiami.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center">✓</td></tr><tr>  <td align="center">阳光卫视</td>  <td align="left"><a href="http://www.isuntv.com/">http://www.isuntv.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center"><strong>音悦Tai</strong></td>  <td align="left"><a href="http://www.yinyuetai.com/">http://www.yinyuetai.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center"><strong>Youku<br/>优酷</strong></td>  <td align="left"><a href="http://www.youku.com/">http://www.youku.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">战旗TV</td>  <td align="left"><a href="http://www.zhanqi.tv/lives">http://www.zhanqi.tv/lives</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">央视网</td>  <td align="left"><a href="http://www.cntv.cn/">http://www.cntv.cn/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">Naver<br/>네이버</td>  <td align="left"><a href="http://tvcast.naver.com/">http://tvcast.naver.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">芒果TV</td>  <td align="left"><a href="http://www.mgtv.com/">http://www.mgtv.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">火猫TV</td>  <td align="left"><a href="http://www.huomao.com/">http://www.huomao.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">阳光宽频网</td>  <td align="left"><a href="http://www.365yg.com/">http://www.365yg.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">西瓜视频</td>  <td align="left"><a href="https://www.ixigua.com/">https://www.ixigua.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">新片场</td>  <td align="left"><a href="https://www.xinpianchang.com//">https://www.xinpianchang.com//</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">快手</td>  <td align="left"><a href="https://www.kuaishou.com/">https://www.kuaishou.com/</a></td>  <td align="center">✓</td>  <td align="center">✓</td>  <td align="center"></td></tr><tr>  <td align="center">抖音</td>  <td align="left"><a href="https://www.douyin.com/">https://www.douyin.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">TikTok</td>  <td align="left"><a href="https://www.tiktok.com/">https://www.tiktok.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">中国体育(TV)</td>  <td align="left"><a href="http://v.zhibo.tv/">http://v.zhibo.tv/</a> </br><a href="http://video.zhibo.tv/">http://video.zhibo.tv/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr><tr>  <td align="center">知乎</td>  <td align="left"><a href="https://www.zhihu.com/">https://www.zhihu.com/</a></td>  <td align="center">✓</td>  <td align="center"></td>  <td align="center"></td></tr></tbody></table><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://github.com/soimort/you-get/wiki/%E4%B8%AD%E6%96%87%E8%AF%B4%E6%98%8E">视频站视频下载工具You-Get github中文说明文档</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>life</category>
      
      <category>software</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>you-get</tag>
      
      <tag>视频下载</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日一题【20200722】</title>
    <link href="/2020/07/22/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200722%E3%80%91/"/>
    <url>/2020/07/22/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E3%80%9020200722%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="线性规划问题"><a href="#线性规划问题" class="headerlink" title="线性规划问题"></a>线性规划问题</h1><h2 id="求解下列线性规划问题。"><a href="#求解下列线性规划问题。" class="headerlink" title="求解下列线性规划问题。"></a>求解下列线性规划问题。</h2><script type="math/tex; mode=display">max z =2x_1+3x_2-5x_3</script><script type="math/tex; mode=display">x_1+x_2+x_3=7</script><script type="math/tex; mode=display">2x_1-5x_2+x_3\geq10</script><script type="math/tex; mode=display">\ x_1+3x_2+x_3\leq12</script><script type="math/tex; mode=display">x_1,x_2,x_3\geq0</script><p>解题思路：</p><ul><li>根据函数的使用要求；</li><li>求最大值，首先要把目标函数转化为最小值，即<script type="math/tex; mode=display">min \ z = - (2x_1+3x_2-5x_3)</script><span class="label label-primary">要把大于等于转换为小于等于，即在有 “≥” 符号式子两边同时乘以-1；</span></li></ul><pre><code class="hljs matlab">matlab代码：c=[<span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">-5</span>]a=[<span class="hljs-number">-2</span> <span class="hljs-number">5</span> <span class="hljs-number">-1</span>;<span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">1</span>]b=[<span class="hljs-number">-10</span>;<span class="hljs-number">12</span>]aeq=[<span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span>]beq=[<span class="hljs-number">7</span>]lb=<span class="hljs-built_in">zeros</span>(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>)ub=[][x,fval]=linprog(-c,a,b,aeq,beq,lb,ub) ; <span class="hljs-comment">%是求最大值而不是最小值，注意这里是&quot;-c&quot;而不是&quot;c&quot;</span>x,fval=-fval</code></pre><pre><code class="hljs matlab">matlab结果：x =    <span class="hljs-number">6.4286</span>    <span class="hljs-number">0.5714</span>         <span class="hljs-number">0</span>fval =   <span class="hljs-number">14.5714</span></code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="">NULL</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
      <tag>线性规划</tag>
      
      <tag>linprog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>shell编程</title>
    <link href="/2020/07/21/Linux/shell%E7%BC%96%E7%A8%8B/"/>
    <url>/2020/07/21/Linux/shell%E7%BC%96%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="一、计算机组成："><a href="#一、计算机组成：" class="headerlink" title="一、计算机组成："></a>一、计算机组成：</h2><ul><li><p>内核在中间位置，连接软件与硬件（雷纳斯开发）</p></li><li><p>内核功能：</p><ul><li>内存（物理、虚拟（交换空间）内存）；</li><li>软件管理（进程管理）；</li><li>硬件管理</li></ul></li></ul><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123221706.png" alt=""></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123221733.png" alt=""></p><h2 id="二、-shell-编程基础"><a href="#二、-shell-编程基础" class="headerlink" title="二、 shell 编程基础"></a>二、 shell 编程基础</h2><ul><li><p>“；” 可以放在两个毫不相关的之间       例：date ; who</p></li><li><p>脚本格式要求：脚本以 <strong>#!/Bin/bash</strong> 开头；脚本需要有可执行权限</p></li><li><p>脚本的常用执行方式：</p></li></ul><ol><li>命令行进入脚本的绝对路径或相对路径</li><li>●方式1<br>1)首先要<strong>chmod 744  helloworld.sh</strong> 改变权限(变绿为可执行文件)<br>2)执行脚本<br>●方式2(bash/bash+脚本)<br>说明:不用赋予脚本+x权限，直接执行即可。</li></ol><pre><code class="hljs shell">例:输出“hello world”  <span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>echo &quot;hello world&quot;<span class="hljs-meta">#</span><span class="bash"> 注意：<span class="hljs-built_in">echo</span>命令中想输出单引号用双引号包裹，双引号同理</span></code></pre><h2 id="三、shell的变量"><a href="#三、shell的变量" class="headerlink" title="三、shell的变量"></a>三、shell的变量</h2><ul><li><p>系统变量</p><p>$HOME、$USER、$UID、$PWD等等</p></li><li><p>用户自定义变量</p><p>定义变量=值</p></li></ul><pre><code class="hljs shell">例：系统变量与自定义变量的使用<span class="hljs-meta">#</span><span class="bash">！/bin/bash</span>echo &quot;当前用户信息：$USER&quot;var=10var1=$varecho &quot;上一个值是：$var&quot;echo &quot;第二个值是:$var1&quot;<span class="hljs-meta">#</span><span class="bash">shell命令中，在用户自定义命令时，切勿在等号两旁留空格</span></code></pre><ul><li><p>其他内容：</p><ul><li>撤销命令 unset 变量名</li><li>设置静态变量 readonly（不能unset）</li></ul></li></ul><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>var=10var1=$varreadonly var2=3unset varecho &quot;第一个值是：$var&quot;echo &quot;第二个值是：$var1&quot;echo &quot;第三个值是：$var2&quot;</code></pre><h2 id="四、-显示消息"><a href="#四、-显示消息" class="headerlink" title="四、 显示消息"></a>四、 显示消息</h2><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>A=`ls -la`echo $AB=$(ls -la)echo $B</code></pre><h2 id="五、设置环境变量"><a href="#五、设置环境变量" class="headerlink" title="五、设置环境变量"></a>五、设置环境变量</h2><ol><li><p>基本语法<br>1) export变量名=变量值(功能描述: 将shell变量输出为环境变量)<br>2) source配置文件(功能描述:让修改后的配置信息立即生效)..<br>3) echo $变量名(功能描述: 查询环境变量的值)</p></li><li><p>快速入门<br>1)在/etc/profile文件中定义TOMCAT HOME环境变量<br>2)查看环境变量TOMCAT<em> HOME的值<br>3)在另外-一个shell程序中使用TOMCAT</em> HOME<br>注意:在输出TOMCAT_ HOME环境变量前，需要让其生效<br>source /etc/profile</p></li></ol><h2 id="六、位置参数变量"><a href="#六、位置参数变量" class="headerlink" title="六、位置参数变量"></a>六、位置参数变量</h2><ol><li><p>介绍<br>   当我们执行一个shelI脚本时，如果希望获取到命令行的参数信息，就可以使用到位置参<br>   数变量比如: ./myshell.sh 100200 ,这个就是一 个执行shell的命令行，可以在<br>   myshell脚本中获取到参数信息</p></li><li><p>基本语法</p></li></ol><ul><li>$n (功能描述: n为数字，$0代表命令本身，$1-$9代表第一到第九个参数，十以上的<br>参数,十以上的参数需要用大括号包含，如${10})<pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>echo $0 $1 $2<span class="hljs-meta">#</span><span class="bash"><span class="hljs-built_in">echo</span> $* <span class="hljs-variable">$@</span> <span class="hljs-variable">$#</span></span>pi@raspbian:~/bash$ bash test.sh 1 2test.sh 1 2pi@raspbian:~/bash$ bash test.sh 1 2 3test.sh 1 2pi@raspbian:~/bash$ bash test.sh 1 test.sh 1</code></pre></li><li>$* (功能描述: 这个变量代表命令行中所有的参数，$’ 把所有的参数看成一个整体)</li><li>$@ (功能描述:这个变量也代表命令行中所有的参数,不过$@把每个参数区分对待)</li><li>$# (功能描述:这个量代表命令行中所有参数的个数)<br>位置参数变量<br>●应用实例<br>案例:编写一个shel脚本positionPara.sh，在脚本中获取到命 令行的各个参数信息。</li></ul><h2 id="七、运算符"><a href="#七、运算符" class="headerlink" title="七、运算符"></a>七、运算符</h2><ol><li>基本介绍<br>学习如何在shell中进行各种运算操作。</li></ol><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123223132.png" alt=""></p><ol><li><p>基本语法<br>   1) i “$(运算式)” 或“$[运算式]”<br>   2)expr m + n<br>   <strong>注意:expr运算符间要有空格</strong><br>   3) expr m - n<br>   4) expr \*,/, % (乘，除，取余)</p></li><li><p>应用实例.<br>   案例1:计算(2+3) X4的值<br>   案例2:请求出命令行的两个参数[整数]的和</p></li></ol><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>expr 1 + 4expr 1 \* 4var1=10var2=20var3=$(expr $var1 + $var2) echo $var3var4=$[20 + 20]echo $var4var5=$[$var4 * 3]echo $var5var6=$[$var1 * ($var3 + $var4)]echo var6<span class="hljs-meta">#</span><span class="bash">(2+3)*4</span><span class="hljs-meta">#</span><span class="bash">error:expr需分开做</span><span class="hljs-meta">#</span><span class="bash">var7=$(expr (2 + 3) \* 4)</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-built_in">echo</span> var7</span>var7=$(expr 2 + 3)var8=$(expr $var7 \* 4)</code></pre><ol><li><p>只支持整数级运算</p><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>var4=$(expr1.56 + 5.69)echo var4</code></pre></li><li><p>bash中自带计算器，可使用<strong>bc</strong>使用（quit退出）</p></li></ol><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span><span class="hljs-meta">#</span><span class="bash">bc 计算器;管道传给bc ?</span>echo &quot;scale=4;3.777 / 5&quot; | bcvar1=$(echo &quot;scale=4;3.777 / 5&quot; | bc)var2=3var3=$(echo &quot;scale=4; $var1 *$var2&quot; | bc)echo var3</code></pre><h2 id="八、判断语句"><a href="#八、判断语句" class="headerlink" title="八、判断语句"></a>八、判断语句</h2><ol><li>两个整数的比较<br>=字符串比较<br>-lt小于<br>-le小于等于<br>-eq等于<br>-gt大于<br>-ge大于等于<br>-ne不等于</li><li>按照文件权限进行判断-r有读的权限<br> -w有写的权限<br>-x有执行的权限</li><li>按照文件类型进行判断-f 文件存在并且是一个常规的文件<br>-e文件存在<br>-d文件存在并是一个目录</li></ol><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span><span class="hljs-meta">#</span><span class="bash">条件判断</span>[ qust ]echo $?   #输出上一条指令判断结果[ &quot;qust&quot; = &quot;qust&quot;]echo $?[ &quot;qust&quot; = &quot;gmqust&quot;]echo $?</code></pre><h2 id="九、流程控制"><a href="#九、流程控制" class="headerlink" title="九、流程控制"></a>九、流程控制</h2><ol><li>if-then</li></ol><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">！/bin/bash</span>if [ &quot;ok&quot; = ok ]   #[ commond ]即中括号内项与符号之间也要保留空格thenecho &quot;相等&quot;fi                 #表示if判断结束</code></pre><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">！/bin/bash</span>if pwd   thenecho &quot;相等&quot;fi</code></pre><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">！/bin/bash</span><span class="hljs-meta">#</span><span class="bash">❌ 没有相应命令</span>if dewedawathenecho &quot;相等&quot;fi      pi@raspbian:~/bash$ bash test.sh相等test.sh: line 1: waasdad: command not found</code></pre><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">！/bin/bash</span>if pwd;thenecho &quot;相等&quot;fi</code></pre><h2 id="十、复习："><a href="#十、复习：" class="headerlink" title="十、复习："></a>十、复习：</h2><h4 id="1-位置参数变量"><a href="#1-位置参数变量" class="headerlink" title="1.位置参数变量"></a>1.位置参数变量</h4><h4 id="n-0-9-0表示其本身-10以上用大括号表示-10"><a href="#n-0-9-0表示其本身-10以上用大括号表示-10" class="headerlink" title="$n(0-9) : $0表示其本身;10以上用大括号表示${10};$*;$#;"></a>$n(0-9) : $0表示其本身;10以上用大括号表示${10};$*;$#;</h4><h4 id="2-预定义变量"><a href="#2-预定义变量" class="headerlink" title="2.预定义变量"></a>2.预定义变量</h4><h4 id="进程号PID-最后一个进程号"><a href="#进程号PID-最后一个进程号" class="headerlink" title="$$(进程号PID);$!(最后一个进程号);$?"></a>$$(进程号PID);$!(最后一个进程号);$?</h4><h4 id="3-运算符（不支持浮点数）"><a href="#3-运算符（不支持浮点数）" class="headerlink" title="3.运算符（不支持浮点数）"></a>3.运算符（不支持浮点数）</h4><h4 id="expr-m-n-注：空格"><a href="#expr-m-n-注：空格" class="headerlink" title="expr m + (/ - \* \)  n (注：空格);"></a>expr m + (/ - \* \)  n (注：空格);</h4><h4 id="运算式"><a href="#运算式" class="headerlink" title="${运算式}"></a>${运算式}</h4><h4 id="4-条件判断"><a href="#4-条件判断" class="headerlink" title="4.条件判断"></a>4.条件判断</h4><pre><code class="hljs shell">if commandthen  commandsfi</code></pre><h2 id="十一、if语句"><a href="#十一、if语句" class="headerlink" title="十一、if语句"></a>十一、if语句</h2><h4 id="example-01-if—else流程"><a href="#example-01-if—else流程" class="headerlink" title="example 01: if—else流程"></a>example 01: if—else流程</h4><pre><code class="hljs shell">example 01:if——else流程<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>testuser=piif grep $testuser /etc/passwdthenecho &quot;hello&quot;echo &quot;你好&quot;echo &quot;有这个用户&quot;elseecho &quot;用户不存在&quot;fi</code></pre><h4 id="example-02-流程控制（嵌套if）"><a href="#example-02-流程控制（嵌套if）" class="headerlink" title="example 02:流程控制（嵌套if）"></a>example 02:流程控制（嵌套if）</h4><pre><code class="hljs shell">example 02:流程控制（嵌套if）testuser=NoSuchUserif grep $testuser /etc/ passwdthenecho &quot;The user $testuser exists on this system.elseecho &quot;The user $testuser does not exist on this system. ”if ls -d /home/$testuser/thenecho &quot;However， $testuser has a directory.&#x27;fifi</code></pre><h4 id="example-03-if-elif"><a href="#example-03-if-elif" class="headerlink" title="example 03: if-elif"></a>example 03: if-elif</h4>  <pre><code class="hljs shell">example 03:if-elif</code></pre><h4 id="example-04-if-condition-条件判断"><a href="#example-04-if-condition-条件判断" class="headerlink" title="example 04: if [ condition ]条件判断"></a>example 04: if [ condition ]条件判断</h4><h5 id="1-注意：中括号前后需保留空格"><a href="#1-注意：中括号前后需保留空格" class="headerlink" title="1.注意：中括号前后需保留空格"></a>1.注意：中括号前后需保留空格</h5><h5 id="2-常见的应用"><a href="#2-常见的应用" class="headerlink" title="2.常见的应用"></a>2.常见的应用</h5><ul><li>数值比较</li><li>字符串比较</li><li>文件比较</li></ul><h5 id="3-数值比较"><a href="#3-数值比较" class="headerlink" title="3.数值比较"></a>3.数值比较</h5><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123221926.png" alt=""></p><pre><code class="hljs shell">example 0401:if[ condition ]<span class="hljs-meta">#</span><span class="bash">/bin/bash</span>var1=5var2=10if [ var1 -le var2 ]thenecho &quot;var1小于等于var2&quot;elseecho &quot;var1大于var2&quot;fi</code></pre><h5 id="4-字符串比较"><a href="#4-字符串比较" class="headerlink" title="4.字符串比较"></a>4.字符串比较</h5><ul><li>[ $m = $n ]</li><li>[ $m != $n ]</li><li>[ $m &lt; $n ] (根据首字母顺序比较)</li><li>[ $m &gt; $n ] (根据首字母顺序比较)</li><li>[ -n str1 ] (判断str1长度是否非零)</li><li>[ -z str1 ] (判断str1长度是否为零)</li></ul><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123221819.png" alt=""></p><pre><code class="hljs shell">example 0402:字符串比较<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>str1=pistr2=rootif [ $str1 = $str2 ]thenecho &quot;相同&quot;elseecho &quot;不相同&quot;fi</code></pre><pre><code class="hljs shell">example 0403:得到的结果永远都是sr1&gt;str2,原因：&gt;在此处是记录，会创建新文件<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>str1=pistr2=rootif [ $str1 &gt; $str2 ]thenecho&quot;str1 大于 str2&quot;elseecho&quot;str1 小于 str2&quot;</code></pre><h5 id="5-文件比较"><a href="#5-文件比较" class="headerlink" title="5.文件比较"></a>5.文件比较</h5><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123221953.png" alt=""></p><pre><code class="hljs shell">example 0404:文件比较<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>dir 1=/hone/piif[-e dir1]thenecho“目录$dtr1存在cd dir1elseecho &quot;不存在&quot;fi</code></pre><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>dir1=t05.shif [ t04.sh -nt Sdir1 ]thenecho&quot;t04 更新一些&quot;elseecho &quot;t05 更新一些&quot;ft</code></pre><h5 id="6-复合条件测试"><a href="#6-复合条件测试" class="headerlink" title="6.复合条件测试"></a>6.复合条件测试</h5><h5 id="condition1-amp-amp-condition2"><a href="#condition1-amp-amp-condition2" class="headerlink" title="[ condition1 ] &amp;&amp;[ condition2 ]"></a>[ condition1 ] &amp;&amp;[ condition2 ]</h5><p>[ condition1 ] II [ condition2 ]<br>if-then的高级特性<br>使用双括号<br>(( expression ))</p><pre><code class="hljs shell">example 0405:复合条件测试<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>val1=10if (( $val1 ** 2 &gt; 99 ))then(( $val2 = val1 ++ )) #使用&quot;++&quot;时注意不要加&quot;$&quot;符号echo $val2fl</code></pre><h4 id="example-05-case命令"><a href="#example-05-case命令" class="headerlink" title="example 05 : case命令"></a>example 05 : case命令</h4><pre><code class="hljs shell">case variable inpattern1|pattern2)commands;;pattern3)commands2;;*)default commands;;esac</code></pre><pre><code class="hljs shell">example 05:当命令行参数是 1 时，输出 &quot;周一&quot;, 是2 时，就输出&quot;周二&quot;， 其它情况输出 &quot;other&quot;<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>var=$1case $var in        1)                echo &quot;星期一&quot;                ;;        2)                echo &quot;星期二&quot;                ;;        *)default                echo &quot;other&quot;                ;;esac</code></pre><pre><code class="hljs shell">结果：pi@raspbian:~/bash$ . test.sh 2星期二pi@raspbian:~/bash$ . test.sh 1星期一pi@raspbian:~/bash$ . test.sh 7bash: default: command not foundother</code></pre><pre><code class="hljs shell">example 06:请编写一个shell程序，如果输入的参数，大于等于60，则输出 &quot;及格了&quot;，如果小于60,则输出 &quot;不及格<span class="hljs-meta">#</span><span class="bash">!bin/bash</span>grade=$1if [ $grade -ge 60 ]thenecho &quot;及格了&quot;elseecho &quot;不及格&quot;fi</code></pre><pre><code class="hljs shell">结果：pi@raspbian:~/bash$ . test.sh 60及格了pi@raspbian:~/bash$ . test.sh 80及格了pi@raspbian:~/bash$ . test.sh 59不及格</code></pre><h2 id="十二、循环语句"><a href="#十二、循环语句" class="headerlink" title="十二、循环语句"></a>十二、循环语句</h2><h4 id="1、for命令"><a href="#1、for命令" class="headerlink" title="1、for命令"></a>1、for命令</h4><pre><code class="hljs shell">for var in listdo   commandsdone</code></pre><p><em>注：var若不修改，则在for循环执行后会保留列表中最后一个字符。</em></p><pre><code class="hljs shell">example 01:句子中包含&#x27;，可通过转意和&quot;&quot;处理操作for var in I don\&#x27;t know if &quot;this&#x27;ll&quot; workdo echo $vardone</code></pre><pre><code class="hljs shell">example 02:默认以空格划分，可以通过&quot;&quot;进行处理操作for var in &quot;a apple&quot; &quot;a orang&quot;do echo $vardone</code></pre><pre><code class="hljs shell">example 03:读取变量list=&quot;a apple ia on the desk&quot;for var in $listdo echo $vardone</code></pre><pre><code class="hljs shell">example 04:读取文档for var in $(cat test01.txt)do echo $vardone</code></pre><pre><code class="hljs shell">example 05:IFS问题（内部字段分隔符：空格，制表符，换行符）IFS=$&#x27;\n&#x27;   #修改指定分隔符for var in $(cat test01.txt)do echo $vardone</code></pre><pre><code class="hljs shel">example 06:遍历查看某个路径下文件for var in &#x2F;home&#x2F;pi&#x2F;*doif [ -d $var ]thenecho &quot;$var是一个目录&quot;elfi [ -f $var ]thenecho &quot;$var是一个文件&quot;fidone</code></pre><pre><code class="hljs shell">example 07:C语言的for命令-单变量for ((i=1;i&lt;=10;i++))doecho $idone</code></pre><pre><code class="hljs shell">example 08:C语言的for命令-多变量(条件只能是一个！！）for((a=1,b=2;a&lt;=10;a++,b++))doecho [$a+$b]done</code></pre><pre><code class="hljs shell">example 09:$@ 与 $*区别for i in &quot;$*&quot;doecho &quot;第一种*显示的：$i&quot;donefor j in &quot;$@&quot;doecho &quot;第二种显示的：$j&quot;done</code></pre><pre><code class="hljs shel">结果：pi@raspbian:~&#x2F;bash$ . test.sh 1 2 3第一种*显示的：1 2 3第二种显示的：1第二种显示的：2第二种显示的：3</code></pre><h2 id="十三、while循环"><a href="#十三、while循环" class="headerlink" title="十三、while循环"></a>十三、while循环</h2><pre><code class="hljs shell"></code></pre><pre><code class="hljs shell">example 01:简单例子var=10while [ $var -gt 0 ]doecho $varvar=$[ $var - 1 ]done</code></pre><pre><code class="hljs shell">example 02:while的嵌套var=10while [ $var -gt 0 ]dofor(( var2=1;$var&lt;5;var2++ ))doecho &quot;内层循环的值：$var2&quot;doneecho &quot;外层循环的值：$var&quot;var=$[ $var - 1 ]done</code></pre><pre><code class="hljs shell">example 03:until(条件判断与while相反)var=100until &#123; $var -eq 0 &#125;doecho $varvar=$[ $var - 10 ]done</code></pre><pre><code class="hljs shell">example 04:控制循环：break;continue</code></pre><pre><code class="hljs shell">example 05:用while循环实现从命令行输入一个数n，统计从 1+..+ n 的值是多少<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>n=$1sum=0i=1while [ $i -le $n ]do        sum=$[ $i + $sum ]        i=$[ $i + 1 ]doneecho $iecho $sum结果：pi@raspbian:~/bash$ . test.sh 1001015050</code></pre><pre><code class="hljs shell">example 06:用for 实现从1加到100的结果，输出显示<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>sum=0for ((i=1;i&lt;=100;i++))do        sum=$[ $i + $sum]doneecho $sum结果：pi@raspbian:~/bash$ . test1.sh5050</code></pre><h2 id="十四、read读取控制台输入"><a href="#十四、read读取控制台输入" class="headerlink" title="十四、read读取控制台输入"></a>十四、read读取控制台输入</h2><h4 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h4><pre><code class="hljs shell">sample 01 简单例子<span class="hljs-meta">#</span><span class="bash">! /bin/bash</span>echo -n &quot;Enter your nane:&quot;read nameecho $name</code></pre><h6 id="p-指定读取值时的提示符"><a href="#p-指定读取值时的提示符" class="headerlink" title="p:指定读取值时的提示符;"></a>p:指定读取值时的提示符;</h6><pre><code class="hljs shell">sample 02 -p 参数的应用<span class="hljs-meta">#</span><span class="bash">!/bin/bash </span>read -p &quot;请输入你的姓名：&quot;nameecho $name</code></pre><pre><code class="hljs shell">sample 03 多参数输入<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>read -p &quot;请输入你的姓名年龄（空格分隔）：&quot;name ageecho &quot;用户的姓名是$name,用户的年龄是$age&quot;<span class="hljs-meta">#</span><span class="bash">若用户输入变量数目大于原有变量数目，则剩余输入值全部赋给最后一个个预定变量</span></code></pre><pre><code class="hljs shell">sample 04 若不指定变量，则会存储在默认环境变量$REPLY中<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>read -p &quot;请输入你的姓名年龄（空格分隔）：&quot;echo $REPLY</code></pre><h6 id="t-指定读取值时等待的时间-秒-，如果没有在指定的时间内输入，就不再等"><a href="#t-指定读取值时等待的时间-秒-，如果没有在指定的时间内输入，就不再等" class="headerlink" title="t:指定读取值时等待的时间(秒)，如果没有在指定的时间内输入，就不再等"></a>t:指定读取值时等待的时间(秒)，如果没有在指定的时间内输入，就不再等</h6><pre><code class="hljs shell">sample 05 -t计时器应用<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>read -t 5 -p &quot;请输入你的姓名年龄（空格分隔）：&quot;name ageecho &quot;用户的姓名是$name,用户的年龄是$age&quot;</code></pre><pre><code class="hljs shell">sample 06 -t与if函数的结合应用<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>if read -t 5-p &quot;请输入你的姓名,年龄(空格分割) :&quot; name agethenecho  &quot;欢迎你: $name&quot;elseecho  &quot;对不起,您登陆超时&quot;fi</code></pre><pre><code class="hljs shell">sample 07 常见的case应用<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>read -p &quot;Do you want to continue?[Y/N]&quot; answercase $answer iny | Y)echoecho &quot;continue&quot;;;n | N)echoecho &quot;ok byebye&quot;exit;;esacecho &quot;end……&quot;</code></pre><h5 id="s选项可以避免在read命令中输入的数据出现在显示器上"><a href="#s选项可以避免在read命令中输入的数据出现在显示器上" class="headerlink" title="-s选项可以避免在read命令中输入的数据出现在显示器上"></a>-s选项可以避免在read命令中输入的数据出现在显示器上</h5><pre><code class="hljs shell">sample 08 -s选项可以避免在read命令中输入的数据出现在显示器上<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>read -s -p &quot;请输入你的密码：&quot;passwdechoecho &quot;你的密码是：&quot;$passwd</code></pre><h5 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h5><pre><code class="hljs shell">sample 09 读取文件<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>count=1cat 1og.200527 | while read linedoecho &quot;line $count :$line&quot;count=$[ $count + 1]doneecho &quot;end.....&quot;</code></pre><h2 id="十五、函数"><a href="#十五、函数" class="headerlink" title="十五、函数"></a>十五、函数</h2><h5 id="1-系统函数：driname-basename"><a href="#1-系统函数：driname-basename" class="headerlink" title="1.系统函数：driname basename"></a>1.系统函数：driname basename</h5><ul><li>dirname基本语法<br>功能:返回完整路径最后的前面的部分，常用于返回路径部分</li><li>dirname文件绝对路径(功能描述: 从给定的包含绝对路径的文件名中去除文件名(非然后返回剩下的路径(目录的部分) )<pre><code class="hljs shell">sample ： 终端pi@raspbian:~$ dirname bash/test1.shbashpi@raspbian:~$ basename bash/test1.shtest1.sh</code></pre></li></ul><h5 id="2-函数自定义函数"><a href="#2-函数自定义函数" class="headerlink" title="2.函数自定义函数"></a>2.函数自定义函数</h5><pre><code class="hljs shell">●基本语法[ function ]funname&#123;Action;[return int;]&#125;或name()&#123;commands&#125;</code></pre><pre><code class="hljs shell">sample 01 函数基本调用简单例子<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>function func1&#123;echo &quot;这是函数1&quot;&#125;count=1while [ $count -le 5 ]dofunc1count=$[ $count +1 ]doneecho &quot;结束循环&quot;func1echo &quot;结束循环&quot;</code></pre><pre><code class="hljs shell">sample 02 error<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>function func1 &#123;echo“这是函数1”&#125;count=lwhtle [ $count -le 5 ]dofunc1count=$[ Scount + 1 ]doneecho &quot;结束循环&quot;func2function func2 &#123;echo &quot;这是函数2&quot;&#125;echo &quot;结束脚本</code></pre><pre><code class="hljs shell">sample 03 函数覆盖<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>function func1 &#123;echo“这是函数1”&#125;count=lwhtle [ $count -le 5 ]dofunc1count=$[ Scount + 1 ]doneecho“结束循环&quot;function func1 &#123;echo &quot;这是函数2&quot;&#125;func1echo &quot;结束脚本</code></pre><h2 id="十六、函数"><a href="#十六、函数" class="headerlink" title="十六、函数"></a>十六、函数</h2><h4 id="1-返回值"><a href="#1-返回值" class="headerlink" title="1.返回值"></a>1.返回值</h4><p><strong>bash shell会把函数当作一个小型脚本，运行结束时会返回一个退出状态码。bash shell使用return命令来退出函数并返回特定的退出状态码。</strong></p><p><strong>⚠函数结束后需要立刻取回返回值⚠</strong></p><pre><code class="hljs shell">sample 01<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>func1()&#123;echo &quot;尝试显示不存在的文件&quot;1s -1 badfile&#125;echo &quot;调用函数&quot;func1echo &quot;函数的状态码$?&quot;</code></pre><p><strong>⚠状态码的范围0-255⚠</strong></p><pre><code class="hljs shell">sample 02 加十器（大于255就会报错）<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>func1()&#123;read -p &quot;请输入一个数字:&quot; valueecho &quot;正在进行加十运算：&quot;return $[ $value + 10 ]&#125;echo &quot;调用函数&quot;func1echo &quot;运算之后的值：$?&quot;</code></pre><p><strong>使用函数输出</strong></p><pre><code class="hljs shell">sample 03 函数输出<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>func1()&#123;read -p &quot;请输入一个数字:&quot; valueecho &quot;正在进行加十运算：&quot;&#125;echo &quot;调用函数&quot;result=$(func1)echo &quot;今天天气很好&quot;echo &quot;运算之后的结果：$result&quot;</code></pre><h4 id="2-函数中的变量"><a href="#2-函数中的变量" class="headerlink" title="2.函数中的变量"></a>2.函数中的变量</h4><p><strong>在函数中使用变量，向函数传递参数</strong></p><pre><code class="hljs shell">sample 04 通过位置传参<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>func1()&#123;echo $[ $1 + $2 ]&#125;result=$(func1 100 200)echo $result</code></pre><p><strong>在函数中处理变量</strong></p><ul><li>全局变量</li></ul><p><strong>脚本任何地方定义的变量都是全局变量</strong></p><pre><code class="hljs shell">sample 05<span class="hljs-meta">#</span><span class="bash">！/bin/bash</span>func1()&#123;value=$[ $val + 2 ]&#125;read -p &quot;输入一个数字：&quot; valfunc1echo $value</code></pre><pre><div class="caption"><span>06</span></div><code class="hljs sample">sample 06 全局变量的弊端：比大小#!&#x2F;bin&#x2F;bashfunc1()&#123;temp&#x3D;$[ $value + 5]result&#x3D;$[ $temp * 2 ]&#125;temp&#x3D;4value&#x3D;6func1echo &quot;函数结果$result&quot;if [  $temp -gt $value ]thenecho &quot;temp larger&quot;elseecho &quot;value larger&quot;fi</code></pre><ul><li>局部变量</li></ul><p><strong>局部变量 local关键字声明的变量</strong></p><pre><code class="hljs shell">sample 07 局部变量<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>func1()&#123;local temp=$[ $value + 5]result=$[ $temp * 2 ]&#125;temp=4value=6func1echo &quot;函数结果$result&quot;if [  $temp -gt $value ]thenecho &quot;temp larger&quot;elseecho &quot;value larger&quot;fi</code></pre><h4 id="3、数组"><a href="#3、数组" class="headerlink" title="3、数组"></a>3、数组</h4><pre><code class="hljs shell">sample 08 简单数组输出<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>array=(1 2 3 4)echo $&#123;array[*]&#125;</code></pre><pre><code class="hljs shell">sample 09  数组的读入<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>func1()&#123;temparray=$@echo &quot;数组的值为：$temparray&quot;&#125;array=(1 2 3 4)func1 $&#123;array[*]&#125;</code></pre><pre><code class="hljs shell">sample 10 数组的输出<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>func1()&#123;array=(1 2 3 4 5 6)echo $&#123;array[*]&#125;&#125;result=$(func1)echo $result</code></pre><h4 id="4-函数的递归"><a href="#4-函数的递归" class="headerlink" title="4.函数的递归"></a>4.函数的递归</h4><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>func1()&#123;if [  $1 -eq 1 ]thenecho 1elselocal temp=$[ $1 - 1 ]local result=$(func1 $temp)echo $[$result * $1]&#125;read -p &quot;请输入一个数字：&quot; valueresult=$(func1 $value)echo $result</code></pre><h3 id="十七、创建一个菜单"><a href="#十七、创建一个菜单" class="headerlink" title="十七、创建一个菜单"></a>十七、创建一个菜单</h3><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span>func1()&#123;df -hl&#125;func2()&#123;lastlog -b 60&#125;func3()&#123;pstree&#125;clearecho -e &quot;\t1. Display disk space&quot; echo -e &quot;\t2. Display logged information&quot; echo -e &quot;\t3. Display pstree&quot; echo -e &quot;\t0. exit program&quot;read -n 1 -p &quot;请输入您的选项：&quot; optioncase $option in0)break;;1)func1;;2)func2;;3)func3;;esac</code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>[NULL]<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>shell</tag>
      
      <tag>编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python词云剔除非有效词</title>
    <link href="/2020/07/20/python/python%E8%AF%8D%E4%BA%91%E5%89%94%E9%99%A4%E9%9D%9E%E6%9C%89%E6%95%88%E8%AF%8D/"/>
    <url>/2020/07/20/python/python%E8%AF%8D%E4%BA%91%E5%89%94%E9%99%A4%E9%9D%9E%E6%9C%89%E6%95%88%E8%AF%8D/</url>
    
    <content type="html"><![CDATA[<h2 id="一、Why"><a href="#一、Why" class="headerlink" title="一、Why!"></a>一、Why!</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123205628.png" alt=""></p><p>  之前做了基于python的青少年沉迷网络调查报告，最后用的是jieba分词和wordcloud进行可视化分析，但是结果图由于爬取的内容不精确，有一些不相关词也被放入可视化中，所以此次想把那个内容再重新可视化词云分析，剔除参杂其中的无用词！</p><h2 id="二、What"><a href="#二、What" class="headerlink" title="二、What!"></a>二、What!</h2><p>原源码如下：<br><pre><code class="hljs python"><span class="hljs-comment"># 导入词云制作库wordcloud和中文分词库jieba</span><span class="hljs-keyword">import</span> jieba<span class="hljs-keyword">import</span> wordcloud<span class="hljs-comment"># 导入imageio库中的imread函数，并用这个函数读取本地图片，作为词云形状图片</span><span class="hljs-keyword">import</span> imageiomk = imageio.imread(<span class="hljs-string">&quot;未标题-1.png&quot;</span>)<span class="hljs-comment"># 构建并配置词云对象w，注意要加scale参数，提高清晰度</span>w = wordcloud.WordCloud(width=<span class="hljs-number">1000</span>,                        height=<span class="hljs-number">700</span>,                        background_color=<span class="hljs-string">&#x27;white&#x27;</span>,                        font_path=<span class="hljs-string">&#x27;msyh.ttc&#x27;</span>,                        mask=mk,                        scale=<span class="hljs-number">15</span>)<span class="hljs-comment"># 对来自外部文件的文本进行中文分词，得到string</span>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;提取到的第五列数据.txt&#x27;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>)txt = f.read()txtlist = jieba.lcut(txt)string = <span class="hljs-string">&quot; &quot;</span>.join(txtlist)<span class="hljs-comment"># 将string变量传入w的generate()方法，给词云输入文字</span>w.generate(string)<span class="hljs-comment"># 将词云图片导出到当前文件夹</span>w.to_file(<span class="hljs-string">&#x27;青少年沉迷网络01.png&#x27;</span>)</code></pre><br><span class="label label-primary"><br>对上方源码分析得17-21行为数据读取分词操作<br>具体步骤如下：<br>18行：以utf-8读取文件<br>19行：将读取的内容赋值给txt<br>20行：利用jieba库进行分词，以列表形式存储<br>21行：以空格连接列表内的每一个元素<br>所以可以在第20-21行之间添加一个方法进行剔除</span></p><h2 id="三、How"><a href="#三、How" class="headerlink" title="三、How!"></a>三、How!</h2><p><span class="label label-primary">test.py</span><br><pre><code class="hljs python"><span class="hljs-keyword">import</span> jieba<span class="hljs-built_in">list</span>=[]txt=<span class="hljs-string">&quot;我们总是在意别人的言论，不敢做自己喜欢的事情，害怕淹没在飞短流长之中。其实没有人真的在乎你在想什么，不要过高估量自己在他人心目中的地位。被别人议论甚至误解都没啥，谁人不被别人说，谁人背后不说人，你生活在别人的眼神里，就迷失在自己的心路上。人和人之间就是一份情，一份缘，你珍惜我，我会加倍奉还，你不在意我，就让一切归零！&quot;</span>txtlist = jieba.lcut(txt)print(txtlist)words=[<span class="hljs-string">&quot;你&quot;</span>,<span class="hljs-string">&quot;人&quot;</span>,<span class="hljs-string">&quot;我&quot;</span>,<span class="hljs-string">&quot;,&quot;</span>,<span class="hljs-string">&quot;。&quot;</span>,<span class="hljs-string">&quot;的&quot;</span>,<span class="hljs-string">&quot;，&quot;</span>]<span class="hljs-keyword">for</span> word <span class="hljs-keyword">in</span> txtlist:   <span class="hljs-keyword">if</span> word <span class="hljs-keyword">in</span> words:      <span class="hljs-keyword">continue</span>   <span class="hljs-keyword">else</span>:      <span class="hljs-built_in">list</span>.append(word)print(<span class="hljs-built_in">list</span>)string = <span class="hljs-string">&quot; &quot;</span>.join(<span class="hljs-built_in">list</span>)print(string)</code></pre><br><span class="label label-primary">结果如下：</span><br><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>========= RESTART: D:\桌面\Python\拓展\weiboSpider-master\关键词爬取\剔除词test.py =========Building prefix <span class="hljs-built_in">dict</span> <span class="hljs-keyword">from</span> the default dictionary ...Loading model <span class="hljs-keyword">from</span> cache C:\Users\Bai\AppData\Local\Temp\jieba.cacheLoading model cost <span class="hljs-number">0.594</span> seconds.Prefix <span class="hljs-built_in">dict</span> has been built successfully.[<span class="hljs-string">&#x27;我们&#x27;</span>, <span class="hljs-string">&#x27;总是&#x27;</span>, <span class="hljs-string">&#x27;在意&#x27;</span>, <span class="hljs-string">&#x27;别人&#x27;</span>, <span class="hljs-string">&#x27;的&#x27;</span>, <span class="hljs-string">&#x27;言论&#x27;</span>, <span class="hljs-string">&#x27;，&#x27;</span>, <span class="hljs-string">&#x27;不敢&#x27;</span>, <span class="hljs-string">&#x27;做&#x27;</span>, <span class="hljs-string">&#x27;自己&#x27;</span>, <span class="hljs-string">&#x27;喜欢&#x27;</span>, <span class="hljs-string">&#x27;的&#x27;</span>, <span class="hljs-string">&#x27;事情&#x27;</span>, <span class="hljs-string">&#x27;，&#x27;</span>, <span class="hljs-string">&#x27;害怕&#x27;</span>, <span class="hljs-string">&#x27;淹没&#x27;</span>, <span class="hljs-string">&#x27;在&#x27;</span>, <span class="hljs-string">&#x27;飞短流长&#x27;</span>, <span class="hljs-string">&#x27;之中&#x27;</span>, <span class="hljs-string">&#x27;。&#x27;</span>, <span class="hljs-string">&#x27;其实&#x27;</span>, <span class="hljs-string">&#x27;没有&#x27;</span>, <span class="hljs-string">&#x27;人&#x27;</span>, <span class="hljs-string">&#x27;真的&#x27;</span>, <span class="hljs-string">&#x27;在乎&#x27;</span>, <span class="hljs-string">&#x27;你&#x27;</span>, <span class="hljs-string">&#x27;在&#x27;</span>, <span class="hljs-string">&#x27;想&#x27;</span>, <span class="hljs-string">&#x27;什么&#x27;</span>, <span class="hljs-string">&#x27;，&#x27;</span>, <span class="hljs-string">&#x27;不要&#x27;</span>, <span class="hljs-string">&#x27;过高&#x27;</span>, <span class="hljs-string">&#x27;估量&#x27;</span>, <span class="hljs-string">&#x27;自己&#x27;</span>, <span class="hljs-string">&#x27;在&#x27;</span>, <span class="hljs-string">&#x27;他人&#x27;</span>, <span class="hljs-string">&#x27;心目&#x27;</span>, <span class="hljs-string">&#x27;中&#x27;</span>, <span class="hljs-string">&#x27;的&#x27;</span>, <span class="hljs-string">&#x27;地位&#x27;</span>, <span class="hljs-string">&#x27;。&#x27;</span>, <span class="hljs-string">&#x27;被&#x27;</span>, <span class="hljs-string">&#x27;别人&#x27;</span>, <span class="hljs-string">&#x27;议论&#x27;</span>, <span class="hljs-string">&#x27;甚至&#x27;</span>, <span class="hljs-string">&#x27;误解&#x27;</span>, <span class="hljs-string">&#x27;都&#x27;</span>, <span class="hljs-string">&#x27;没&#x27;</span>, <span class="hljs-string">&#x27;啥&#x27;</span>, <span class="hljs-string">&#x27;，&#x27;</span>, <span class="hljs-string">&#x27;谁&#x27;</span>, <span class="hljs-string">&#x27;人&#x27;</span>, <span class="hljs-string">&#x27;不&#x27;</span>, <span class="hljs-string">&#x27;被&#x27;</span>, <span class="hljs-string">&#x27;别人&#x27;</span>, <span class="hljs-string">&#x27;说&#x27;</span>, <span class="hljs-string">&#x27;，&#x27;</span>, <span class="hljs-string">&#x27;谁&#x27;</span>, <span class="hljs-string">&#x27;人&#x27;</span>, <span class="hljs-string">&#x27;背后&#x27;</span>, <span class="hljs-string">&#x27;不&#x27;</span>, <span class="hljs-string">&#x27;说&#x27;</span>, <span class="hljs-string">&#x27;人&#x27;</span>, <span class="hljs-string">&#x27;，&#x27;</span>, <span class="hljs-string">&#x27;你&#x27;</span>, <span class="hljs-string">&#x27;生活&#x27;</span>, <span class="hljs-string">&#x27;在&#x27;</span>, <span class="hljs-string">&#x27;别人&#x27;</span>, <span class="hljs-string">&#x27;的&#x27;</span>, <span class="hljs-string">&#x27;眼神&#x27;</span>, <span class="hljs-string">&#x27;里&#x27;</span>, <span class="hljs-string">&#x27;，&#x27;</span>, <span class="hljs-string">&#x27;就&#x27;</span>, <span class="hljs-string">&#x27;迷失&#x27;</span>, <span class="hljs-string">&#x27;在&#x27;</span>, <span class="hljs-string">&#x27;自己&#x27;</span>, <span class="hljs-string">&#x27;的&#x27;</span>, <span class="hljs-string">&#x27;心&#x27;</span>, <span class="hljs-string">&#x27;路上&#x27;</span>, <span class="hljs-string">&#x27;。&#x27;</span>, <span class="hljs-string">&#x27;人&#x27;</span>, <span class="hljs-string">&#x27;和&#x27;</span>, <span class="hljs-string">&#x27;人&#x27;</span>, <span class="hljs-string">&#x27;之间&#x27;</span>, <span class="hljs-string">&#x27;就是&#x27;</span>, <span class="hljs-string">&#x27;一份&#x27;</span>, <span class="hljs-string">&#x27;情&#x27;</span>, <span class="hljs-string">&#x27;，&#x27;</span>, <span class="hljs-string">&#x27;一份&#x27;</span>, <span class="hljs-string">&#x27;缘&#x27;</span>, <span class="hljs-string">&#x27;，&#x27;</span>, <span class="hljs-string">&#x27;你&#x27;</span>, <span class="hljs-string">&#x27;珍惜&#x27;</span>, <span class="hljs-string">&#x27;我&#x27;</span>, <span class="hljs-string">&#x27;，&#x27;</span>, <span class="hljs-string">&#x27;我会&#x27;</span>, <span class="hljs-string">&#x27;加倍&#x27;</span>, <span class="hljs-string">&#x27;奉还&#x27;</span>, <span class="hljs-string">&#x27;，&#x27;</span>, <span class="hljs-string">&#x27;你&#x27;</span>, <span class="hljs-string">&#x27;不在意&#x27;</span>, <span class="hljs-string">&#x27;我&#x27;</span>, <span class="hljs-string">&#x27;，&#x27;</span>, <span class="hljs-string">&#x27;就让&#x27;</span>, <span class="hljs-string">&#x27;一切&#x27;</span>, <span class="hljs-string">&#x27;归零&#x27;</span>, <span class="hljs-string">&#x27;！&#x27;</span>][<span class="hljs-string">&#x27;我们&#x27;</span>, <span class="hljs-string">&#x27;总是&#x27;</span>, <span class="hljs-string">&#x27;在意&#x27;</span>, <span class="hljs-string">&#x27;别人&#x27;</span>, <span class="hljs-string">&#x27;言论&#x27;</span>, <span class="hljs-string">&#x27;不敢&#x27;</span>, <span class="hljs-string">&#x27;做&#x27;</span>, <span class="hljs-string">&#x27;自己&#x27;</span>, <span class="hljs-string">&#x27;喜欢&#x27;</span>, <span class="hljs-string">&#x27;事情&#x27;</span>, <span class="hljs-string">&#x27;害怕&#x27;</span>, <span class="hljs-string">&#x27;淹没&#x27;</span>, <span class="hljs-string">&#x27;在&#x27;</span>, <span class="hljs-string">&#x27;飞短流长&#x27;</span>, <span class="hljs-string">&#x27;之中&#x27;</span>, <span class="hljs-string">&#x27;其实&#x27;</span>, <span class="hljs-string">&#x27;没有&#x27;</span>, <span class="hljs-string">&#x27;真的&#x27;</span>, <span class="hljs-string">&#x27;在乎&#x27;</span>, <span class="hljs-string">&#x27;在&#x27;</span>, <span class="hljs-string">&#x27;想&#x27;</span>, <span class="hljs-string">&#x27;什么&#x27;</span>, <span class="hljs-string">&#x27;不要&#x27;</span>, <span class="hljs-string">&#x27;过高&#x27;</span>, <span class="hljs-string">&#x27;估量&#x27;</span>, <span class="hljs-string">&#x27;自己&#x27;</span>, <span class="hljs-string">&#x27;在&#x27;</span>, <span class="hljs-string">&#x27;他人&#x27;</span>, <span class="hljs-string">&#x27;心目&#x27;</span>, <span class="hljs-string">&#x27;中&#x27;</span>, <span class="hljs-string">&#x27;地位&#x27;</span>, <span class="hljs-string">&#x27;被&#x27;</span>, <span class="hljs-string">&#x27;别人&#x27;</span>, <span class="hljs-string">&#x27;议论&#x27;</span>, <span class="hljs-string">&#x27;甚至&#x27;</span>, <span class="hljs-string">&#x27;误解&#x27;</span>, <span class="hljs-string">&#x27;都&#x27;</span>, <span class="hljs-string">&#x27;没&#x27;</span>, <span class="hljs-string">&#x27;啥&#x27;</span>, <span class="hljs-string">&#x27;谁&#x27;</span>, <span class="hljs-string">&#x27;不&#x27;</span>, <span class="hljs-string">&#x27;被&#x27;</span>, <span class="hljs-string">&#x27;别人&#x27;</span>, <span class="hljs-string">&#x27;说&#x27;</span>, <span class="hljs-string">&#x27;谁&#x27;</span>, <span class="hljs-string">&#x27;背后&#x27;</span>, <span class="hljs-string">&#x27;不&#x27;</span>, <span class="hljs-string">&#x27;说&#x27;</span>, <span class="hljs-string">&#x27;生活&#x27;</span>, <span class="hljs-string">&#x27;在&#x27;</span>, <span class="hljs-string">&#x27;别人&#x27;</span>, <span class="hljs-string">&#x27;眼神&#x27;</span>, <span class="hljs-string">&#x27;里&#x27;</span>, <span class="hljs-string">&#x27;就&#x27;</span>, <span class="hljs-string">&#x27;迷失&#x27;</span>, <span class="hljs-string">&#x27;在&#x27;</span>, <span class="hljs-string">&#x27;自己&#x27;</span>, <span class="hljs-string">&#x27;心&#x27;</span>, <span class="hljs-string">&#x27;路上&#x27;</span>, <span class="hljs-string">&#x27;和&#x27;</span>, <span class="hljs-string">&#x27;之间&#x27;</span>, <span class="hljs-string">&#x27;就是&#x27;</span>, <span class="hljs-string">&#x27;一份&#x27;</span>, <span class="hljs-string">&#x27;情&#x27;</span>, <span class="hljs-string">&#x27;一份&#x27;</span>, <span class="hljs-string">&#x27;缘&#x27;</span>, <span class="hljs-string">&#x27;珍惜&#x27;</span>, <span class="hljs-string">&#x27;我会&#x27;</span>, <span class="hljs-string">&#x27;加倍&#x27;</span>, <span class="hljs-string">&#x27;奉还&#x27;</span>, <span class="hljs-string">&#x27;不在意&#x27;</span>, <span class="hljs-string">&#x27;就让&#x27;</span>, <span class="hljs-string">&#x27;一切&#x27;</span>, <span class="hljs-string">&#x27;归零&#x27;</span>, <span class="hljs-string">&#x27;！&#x27;</span>]我们 总是 在意 别人 言论 不敢 做 自己 喜欢 事情 害怕 淹没 在 飞短流长 之中 其实 没有 真的 在乎 在 想 什么 不要 过高 估量 自己 在 他人 心目 中 地位 被 别人 议论 甚至 误解 都 没 啥 谁 不 被 别人 说 谁 背后 不 说 生活 在 别人 眼神 里 就 迷失 在 自己 心 路上 和 之间 就是 一份 情 一份 缘 珍惜 我会 加倍 奉还 不在意 就让 一切 归零 ！</code></pre></p><h2 id="四、result"><a href="#四、result" class="headerlink" title="四、result!"></a>四、result!</h2><p><span class="label label-primary">源码如下：</span><br><pre><code class="hljs python"><span class="hljs-comment"># 导入词云制作库wordcloud和中文分词库jieba</span><span class="hljs-keyword">import</span> jieba<span class="hljs-keyword">import</span> wordcloud<span class="hljs-comment"># 导入imageio库中的imread函数，并用这个函数读取本地图片，作为词云形状图片</span><span class="hljs-keyword">import</span> imageiomk = imageio.imread(<span class="hljs-string">&quot;未标题-1.png&quot;</span>)<span class="hljs-built_in">list</span>=[]<span class="hljs-comment"># 构建并配置词云对象w，注意要加stopwords集合参数，将不想展示在词云中的词放在stopwords集合里，这里去掉“曹操”和“孔明”两个词</span>w = wordcloud.WordCloud(width=<span class="hljs-number">1000</span>,                        height=<span class="hljs-number">700</span>,                        background_color=<span class="hljs-string">&#x27;white&#x27;</span>,                        font_path=<span class="hljs-string">&#x27;msyh.ttc&#x27;</span>,                        mask=mk,                        scale=<span class="hljs-number">5</span>,                        <span class="hljs-comment">#contour_width=1,</span>                        <span class="hljs-comment">#contour_color=&quot;black&quot;</span>                        )<span class="hljs-comment"># 对来自外部文件的文本进行中文分词，得到string</span>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;提取到的第五列数据.txt&#x27;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>)txt = f.read()txtlist = jieba.lcut(txt)words=[<span class="hljs-string">&quot;收起&quot;</span>,<span class="hljs-string">&quot;全文&quot;</span>,<span class="hljs-string">&quot;所以&quot;</span>,<span class="hljs-string">&quot;多少&quot;</span>,<span class="hljs-string">&quot;路过&quot;</span>,<span class="hljs-string">&quot;,&quot;</span>,<span class="hljs-string">&quot;，&quot;</span>,<span class="hljs-string">&quot;.&quot;</span>,<span class="hljs-string">&quot;。&quot;</span>,<span class="hljs-string">&quot;[&quot;</span>,<span class="hljs-string">&quot;]&quot;</span>,<span class="hljs-string">&quot;【&quot;</span>,<span class="hljs-string">&quot;】&quot;</span>]<span class="hljs-keyword">for</span> word <span class="hljs-keyword">in</span> txtlist:   <span class="hljs-keyword">if</span> word <span class="hljs-keyword">in</span> words:      <span class="hljs-keyword">continue</span>   <span class="hljs-keyword">else</span>:      <span class="hljs-built_in">list</span>.append(word)print(<span class="hljs-built_in">list</span>)string = <span class="hljs-string">&quot; &quot;</span>.join(<span class="hljs-built_in">list</span>)<span class="hljs-comment"># 将string变量传入w的generate()方法，给词云输入文字</span>w.generate(string)<span class="hljs-comment"># 将词云图片导出到当前文件夹</span>w.to_file(<span class="hljs-string">&#x27;不信你不出来.png&#x27;</span>)print(<span class="hljs-string">&quot;finish&quot;</span>)</code></pre><br><span class="label label-primary">结果对比：<br>很容易看出：收起全文没了</span><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123205628.png" alt=""><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123212010.png" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>[NULL]<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>爬虫</tag>
      
      <tag>词云</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于Python的防网络沉迷相关信息获取</title>
    <link href="/2020/07/19/python/%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E9%98%B2%E7%BD%91%E7%BB%9C%E6%B2%89%E8%BF%B7%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96/"/>
    <url>/2020/07/19/python/%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E9%98%B2%E7%BD%91%E7%BB%9C%E6%B2%89%E8%BF%B7%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96/</url>
    
    <content type="html"><![CDATA[<h2 id="1-程序描述"><a href="#1-程序描述" class="headerlink" title="1.程序描述"></a>1.程序描述</h2><p class="note note-primary">基于Python网络爬虫技术，在一些门户网站或社交网站爬取一些关于网络沉迷的案例、图片，以此为例撰写一篇关于防止网络沉迷的论文，可以论述怎样借助于Python爬虫技术实现相关内容的获取，也可以基于所编写Python爬虫程序获取的图片、案例或者文字信息，撰写网络沉迷的危害，以及怎样防止网络沉迷。</p><h2 id="2-程序设计"><a href="#2-程序设计" class="headerlink" title="2.程序设计"></a>2.程序设计</h2><h3 id="2-1-设计思路"><a href="#2-1-设计思路" class="headerlink" title="2.1 设计思路"></a>2.1 设计思路</h3><p><span class="label label-primary">1.借助 selenium 爬虫爬取网上课堂以来的微博有关“青少年沉迷网络”的话题的相关动态。</span></p><p><span class="label label-primary">2.借助 xlrd 模块提取爬取的内容。</span></p><p><span class="label label-primary">3.借助词云wordcloud 和 jieba 模块进行关键词分析。</span></p><h3 id="2-2-程序代码"><a href="#2-2-程序代码" class="headerlink" title="2.2 程序代码"></a>2.2 程序代码</h3><p><span class="label label-primary">代码一借助 selenium 自动化提取 “青少年沉迷网络” 的动态</span>    [3]</p><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><span class="hljs-string">&quot;&quot;&quot;</span><span class="hljs-string">Created on 2018/11/27 下午 1:03</span><span class="hljs-string"></span><span class="hljs-string">@author: FeiTao</span><span class="hljs-string">@Email: feitao_sydx@163.com</span><span class="hljs-string">@Software: PyCharm</span><span class="hljs-string">&quot;&quot;&quot;</span><span class="hljs-keyword">import</span> time<span class="hljs-keyword">import</span> datetime<span class="hljs-keyword">import</span> re<span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<span class="hljs-keyword">from</span> selenium.webdriver.common.keys <span class="hljs-keyword">import</span> Keys<span class="hljs-keyword">import</span> xlwt<span class="hljs-comment"># 先调用无界面浏览器PhantomJS或Firefox</span><span class="hljs-comment"># driver = webdriver.PhantomJS()</span><span class="hljs-comment"># driver = webdriver.Firefox()</span>driver = webdriver.Chrome()<span class="hljs-comment"># ********************************************************************************</span><span class="hljs-comment">#                            第一步: 登陆login.sina.com</span><span class="hljs-comment">#                     这是一种很好的登陆方式，有可能有输入验证码</span><span class="hljs-comment">#                          登陆之后即可以登陆方式打开网页</span><span class="hljs-comment"># ********************************************************************************</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">LoginWeibo</span>(<span class="hljs-params">username, password</span>):</span>    <span class="hljs-keyword">try</span>:        <span class="hljs-comment"># 输入用户名/密码登录</span>        print(<span class="hljs-string">&#x27;准备登陆Weibo.cn网站...&#x27;</span>)        driver.get(<span class="hljs-string">&quot;http://login.sina.com.cn/&quot;</span>)        elem_user = driver.find_element_by_name(<span class="hljs-string">&quot;username&quot;</span>)        elem_user.send_keys(username)  <span class="hljs-comment"># 用户名</span>        elem_pwd = driver.find_element_by_name(<span class="hljs-string">&quot;password&quot;</span>)        elem_pwd.send_keys(password)  <span class="hljs-comment"># 密码</span>        elem_sub = driver.find_element_by_xpath(<span class="hljs-string">&quot;//input[@class=&#x27;W_btn_a btn_34px&#x27;]&quot;</span>)        elem_sub.click()  <span class="hljs-comment"># 点击登陆 因无name属性</span>        <span class="hljs-keyword">try</span>:            <span class="hljs-comment"># 输入验证码</span>            time.sleep(<span class="hljs-number">10</span>)            elem_sub.click()        <span class="hljs-keyword">except</span>:            <span class="hljs-comment"># 不用输入验证码</span>            <span class="hljs-keyword">pass</span>        <span class="hljs-comment"># 获取Coockie 推荐资料：http://www.cnblogs.com/fnng/p/3269450.html</span>        print(<span class="hljs-string">&#x27;Crawl in &#x27;</span>, driver.current_url)        print(<span class="hljs-string">&#x27;输出Cookie键值对信息:&#x27;</span>)        <span class="hljs-keyword">for</span> cookie <span class="hljs-keyword">in</span> driver.get_cookies():            print(cookie)            <span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> cookie:                print(key, cookie[key])        print(<span class="hljs-string">&#x27;登陆成功...&#x27;</span>)    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:        print(<span class="hljs-string">&quot;Error: &quot;</span>, e)    <span class="hljs-keyword">finally</span>:        print(<span class="hljs-string">&#x27;End LoginWeibo!\n&#x27;</span>)<span class="hljs-comment"># ********************************************************************************</span><span class="hljs-comment">#                  第二步: 访问http://s.weibo.com/页面搜索结果</span><span class="hljs-comment">#               输入关键词、时间范围，得到所有微博信息、博主信息等</span><span class="hljs-comment">#                     考虑没有搜索结果、翻页效果的情况</span><span class="hljs-comment"># ********************************************************************************</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">GetSearchContent</span>(<span class="hljs-params">key</span>):</span>    driver.get(<span class="hljs-string">&quot;http://s.weibo.com/&quot;</span>)    print(<span class="hljs-string">&#x27;搜索热点主题：&#x27;</span>)    <span class="hljs-comment"># 输入关键词并点击搜索</span>    item_inp = driver.find_element_by_xpath(<span class="hljs-string">&quot;//input[@type=&#x27;text&#x27;]&quot;</span>)    <span class="hljs-comment">#item_inp = driver.find_element_by_xpath(&quot;//*[@id=&#x27;pl_homepage_search&#x27;]/div/div[2]/div/input&quot;)</span>    item_inp.send_keys(key)    item_inp.send_keys(Keys.RETURN)  <span class="hljs-comment"># 采用点击回车直接搜索</span>    time.sleep(<span class="hljs-number">5</span>)    <span class="hljs-comment"># 获取搜索词的URL，用于后期按时间查询的URL拼接</span>    current_url = driver.current_url    current_url = current_url.split(<span class="hljs-string">&#x27;&amp;&#x27;</span>)[<span class="hljs-number">0</span>]  <span class="hljs-comment"># http://s.weibo.com/weibo/%25E7%258E%2589%25E6%25A0%2591%25E5%259C%25B0%25E9%259C%2587</span>    <span class="hljs-keyword">global</span> start_stamp    <span class="hljs-keyword">global</span> page    <span class="hljs-comment"># 需要抓取的开始和结束日期</span>    start_date = datetime.datetime(<span class="hljs-number">2020</span>, <span class="hljs-number">2</span>, <span class="hljs-number">25</span>)    end_date = datetime.datetime(<span class="hljs-number">2020</span>, <span class="hljs-number">5</span>, <span class="hljs-number">24</span>)    delta_date = datetime.timedelta(days=<span class="hljs-number">1</span>)    <span class="hljs-comment"># 需要抓取的地区   37:2代表山东青岛</span>    <span class="hljs-comment">#region = &#x27;custom:37:2&#x27;</span>    <span class="hljs-comment"># 每次抓取一天的数据</span>    start_stamp = start_date    end_stamp = start_date + delta_date    <span class="hljs-keyword">global</span> outfile    <span class="hljs-keyword">global</span> sheet    outfile = xlwt.Workbook(encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>)    <span class="hljs-keyword">while</span> end_stamp &lt;= end_date:        page = <span class="hljs-number">1</span>        <span class="hljs-comment"># 每一天使用一个sheet存储数据</span>        sheet = outfile.add_sheet(start_stamp.strftime(<span class="hljs-string">&quot;%Y-%m-%d-%H&quot;</span>))        initXLS()        <span class="hljs-comment"># 通过构建URL实现每一天的查询</span>        <span class="hljs-comment">#url = current_url + &#x27;&amp;typeall=1&amp;suball=1×cope=custom:&#x27; + start_stamp.strftime(</span>        <span class="hljs-comment">#    &quot;%Y-%m-%d-%H&quot;) + &#x27;:&#x27; + end_stamp.strftime(&quot;%Y-%m-%d-%H&quot;) + &#x27;®ion=&#x27;+ region + &#x27;&amp;Refer=g&#x27;</span>        <span class="hljs-comment">#url = &#x27;https://s.weibo.com/weibo?q=%E9%9B%BE%E9%9C%BE®ion=custom:37:2&amp;typeall=1&amp;suball=1×cope=custom:2018-01-01-17:2018-01-01-19&amp;Refer=g&#x27;</span>        url = current_url + <span class="hljs-string">&#x27;&amp;typeall=1&amp;suball=1×cope=custom:&#x27;</span> + start_stamp.strftime(        <span class="hljs-string">&quot;%Y-%m-%d-%H&quot;</span>) + <span class="hljs-string">&#x27;:&#x27;</span> + end_stamp.strftime(<span class="hljs-string">&quot;%Y-%m-%d-%H&quot;</span>) +  <span class="hljs-string">&#x27;&amp;Refer=g&#x27;</span>        driver.get(url)        handlePage()  <span class="hljs-comment"># 处理当前页面内容</span>        start_stamp = end_stamp        end_stamp = end_stamp + delta_date<span class="hljs-comment"># time.sleep(1)</span><span class="hljs-comment"># ********************************************************************************</span><span class="hljs-comment">#                  辅助函数，考虑页面加载完成后得到页面所需要的内容</span><span class="hljs-comment"># ********************************************************************************</span><span class="hljs-comment"># 页面加载完成后，对页面内容进行处理</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">handlePage</span>():</span>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:        <span class="hljs-comment"># 之前认为可能需要sleep等待页面加载，后来发现程序执行会等待页面加载完毕</span>        <span class="hljs-comment"># sleep的原因是对付微博的反爬虫机制，抓取太快可能会判定为机器人，需要输入验证码</span>        time.sleep(<span class="hljs-number">1</span>)        <span class="hljs-comment"># 先行判定是否有内容</span>        <span class="hljs-keyword">if</span> checkContent():            print(<span class="hljs-string">&quot;getContent&quot;</span>)            getContent()            <span class="hljs-comment"># 先行判定是否有下一页按钮</span>            <span class="hljs-keyword">if</span> checkNext():                <span class="hljs-comment"># 拿到下一页按钮</span>                next_page_btn = driver.find_element_by_css_selector(<span class="hljs-string">&quot;#pl_feedlist_index &gt; div.m-page &gt; div &gt; a.next&quot;</span>)                next_page_btn.click()            <span class="hljs-keyword">else</span>:                print(<span class="hljs-string">&quot;no Next&quot;</span>)                <span class="hljs-keyword">break</span>        <span class="hljs-keyword">else</span>:            print(<span class="hljs-string">&quot;no Content&quot;</span>)            <span class="hljs-keyword">break</span><span class="hljs-comment"># 判断页面加载完成后是否有内容</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">checkContent</span>():</span>    <span class="hljs-comment"># 有内容的前提是有“导航条”？错！只有一页内容的也没有导航条</span>    <span class="hljs-comment"># 但没有内容的前提是有“pl_noresult”</span>    <span class="hljs-keyword">try</span>:        driver.find_element_by_xpath(<span class="hljs-string">&quot;//div[@class=&#x27;card card-no-result s-pt20b40&#x27;]&quot;</span>)        flag = <span class="hljs-literal">False</span>    <span class="hljs-keyword">except</span>:        flag = <span class="hljs-literal">True</span>    <span class="hljs-keyword">return</span> flag<span class="hljs-comment"># 判断是否有下一页按钮</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">checkNext</span>():</span>    <span class="hljs-keyword">try</span>:        driver.find_element_by_css_selector(<span class="hljs-string">&quot;#pl_feedlist_index &gt; div.m-page &gt; div &gt; a.next&quot;</span>)        flag = <span class="hljs-literal">True</span>    <span class="hljs-keyword">except</span>:        flag = <span class="hljs-literal">False</span>    <span class="hljs-keyword">return</span> flag<span class="hljs-comment"># 判断是否有展开全文按钮</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">checkqw</span>():</span>    <span class="hljs-keyword">try</span>:        driver.find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;txt&#x27;]/a&quot;</span>)        flag = <span class="hljs-literal">True</span>    <span class="hljs-keyword">except</span>:        flag = <span class="hljs-literal">False</span>    <span class="hljs-keyword">return</span> flag<span class="hljs-comment"># 在添加每一个sheet之后，初始化字段</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">initXLS</span>():</span>    name = [<span class="hljs-string">&#x27;博主昵称&#x27;</span>, <span class="hljs-string">&#x27;博主主页&#x27;</span>, <span class="hljs-string">&#x27;微博认证&#x27;</span>, <span class="hljs-string">&#x27;微博达人&#x27;</span>, <span class="hljs-string">&#x27;微博内容&#x27;</span>, <span class="hljs-string">&#x27;发布位置&#x27;</span>, <span class="hljs-string">&#x27;发布时间&#x27;</span>, <span class="hljs-string">&#x27;微博地址&#x27;</span>, <span class="hljs-string">&#x27;微博来源&#x27;</span>, <span class="hljs-string">&#x27;转发&#x27;</span>, <span class="hljs-string">&#x27;评论&#x27;</span>, <span class="hljs-string">&#x27;赞&#x27;</span>]    <span class="hljs-keyword">global</span> row    <span class="hljs-keyword">global</span> outfile    <span class="hljs-keyword">global</span> sheet    row = <span class="hljs-number">0</span>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(name)):        sheet.write(row, i, name[i])    row = row + <span class="hljs-number">1</span>    outfile.save(<span class="hljs-string">&quot;./crawl_output_YS.xls&quot;</span>)<span class="hljs-comment"># 将dic中的内容写入excel</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">writeXLS</span>(<span class="hljs-params">dic</span>):</span>    <span class="hljs-keyword">global</span> row    <span class="hljs-keyword">global</span> outfile    <span class="hljs-keyword">global</span> sheet    <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> dic:        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(dic[k])):            sheet.write(row, i, dic[k][i])        row = row + <span class="hljs-number">1</span>    outfile.save(<span class="hljs-string">&quot;./crawl_output_YS.xls&quot;</span>)<span class="hljs-comment"># 在页面有内容的前提下，获取内容</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getContent</span>():</span>    <span class="hljs-comment"># 寻找到每一条微博的class</span>    <span class="hljs-keyword">try</span>:        <span class="hljs-comment"># nodes = driver.find_elements_by_xpath(&quot;//div[@class=&#x27;WB_cardwrap S_bg2 clearfix&#x27;]&quot;)</span>        <span class="hljs-comment"># nodes = driver.find_elements_by_xpath(&quot;//div[@class=&#x27;card-wrap&#x27;]&quot;)</span>        nodes = driver.find_elements_by_xpath(<span class="hljs-string">&quot;//div[@class=&#x27;card-wrap&#x27;]/div[@class=&#x27;card&#x27;]&quot;</span>)    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:        print(e)    <span class="hljs-comment"># 在运行过程中微博数==0的情况，可能是微博反爬机制，需要输入验证码</span>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(nodes) == <span class="hljs-number">0</span>:        <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请在微博页面输入验证码！&quot;</span>)        url = driver.current_url        driver.get(url)        getContent()        <span class="hljs-keyword">return</span>    dic = &#123;&#125;    <span class="hljs-keyword">global</span> page    print(start_stamp.strftime(<span class="hljs-string">&quot;%Y-%m-%d-%H&quot;</span>))    print(<span class="hljs-string">&#x27;页数:&#x27;</span>, page)    page = page + <span class="hljs-number">1</span>    print(<span class="hljs-string">&#x27;微博数量&#x27;</span>, <span class="hljs-built_in">len</span>(nodes))    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(nodes)):        dic[i] = []        <span class="hljs-keyword">try</span>:            <span class="hljs-comment"># BZNC = nodes[i].find_element_by_xpath(&quot;.//div[@class=&#x27;feed_content wbcon&#x27;]/a[@class=&#x27;W_texta W_fb&#x27;]&quot;).text</span>            BZNC = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;txt&#x27;]&quot;</span>).get_attribute(<span class="hljs-string">&quot;nick-name&quot;</span>)            <span class="hljs-comment"># print(nodes[2].find_element_by_xpath(&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;txt&#x27;]&quot;).get_attribute(&quot;nick-name&quot;))</span>        <span class="hljs-keyword">except</span>:            BZNC = <span class="hljs-string">&#x27;&#x27;</span>        print(<span class="hljs-string">&#x27;博主昵称:&#x27;</span>, BZNC)        dic[i].append(BZNC)        <span class="hljs-keyword">try</span>:            BZZY = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/div[@class=&#x27;info&#x27;]/div[2]/a&quot;</span>).get_attribute(<span class="hljs-string">&quot;href&quot;</span>)            <span class="hljs-comment"># print(nodes[1].find_element_by_xpath(&quot;//*[@id=&quot;pl_feedlist_index&quot;]/div[2]/div[1]/div/div[1]/div[1]/a&quot;).get_attribute(&quot;href&quot;))</span>            <span class="hljs-comment"># print(nodes[1].find_element_by_css_selector(&quot;#pl_feedlist_index &gt; div:nth-child(2) &gt; div:nth-child(1) &gt; div &gt; div.card-feed &gt; div.avator &gt; a&quot;).get_attribute(&quot;href&quot;))</span>        <span class="hljs-keyword">except</span>:            BZZY = <span class="hljs-string">&#x27;&#x27;</span>        print(<span class="hljs-string">&#x27;博主主页:&#x27;</span>, BZZY)        dic[i].append(BZZY)        <span class="hljs-comment"># 微博官方认证，没有爬取</span>        <span class="hljs-keyword">try</span>:            <span class="hljs-comment"># WBRZ = nodes[i].find_element_by_xpath(&quot;.//div[@class=&#x27;feed_content wbcon&#x27;]/a[@class=&#x27;approve_co&#x27;]&quot;).get_attribute(&#x27;title&#x27;)#若没有认证则不存在节点</span>            WBRZ = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;info&#x27;]/div/a[contains(@title,&#x27;微博&#x27;)]&quot;</span>).get_attribute(<span class="hljs-string">&#x27;title&#x27;</span>) <span class="hljs-comment"># 若没有认证则不存在节点</span>        <span class="hljs-keyword">except</span>:            WBRZ = <span class="hljs-string">&#x27;&#x27;</span>        print(<span class="hljs-string">&#x27;微博认证:&#x27;</span>, WBRZ)        dic[i].append(WBRZ)        <span class="hljs-keyword">try</span>:            <span class="hljs-comment"># WBDR = nodes[i].find_element_by_xpath(&quot;.//div[@class=&#x27;feed_content wbcon&#x27;]/a[@class=&#x27;ico_club&#x27;]&quot;).get_attribute(&#x27;title&#x27;)#若非达人则不存在节点</span>            WBDR = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;feed_content wbcon&#x27;]/a[@class=&#x27;ico_club&#x27;]&quot;</span>).get_attribute(<span class="hljs-string">&#x27;title&#x27;</span>)  <span class="hljs-comment"># 若非达人则不存在节点</span>        <span class="hljs-keyword">except</span>:            WBDR = <span class="hljs-string">&#x27;&#x27;</span>        print(<span class="hljs-string">&#x27;微博达人:&#x27;</span>, WBDR)        dic[i].append(WBDR)        <span class="hljs-comment"># 判断展开全文和网页链接是否存在</span>        <span class="hljs-keyword">try</span>:            nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;txt&#x27;]/a[@action-type=&#x27;fl_unfold&#x27;]&quot;</span>).is_displayed()            flag = <span class="hljs-literal">True</span>        <span class="hljs-keyword">except</span>:            flag = <span class="hljs-literal">False</span>        <span class="hljs-comment"># 获取微博内容</span>        <span class="hljs-keyword">try</span>:            <span class="hljs-keyword">if</span> flag:                nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;txt&#x27;]/a[@action-type=&#x27;fl_unfold&#x27;]&quot;</span>).click()                time.sleep(<span class="hljs-number">1</span>)                WBNR = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[2]&quot;</span>).text.replace(<span class="hljs-string">&quot;\n&quot;</span>,<span class="hljs-string">&quot;&quot;</span>)                <span class="hljs-comment"># 判断发布位置是否存在</span>                <span class="hljs-keyword">try</span>:                    nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;txt&#x27;]/a/i[@class=&#x27;wbicon&#x27;]&quot;</span>).is_displayed()                    flag = <span class="hljs-literal">True</span>                <span class="hljs-keyword">except</span>:                    flag = <span class="hljs-literal">False</span>                <span class="hljs-comment"># 获取微博发布位置</span>                <span class="hljs-keyword">try</span>:                    <span class="hljs-keyword">if</span> flag:                        pattern = nodes[i].find_elements_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[2]/a[i[@class=&#x27;wbicon&#x27;]]&quot;</span>)                        <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(pattern,<span class="hljs-built_in">list</span>):                            text = [p.text <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> pattern]                            FBWZ = [loc <span class="hljs-keyword">for</span> loc <span class="hljs-keyword">in</span> [re.findall(<span class="hljs-string">&#x27;^2(.*$)&#x27;</span>, t) <span class="hljs-keyword">for</span> t <span class="hljs-keyword">in</span> text] <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(loc) &gt; <span class="hljs-number">0</span>][<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]                        <span class="hljs-keyword">else</span>:                            text = pattern.text                            FBWZ = re.findall(<span class="hljs-string">&#x27;^2(.*$)&#x27;</span>,text)[<span class="hljs-number">0</span>]                    <span class="hljs-keyword">else</span>:                        FBWZ = <span class="hljs-string">&#x27;&#x27;</span>                <span class="hljs-keyword">except</span>:                    FBWZ = <span class="hljs-string">&#x27;&#x27;</span>            <span class="hljs-keyword">else</span>:                WBNR = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;txt&#x27;]&quot;</span>).text.replace(<span class="hljs-string">&quot;\n&quot;</span>,<span class="hljs-string">&quot;&quot;</span>)                <span class="hljs-comment"># 判断发布位置是否存在</span>                <span class="hljs-keyword">try</span>:                    nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;txt&#x27;]/a/i[@class=&#x27;wbicon&#x27;]&quot;</span>).is_displayed()                    flag = <span class="hljs-literal">True</span>                <span class="hljs-keyword">except</span>:                    flag = <span class="hljs-literal">False</span>                <span class="hljs-comment"># 获取微博发布位置</span>                <span class="hljs-keyword">try</span>:                    <span class="hljs-keyword">if</span> flag:                        pattern = nodes[i].find_elements_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;txt&#x27;]/a[i[@class=&#x27;wbicon&#x27;]]&quot;</span>)                        <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(pattern,<span class="hljs-built_in">list</span>):                            text = [p.text <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> pattern]                            FBWZ = [loc <span class="hljs-keyword">for</span> loc <span class="hljs-keyword">in</span> [re.findall(<span class="hljs-string">&#x27;^2(.*$)&#x27;</span>, t) <span class="hljs-keyword">for</span> t <span class="hljs-keyword">in</span> text] <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(loc) &gt; <span class="hljs-number">0</span>][<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]                        <span class="hljs-keyword">else</span>:                            text = pattern.text                            FBWZ = re.findall(<span class="hljs-string">&#x27;^2(.*$)&#x27;</span>,text)[<span class="hljs-number">0</span>]                    <span class="hljs-keyword">else</span>:                        FBWZ = <span class="hljs-string">&#x27;&#x27;</span>                <span class="hljs-keyword">except</span>:                    FBWZ = <span class="hljs-string">&#x27;&#x27;</span>        <span class="hljs-keyword">except</span>:            WBNR = <span class="hljs-string">&#x27;&#x27;</span>        print(<span class="hljs-string">&#x27;微博内容:&#x27;</span>, WBNR)        dic[i].append(WBNR)        print(<span class="hljs-string">&#x27;发布位置:&#x27;</span>, FBWZ)        dic[i].append(FBWZ)        <span class="hljs-keyword">try</span>:            <span class="hljs-comment"># FBSJ = nodes[i].find_element_by_xpath(&quot;.//div[@class=&#x27;feed_from W_textb&#x27;]/a[@class=&#x27;W_textb&#x27;]&quot;).text</span>            FBSJ = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;from&#x27;]/a[1]&quot;</span>).text        <span class="hljs-keyword">except</span>:            FBSJ = <span class="hljs-string">&#x27;&#x27;</span>        print(<span class="hljs-string">&#x27;发布时间:&#x27;</span>, FBSJ)        dic[i].append(FBSJ)        <span class="hljs-keyword">try</span>:            <span class="hljs-comment"># WBDZ = nodes[i].find_element_by_xpath(&quot;.//div[@class=&#x27;feed_from W_textb&#x27;]/a[@class=&#x27;W_textb&#x27;]&quot;).get_attribute(&quot;href&quot;)</span>            WBDZ = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;from&#x27;]/a[1]&quot;</span>).get_attribute(<span class="hljs-string">&quot;href&quot;</span>)        <span class="hljs-keyword">except</span>:            WBDZ = <span class="hljs-string">&#x27;&#x27;</span>        print(<span class="hljs-string">&#x27;微博地址:&#x27;</span>, WBDZ)        dic[i].append(WBDZ)        <span class="hljs-keyword">try</span>:            WBLY = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;from&#x27;]/a[2]&quot;</span>).text        <span class="hljs-keyword">except</span>:            WBLY = <span class="hljs-string">&#x27;&#x27;</span>        print(<span class="hljs-string">&#x27;微博来源:&#x27;</span>, WBLY)        dic[i].append(WBLY)        <span class="hljs-keyword">try</span>:            ZF_TEXT = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//a[@action-type=&#x27;feed_list_forward&#x27;]&quot;</span>).text            <span class="hljs-comment">#            ZF_TEXT = nodes[10].find_element_by_xpath(&quot;.//a[@action-type=&#x27;feed_list_forward&#x27;]&quot;).text</span>            <span class="hljs-comment">#            ZF_TEXT.split(&#x27; &#x27;)[1]</span>            <span class="hljs-keyword">if</span> ZF_TEXT == <span class="hljs-string">&#x27;转发&#x27;</span>:                ZF = <span class="hljs-number">0</span>            <span class="hljs-keyword">else</span>:                ZF = <span class="hljs-built_in">int</span>(ZF_TEXT.split(<span class="hljs-string">&#x27; &#x27;</span>)[<span class="hljs-number">1</span>])        <span class="hljs-keyword">except</span>:            ZF = <span class="hljs-number">0</span>        print(<span class="hljs-string">&#x27;转发:&#x27;</span>, ZF)        dic[i].append(ZF)        <span class="hljs-keyword">try</span>:            <span class="hljs-comment"># PL_TEXT = nodes[i].find_element_by_xpath(&quot;.//a[@action-type=&#x27;feed_list_comment&#x27;]//em&quot;).text#可能没有em元素</span>            PL_TEXT = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//a[@action-type=&#x27;feed_list_comment&#x27;]&quot;</span>).text  <span class="hljs-comment"># 可能没有em元素</span>            <span class="hljs-comment"># nodes[10].find_element_by_xpath(&quot;.//a[@action-type=&#x27;feed_list_comment&#x27;]&quot;).text</span>            <span class="hljs-keyword">if</span> PL_TEXT == <span class="hljs-string">&#x27;评论&#x27;</span>:                PL = <span class="hljs-number">0</span>            <span class="hljs-keyword">else</span>:                PL = <span class="hljs-built_in">int</span>(PL_TEXT.split(<span class="hljs-string">&#x27; &#x27;</span>)[<span class="hljs-number">1</span>])        <span class="hljs-keyword">except</span>:            PL = <span class="hljs-number">0</span>        print(<span class="hljs-string">&#x27;评论:&#x27;</span>, PL)        dic[i].append(PL)        <span class="hljs-keyword">try</span>:            ZAN_TEXT = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//a[@action-type=&#x27;feed_list_like&#x27;]//em&quot;</span>).text  <span class="hljs-comment"># 可为空</span>            <span class="hljs-comment"># ZAN_TEXT = nodes[10].find_element_by_xpath(&quot;.//a[@action-type=&#x27;feed_list_like&#x27;]&quot;).text #可为空</span>            <span class="hljs-keyword">if</span> ZAN_TEXT == <span class="hljs-string">&#x27;&#x27;</span>:                ZAN = <span class="hljs-number">0</span>            <span class="hljs-keyword">else</span>:                ZAN = <span class="hljs-built_in">int</span>(ZAN_TEXT)        <span class="hljs-keyword">except</span>:            ZAN = <span class="hljs-number">0</span>        print(<span class="hljs-string">&#x27;赞:&#x27;</span>, ZAN)        dic[i].append(ZAN)        print(<span class="hljs-string">&#x27;\n&#x27;</span>)    <span class="hljs-comment"># 写入Excel</span>    writeXLS(dic)<span class="hljs-comment"># *******************************************************************************</span><span class="hljs-comment">#                                程序入口</span><span class="hljs-comment"># *******************************************************************************</span><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:    <span class="hljs-comment"># 定义变量</span>    username = <span class="hljs-string">&#x27;*************&#x27;</span>  <span class="hljs-comment"># 输入你的用户名</span>    password = <span class="hljs-string">&#x27;*************&#x27;</span>  <span class="hljs-comment"># 输入你的密码</span>    <span class="hljs-comment"># 操作函数</span>    LoginWeibo(username, password)  <span class="hljs-comment"># 登陆微博</span>    <span class="hljs-comment"># 搜索热点微博 爬取评论</span>    key = <span class="hljs-string">&#x27;青少年沉迷网络&#x27;</span>    GetSearchContent(key)</code></pre><p><span class="label label-primary">代码二借助 xlrd 模块提取 xls 的动态栏数据至 txt</span></p><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: UTF-8 -*-</span><span class="hljs-keyword">import</span> xlrd<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">extract</span>(<span class="hljs-params">inpath,f</span>):</span>    date = xlrd.open_workbook(inpath, encoding_override=<span class="hljs-string">&#x27;utf-8&#x27;</span>)    sheets = date.nsheets    print(sheets)    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,sheets):        table = date.sheets()[i]<span class="hljs-comment">#选定表</span>        nrows = table.nrows<span class="hljs-comment">#获取行号</span>        ncols = table.ncols<span class="hljs-comment">#获取列号</span>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, nrows):            alldate = table.row_values(i)<span class="hljs-comment">#循环输出excel表中每一行，即所有数据</span>            result = alldate[<span class="hljs-number">4</span>]<span class="hljs-comment">#取出表中第4列数据</span>            print(result)            f.write(result+<span class="hljs-string">&quot;\n&quot;</span>)inpath = <span class="hljs-string">&#x27;D:\桌面\Python\拓展\weiboSpider-master\关键词爬取\crawl_output_YS.xls&#x27;</span><span class="hljs-comment">#excel文件所在路径</span>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;提取到的第二列数据.txt&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>,encoding=<span class="hljs-string">&quot;utf-8&quot;</span>)extract(inpath,f)f.close()</code></pre><p><span class="label label-primary">代码三借助  jieba 和  wordcloud  模块将提取的动态数据进行分词、可视化操作</span>  [5]</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> jieba<span class="hljs-keyword">import</span> wordcloud<span class="hljs-comment"># 导入imageio库中的imread函数，并用这个函数读取本地图片，作为词云形状图片</span><span class="hljs-keyword">import</span> imageiomk = imageio.imread(<span class="hljs-string">&quot;未标题-1.png&quot;</span>)<span class="hljs-comment"># 构建并配置词云对象w，注意要加stopwords集合参数，将不想展示在词云中的词放在stopwords集合里，这里去掉“曹操”和“孔明”两个词</span>w = wordcloud.WordCloud(width=<span class="hljs-number">1000</span>,                        height=<span class="hljs-number">700</span>,                        background_color=<span class="hljs-string">&#x27;white&#x27;</span>,                        font_path=<span class="hljs-string">&#x27;msyh.ttc&#x27;</span>,                        mask=mk,                        scale=<span class="hljs-number">5</span>                        )<span class="hljs-comment"># 对来自外部文件的文本进行中文分词，得到string</span>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;提取到的第五列数据.txt&#x27;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>)txt = f.read()txtlist = jieba.lcut(txt)string = <span class="hljs-string">&quot; &quot;</span>.join(txtlist)<span class="hljs-comment"># 将string变量传入w的generate()方法，给词云输入文字</span>w.generate(string)<span class="hljs-comment"># 将词云图片导出到当前文件夹</span>w.to_file(<span class="hljs-string">&#x27;青少年沉迷网络01.png&#x27;</span>)</code></pre><h3 id="2-3-运行结果示例"><a href="#2-3-运行结果示例" class="headerlink" title="2.3 运行结果示例"></a>2.3 运行结果示例</h3><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123205744.png" alt=""></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123205628.png" alt=""></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123205835.png" alt=""></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123205838.png" alt=""></p><h2 id="3-论文主体"><a href="#3-论文主体" class="headerlink" title="3.论文主体"></a>3.论文主体</h2><p>通过爬取以及可视化之后我们发现爬取数据中出现频率较高的一些词汇包含以下内容： <strong>青少年沉迷网络<br>收起全文（忽略） 网络 网路 游戏机  光盘 净空法师 阿弥陀佛 毒药 害人 网络游戏 侵蚀 荒废 杀人 荒废学业 色情 害人 祸害 法身 山东 临沂 杨氏模 机构 CCTV 今日说法 焦点访谈 救治 担心 孩子 挽回 千家万户 家长 民族 儿女 中国 文明 健康 强大  必须 严厉 监管 有关部门  腾讯 网吧 政府 支持 推广 公立  时间 观察 请问 央视 新闻 爱</strong></p><p>接下来我将从家庭社会对青少年沉迷网络的态度做法来分析当前未成年人沉迷网络现状，由当前现状来分析为什么青少年会沉迷于网络，最后根据一些自己以及网络上的看法来分析如何做到防止青少年沉迷网络。</p><h3 id="3-1-当前未成年人沉迷网络现状"><a href="#3-1-当前未成年人沉迷网络现状" class="headerlink" title="3.1 当前未成年人沉迷网络现状"></a>3.1 当前未成年人沉迷网络现状</h3><p>当看到上面提取的关键词的时候，我的内心是极其欢喜的，因为在这些关键词里面我感觉到互联网的奇妙，互联网涵盖了几乎这个问问题的所有社会观点，于是我将这些关键词进行分类处理得到以下几类：</p><p><span class="label label-primary"><br>青少年沉迷网络<br>收起全文（忽略）<br>网络 网路 游戏机 光盘 腾讯 网络游戏 色情<br>净空法师 阿弥陀佛<br>毒药  侵蚀 杀人 荒废学业 害人 祸害<br>法身 山东 临沂 杨氏模 机构 CCTV 今日说法 焦点访谈 救治<br>担心 孩子 挽回 千家万户 家长<br>民族 儿女 中国 文明 健康 强大<br>必须 严厉 监管 有关部门  腾讯 网吧 政府 支持 推广 公立<br>时间 观察 请问 央视 新闻 爱</span></p><p><span class="label label-primary">对以上词汇分析可得到一下几点内容：<br>当前青少年沉迷于网络多半是因为网络游戏，随着互联网的普及，各种互联网衍生品也层出不穷，例如色情、网络游戏等，互联网游戏公司也如雨后春笋般的蓬勃发展，也正是因为游戏的不断创作导致很多自制力还不健全的青少年沉浸其中。</span><br><span class="label label-primary">随着青少年沉迷网络的数目不断变大，社会中讨伐互联网的舆论也不断上升，主要表现为：<br>互联网荒废青少年的学业<br>互联网就是毒药，祸害人。<br>互联很多是竞技比赛，打打杀杀导致社会犯罪率增加。</span></p><p><span class="label label-primary">针对青少年沉迷网络，引发社会各种舆论对策：</span></p><p><span class="label label-primary">家长对子女的担心、忧虑。</span><br><span class="label label-primary">以山东临沂戒网中心为代表的所谓”杨氏模救治“机构的建立。</span><br><span class="label label-primary">CCTV、焦点访谈针对未成年人沉迷网络的相关报道。</span><br><span class="label label-primary">政府考虑社会热点以及民族未来开展“健康中国”“文明中国”活动。</span><br><span class="label label-primary">政府推进对网吧、腾讯等平台的监管力度。</span><br><span class="label label-primary">还有一部分人不反对青少年合理利用网络，认为互联网更像是七八十年代的摇滚乐，只是还没有被人们认可，暂时地认为是腐朽青年一代的产品。在他们看来，青少年沉迷网络的根本原因是由于家庭中缺少爱。</span></p><h3 id="3-2-为什么青少年会沉迷网络"><a href="#3-2-为什么青少年会沉迷网络" class="headerlink" title="3.2 为什么青少年会沉迷网络"></a>3.2 为什么青少年会沉迷网络</h3><p><span class="label label-primary"><br>  知乎问题：青少年为何会对网络成瘾？[6]</p><p>  孩子没有获得足够的陪伴。<br>  孩子没有获得尊重。<br>  青少年的发展特点 根据马斯洛需求层次理论，人底层的需求被满足后，便会产生高层次的需。如果心理需求不能得到满足的话，会产生焦虑，孤独等心理问题。青少面时期是个体由不成熟过渡的重要时期，心理状态不稳定，情绪起伏大，自制力相对较差，心理需要比成年人强烈而明显。<br>&lt;/span&gt;</p><p>从社会角度考虑，当今社会是互联网社会，随着笔记本电脑、平板、智能手机等互联网产品种类以及支付宝、淘宝、QQ、微信等软件的开发利用，涵盖人们生活的各个领域，娱乐作为人们日常生活重要的一部分，游戏行业蓬勃发展，也逐渐赢得了青少年的喜爱。再加上当今社会重功利化，家庭赋予太大的学习压力，游戏也顺势站在了学习的对立面；从青少年人群分析我们知道青少年自制力稍欠，并且获取信息的欲望很强，很难在网络中辨别是非，误入歧途；站在游戏的角度考虑，为什么会受到那么多人的喜爱。我想他们正是抓住了很多人在生活中没有存在感，缺少父母的陪伴，于是在网络中提供了一个可以有存在感的空间；但是最重要的一点还是家庭原因，青少年在家轻重缺少陪伴与关爱，再加上对现实生活的不满，他们不得不选择去互联网去释放压力寻求慰藉。</p><h3 id="3-3-怎样才能做到防青少年沉迷网络"><a href="#3-3-怎样才能做到防青少年沉迷网络" class="headerlink" title="3.3 怎样才能做到防青少年沉迷网络"></a>3.3 怎样才能做到防青少年沉迷网络</h3><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123210526.jpg" alt=""><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123210527.jpg" alt=""></p><p class="note note-primary">  朱永新建议，从网络游戏类别、认证、时长、充值方面建立网络游戏强制分级制度，并由相关政府部门审核监管。根据目前社会发展客观实际和网络游戏内容，比如是否包含暴力内容、不良语言、性内容等，可从早教类、管控类、限制类、禁止类等方面划分，对不同年龄段的未成年人建立网络游戏产品分级制度，其中包括实行用户注册登录实名认证分级，通过未成年人及其监护人身份证信息、手机号或人脸识别等方式实行未成年人登录网游时段、时长监管分级，实行游戏充值限额分级等。  朱永新还建议，建立网络游戏分级监管与评价机制，并修订完善网络游戏法律法规，对《未成年保护法》《网络安全法》《出版管理条例》《网络游戏管理暂行办法》进行修订，增加“基于未成年人保护的网络游戏分级”相关内容。[6]</p><p>在今年两会上，也有关于青少年沉迷网络的声音，因为目前我国尚没有全国性的行业协会，相关法律法规及管理条例内容宏观，缺少具体的细则和分级方案，执行效果不明显。全国政协委员、民进中央副主席朱永新呼吁建立网络游戏分级制度，通过人脸识别等技术实行未成年人登入网游时段、时长监管分级，防止青少年沉迷网络游戏。因此，政府还应该完善相关法律制度，建立健全相关法律规章制度，企业也应做好对未成年人的监督，在技术层面上做到硬核防沉迷。</p><p class="note note-primary">从家庭教育关注未成年人权益保护，是一个很重要的角度。家庭是青少年成长的第一环境，是预防青少年走向犯罪歧路的第一道防线。孩子出了问题，多数情况下说明家庭教育出了问题。现在正大修的未成年人保护法和预防未成年人犯罪法，都把家庭教育作为了发力点之一。但相对来说，这都是一些原则性规定，效力十分有限。制定专门的“家庭教育法”，是在更高维度上唤起社会重视：家庭教育是不是一门专门的学问？家长需不需要接受专门的教育？答案是肯定的。</p><p class="note note-primary">这次疫情期间，让近2亿中小学生迎来史无前例的在线教育，同时也凸显了青少年沉迷网络的问题。许多家长惊奇地发现，以前总是把问题归咎为“没时间照顾孩子”，但现在陪孩子的时间多了，却发现不了解他们，甚至无法沟通交流。这种尴尬指向的是，大多数人结婚生子后就无师自通，不需要学习就当上了家长。这实际是不够的，正如蒙台梭利所说，“儿童是成人之父”。和孩子相处是个学习和成长过程，家长们不应把教育看得太简单。</p>  <p class="note note-primary">以“沉迷游戏”为例。调查显示，有4种青少年特别容易出现游戏成瘾现象，分别是家庭条件较差的；隔代教育下的；家庭关系差、亲子互动少的；家长对子女游戏行为没有限制的。它的心理机制是：亲子互动不足，只好到游戏里找补偿。家长需要反思的是，如果只生不养、只养不教，一下班自己也玩游戏，将孩子丢给别人看护，甚至拿手机当“电子保姆”，孩子很可能产生心理偏差。可见，家长需要接受教育，思考怎样正确爱孩子，让孩子健康成长。</p>  <p class="note note-primary">进一步，“家庭教育法”有助于厘清家庭教育和学校教育的责任边界。学校、社会、家庭教育三者为一体，学校教育负责传道授业，社会教育重在历事练心，家庭教育关心爱和成长，三者互为犄角，谁也取代不了谁。但在现实中，人们常常把孩子的希望寄托在学校，过分夸大学校教育的作用，轻视自己的责任，这是一种失职渎职。进一步明确家庭教育的定位和功能，有利于家长看到自身责任，从而合力探讨家庭教育怎么做，它的着力点、抓手在哪里。</span>  <p class="note note-primary">“天下之本在国，国之本在家。”习近平总书记多次强调要“注重家庭、注重家教、注重家风”，强调家长要给孩子讲好“人生第一课”，帮助扣好人生第一粒扣子，并强调要认真研究家庭领域出现的新情况新问题，把推进家庭工作作为一项长期任务抓实抓好。长期以来，家庭教育被认为是私领域的事，没有引起足够重视。人大代表的立法建议，有利于提升家庭教育地位、规范家庭教育行为。就目前来讲，如果能引起家庭的反思，也是件十分有益的事。</p>[7]<p class="note note-primary">当然最重要的还是家庭层面，有时候孩子需要的不是锦衣玉食、而是陪伴。现代生活中，人们的生活逐渐碎片化，家长们越来越忙，家里买台电脑、买个平板可以让孩子在网上学习，但是对于孩子来说，他们尚未形成良好的自制能力，对网络繁杂的信息，没有辨别好坏的能力，他会忍不住玩游戏或者浏览色情网站，从而潜移默化的影响着他们的生活习惯甚至一生。因此，家长应该正视互联网或者游戏，不是上网就是有“网瘾”，应该重视与孩子的沟通，寓教于乐，多关注孩子的动态以及上网习惯、及时对孩子进行正面指导[8]。学校社会媒体也应该正视网络，不要妖魔化网络，积极宣传正能量，引导青少年健康文明上网。</p><p class="note note-primary">正如上文所说，此次疫情“网上课堂”凸显了这个问题，我们就应该全民正视这个问题，不要推脱责任给任何不良机构或者控诉某些企业，多从自己方面找原因，这一点，我认为家长、学校、社会三方都应该做好反思。</p><h2 id="4-结论"><a href="#4-结论" class="headerlink" title="4 结论"></a>4 结论</h2><p>网络上对互联网的夸赞不胜其属，其中就有人认为互联网解放了青少年的思想，固然他拓宽了人们获取知识的渠道，当然随着生活水平的提高，互联网的确给生活带来了极大的便利，但是这仍然无法掩盖互联网是把双刃剑的事实。在这里，最主要的还是家长需要接受教育，思考怎样正确爱孩子，让孩子健康成长。请不要绑架互联网，互联网只是工具，说白了，没有上瘾与不上瘾，只有失败和不失败。这不应该是家长掩盖教育失败这个事实而冠冕堂皇的理由。当然，政府企业也应该重视青少年的发展。建立健全相关法律法规，完善监管制度，让祖国的下一代能够健康成长。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.cnblogs.com/xifengmo/p/10989565.html">解决python中’chromedriver’ executable needs to be in PATH报错</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://blog.csdn.net/qq_41429288/article/details/80472064">关于Chromedriver如何配置环境变量问题解决</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://github.com/princewen/python3_crawl/blob/master/爬虫实战/使用selenium爬取按关键词搜索的微博.py">使用selenium爬取按关键词搜索的微博.py](https://github.com/princewen/python3_crawl/blob/master/%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98/%E4%BD%BF%E7%94%A8selenium%E7%88%AC%E5%8F%96%E6%8C%89%E5%85%B3%E9%94%AE%E8%AF%8D%E6%90%9C%E7%B4%A2%E7%9A%84%E5%BE%AE%E5%8D%9A.py</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="http://www.chenxm.cc/article/882.html">python xlrd读取excel(表格)详解</a><a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span><a href="https://blog.csdn.net/qq_41822781/article/details/90671050">词云可视化：四行Python代码轻松上手到精通</a><a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:6" class="footnote-text"><span><a href="https://ie.bjd.com.cn/5b165687a010550e5ddc0e6a/contentApp/5b16573ae4b02a9fe2d558f9/AP5ecb00b6e4b0be621cbdc2d0.html">朱永新委员：建立网络游戏分级制 人脸识别防未成年人沉迷</a><a href="#fnref:6" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:7" class="footnote-text"><span><a href="https://static.nfapp.southcn.com/content/202005/21/c3560548.html?from=timeline&amp;date=ZjNhZWVlMTEtZGU0MS00MmM1LWFmOWItM2EyODIwYjMzYjk2&amp;layer=4">叮咚看两会|制定“家庭教育法”很有必要</a><a href="#fnref:7" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:8" class="footnote-text"><span><a href="https://zhuanlan.zhihu.com/p/35749013">如何减少互联网带给孩子的危害</a><a href="#fnref:8" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>网络沉迷</tag>
      
      <tag>青少年</tag>
      
      <tag>调查报告</tag>
      
      <tag>爬虫</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[11:面向初学者的20个树莓派命令]</title>
    <link href="/2020/07/18/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B11%E9%9D%A2%E5%90%91%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%8420%E4%B8%AA%E6%A0%91%E8%8E%93%E6%B4%BE%E5%91%BD%E4%BB%A4%5D/"/>
    <url>/2020/07/18/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B11%E9%9D%A2%E5%90%91%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%8420%E4%B8%AA%E6%A0%91%E8%8E%93%E6%B4%BE%E5%91%BD%E4%BB%A4%5D/</url>
    
    <content type="html"><![CDATA[<p class="note note-primary">  您可能从快乐的Windows GUI用户变为没有按钮或双击任何东西的怀旧黑屏和绿屏。自从您的第一台PC开始使用GUI以来，这可能是令人恐惧的事情。  但是，有许多小技巧和命令可以帮助用户获得使用该系统的信心。  这里没有高级或突破性的内容，只有日常的基本命令可以帮助您从终端窗口浏览和执行Raspberry Pi的简单任务。随着时间的推移，您会发现更多的东西，但这是一个很好的起点。</p><h2 id="01-sudo-apt-get更新-更新程序包列表"><a href="#01-sudo-apt-get更新-更新程序包列表" class="headerlink" title="01.[sudo apt-get更新]-更新程序包列表"></a>01.[sudo apt-get更新]-更新程序包列表</h2><p><span class="label label-primary">终端中的更新命令<br><pre><code class="hljs shell">sudo apt-get update</code></pre><br><span class="label label-primary">这是更新Raspberry Pi的第一阶段（有关其他步骤，请参阅此列表中的下两个项目）。</span></p><p>“ sudo apt-get update”命令 从存储库下载软件包列表，并获取有关这些软件包的最新版本以及任何相关软件包的信息。</p><p>因此，它实际上并没有进行传统意义上的任何实际更新。在整个过程中，它更是一个必需的步骤。</p><h2 id="02-sudo-apt-get-upgrade-下载并安装更新的软件包"><a href="#02-sudo-apt-get-upgrade-下载并安装更新的软件包" class="headerlink" title="02.[sudo apt-get upgrade]-下载并安装更新的软件包"></a>02.[sudo apt-get upgrade]-下载并安装更新的软件包</h2><p><span class="label label-primary">终端中的升级命令</span><br><pre><code class="hljs shell">sudo apt-get upgrade</code></pre><br><span class="label label-primary">此命令从我们更新软件包列表的上一个项目开始。</span></p><p>有了我们更新的软件包列表后，“ sudo apt-get upgrade”命令将查看当前安装的软件包，然后查看最新的软件包列表（我们刚刚升级的软件包），然后最后安装所有尚未安装的新软件包。</p><h2 id="03-sudo-apt-get-clean-清理旧程序包文件"><a href="#03-sudo-apt-get-clean-清理旧程序包文件" class="headerlink" title="03.[sudo apt-get clean]-清理旧程序包文件"></a>03.[sudo apt-get clean]-清理旧程序包文件</h2><p><span class="label label-primary">终端中的清理命令</span><br><pre><code class="hljs shell">sudo apt-get clean</code></pre><br><span class="label label-primary">更新和升级过程的最后阶段，如果您有足够的磁盘空间，那么这并非总是必不可少的。</span></p><p>“ sudo apt-get clean”命令删除在更新过程中下载的冗余软件包文件（.deb文件）。</p><p>如果您空间有限或只想进行良好的清理，这是一个方便的命令。</p><h2 id="04-sudo-raspi-config-Raspberry-Pi配置工具"><a href="#04-sudo-raspi-config-Raspberry-Pi配置工具" class="headerlink" title="04.[sudo raspi-config]-Raspberry Pi配置工具"></a>04.[sudo raspi-config]-Raspberry Pi配置工具</h2><p><span class="label label-primary">Raspberry Pi配置工具</span></p><p><span class="label label-primary">这应该是您首次开始使用Raspberry Pi时要采取的第一步，以确保已针对您的语言，硬件和项目进行了设置。</span></p><p>配置工具就像一个“设置”窗口，可让您设置语言，时间/日期，启用摄像头模块，对处理器进行超频，启用设备，更改密码以及许多其他选项。</p><p>您可以通过键入“ sudo raspi-config”然后按回车来访问它。根据您所做的更改，之后可能会提示您重新启动Pi。</p><h2 id="05-ls-列出目录内容"><a href="#05-ls-列出目录内容" class="headerlink" title="05.[ls]-列出目录内容"></a>05.[ls]-列出目录内容</h2><p><span class="label label-primary">终端中的ls命令</span></p><pre><code class="hljs shell">ls 目录</code></pre><p><span class="label label-primary">Linux的“目录”与Windows中的“文件夹”相同。这可能是您（Windows用户）必须习惯的。</span></p><p>当然，终端中没有浏览器，因此要查看您在任何给定时间所在目录的内容，只需键入“ ls”并按回车即可。</p><p>您将看到列出该目录中的每个文件和目录，并且通常为不同项目使用颜色编码。</p><h2 id="06-cd-更改目录"><a href="#06-cd-更改目录" class="headerlink" title="06.[cd]-更改目录"></a>06.[cd]-更改目录</h2><p><span class="label label-primary">终端中的cd命令</span><br><pre><code class="hljs shell">cd 目录</code></pre><br><span class="label label-primary">如果要跳转到某个目录，可以使用“ cd”命令。</span></p><p>如果您已经在其中的目录中有目录，则可以简单地使用“ cd directoryname”（用目录名替换“ directoryname”）。</p><p>如果它在文件系统中的其他位置，只需在命令后输入路径，例如“ cd / home / pi / directoryname”。</p><p>此命令的另一个方便用法是“ cd ..”，它使您返回一个文件夹级别，类似于“返回”按钮。</p><h2 id="07-mkdir-创建目录"><a href="#07-mkdir-创建目录" class="headerlink" title="07.[mkdir]-创建目录"></a>07.[mkdir]-创建目录</h2><p><span class="label label-primary">终端中的mkdir命令</span></p><p><span class="label label-primary">mkdir 目录名</span></p><p><span class="label label-primary">如果需要在已经存在的目录中创建一个新目录，则可以使用“ mkdir”命令。这是 相当于终端世界的新&gt; 文件夹。</span></p><p>要创建新目录，只需在命令后添加目录名称，例如’mkdir new_directory’。</p><h2 id="08-rmdir-删除目录"><a href="#08-rmdir-删除目录" class="headerlink" title="08.[rmdir]-删除目录"></a>08.[rmdir]-删除目录</h2><p><span class="label label-primary">您已经了解了如何创建新目录，但是如果要删除一个目录该怎么办？</span></p><pre><code class="hljs shell">rmdir 目录名</code></pre><p><span class="label label-primary">这是删除目录的非常相似的命令，只需使用“ rmdir”然后输入目录名称即可。</span></p><p>例如，“ rmdir directory_name”将删除目录“ directory_name”。值得注意的是，该目录必须为空才能执行此命令。</p><h2 id="09-mv-移动文件"><a href="#09-mv-移动文件" class="headerlink" title="09.[mv]-移动文件"></a>09.[mv]-移动文件</h2><p><span class="label label-primary">使用“ mv”命令移动文件</span><br><pre><code class="hljs shell">mv 文件名 移动位置</code></pre><br><span class="label label-primary">通过使用“ mv”命令可在目录之间移动文件。</span></p><p>要移动文件，请使用“ mv”，然后是文件名，然后是目标目录。</p><p>例如“ mv my_file.txt / home / pi / destination_directory”，它将“ my_file.txt”文件移动到“ / home / pi / destination_directory”。</p><h2 id="10-tree-d-显示目录树"><a href="#10-tree-d-显示目录树" class="headerlink" title="10.[tree -d]-显示目录树"></a>10.[tree -d]-显示目录树</h2><pre><code class="hljs shell">tree -d</code></pre><p><span class="label label-primary">Tree命令是查看目录结构的便捷方法</span><br>创建少量新目录后，您可能会缺少Windows文件资源管理器的可视文件夹结构视图。如果无法看到目录的直观布局，事情可能会很快变得混乱。</p><p>可以帮助您更清楚地了解目录的命令之一是“ tree -d”。它在终端内以树状布局显示所有目录。</p><h2 id="11-pwd-显示当前目录"><a href="#11-pwd-显示当前目录" class="headerlink" title="11.[pwd]-显示当前目录"></a>11.[pwd]-显示当前目录</h2><pre><code class="hljs shell">pwd</code></pre><p><span class="label label-primary">当您开始感到有点迷茫时，使用“ pwd”可以为您提供帮助！</span></p><p>当您迷路时，另一个帮助您的便捷命令是’pwd’命令。如果您只想知道自己在任何给定时间的位置，这将非常方便。</p><p>只需随时输入“ pwd”以显示您所在的当前目录路径。</p><h2 id="12-clear-清除终端窗口"><a href="#12-clear-清除终端窗口" class="headerlink" title="12.[clear]-清除终端窗口"></a>12.[clear]-清除终端窗口</h2><pre><code class="hljs shell">clear</code></pre><p><span class="label label-primary">在终端中清除命令</span></p><p>当您开始使用终端机时，您会发现它会变得很混乱。在执行一些命令之后，您会在屏幕上留下一小段文字，对于我们中的某些人来说可能有点烦人。</p><p>如果要擦拭屏幕干净，只需使用“ clear”命令。屏幕将被清除，为下一个命令做好准备。</p><h2 id="13-sudo-half-关闭您的Raspberry-Pi"><a href="#13-sudo-half-关闭您的Raspberry-Pi" class="headerlink" title="13.[sudo half]-关闭您的Raspberry Pi"></a>13.[sudo half]-关闭您的Raspberry Pi</h2><p><span class="label label-primary">使用“ half”命令安全关闭Raspberry Pi</span></p><p>安全地关闭Raspberry Pi可以避免SD卡损坏等问题。您有时可以通过快速拉动电源线来逃脱，但是最终，您将杀死您的卡。</p><p>要正确关闭树莓派，请使用“ sudo halt”。在Pi的LED上最后闪烁一次之后，您可以拔下电源线。</p><h2 id="14-sudo-reboot-重新启动Raspberry-Pi"><a href="#14-sudo-reboot-重新启动Raspberry-Pi" class="headerlink" title="14.[sudo reboot]-重新启动Raspberry Pi"></a>14.[sudo reboot]-重新启动Raspberry Pi</h2><p><span class="label label-primary">在终端中使用重新启动来重新启动Pi</span></p><pre><code class="hljs shell">sudo reboot</code></pre><p>与shutdown命令类似，如果您想以安全的方式重启Raspberry Pi，则可以使用“ reboot”命令。</p><p>只需键入“ sudo reboot”，Pi就会自行重启。</p><h2 id="15-startx-启动桌面环境（LXDE）"><a href="#15-startx-启动桌面环境（LXDE）" class="headerlink" title="15.[startx]-启动桌面环境（LXDE）"></a>15.[startx]-启动桌面环境（LXDE）</h2><p><span class="label label-primary">终端中的startx命令</span></p><pre><code class="hljs shell">startx</code></pre><p><span class="label label-primary">如果您将Pi设置为始终在终端中启动，则您可能想知道如何启动桌面（如果需要使用它）。</span></p><p>使用“ startx”启动LXDE（轻便X11桌面环境）。应该注意的是，这将无法通过SSH会话进行。</p><h2 id="16-ifconfig-查找您的Raspberry-Pi的IP地址"><a href="#16-ifconfig-查找您的Raspberry-Pi的IP地址" class="headerlink" title="16.[ifconfig]-查找您的Raspberry Pi的IP地址"></a>16.[ifconfig]-查找您的Raspberry Pi的IP地址</h2><pre><code class="hljs shell">ifconfig</code></pre><p><span class="label label-primary">ifconfig可以为您提供有用的网络信息</span><br>在很多情况下，可能需要您知道Raspberry Pi 的IP地址。许多人在配置SSH会话以远程访问其Pi时使用它。</p><p>要查找您的IP地址，请在终端中键入“ ifconfig”，然后按Enter。您也可以使用“主机名-I”自行查找IP地址。</p><h2 id="17-nano-编辑文件"><a href="#17-nano-编辑文件" class="headerlink" title="17.[nano]-编辑文件"></a>17.[nano]-编辑文件</h2><p><span class="label label-primary">终端中的Nano，是Raspberry Pi的首选文本编辑器</span><br>Linux有许多不同的文本编辑器，由于各种原因，您会发现有些人喜欢使用另一种。</p><p>要编辑文件，只需键入“ nano”，然后键入文件名，例如“ nano myfile.txt”。编辑完成后，按Ctrl + X保存文件。</p><h2 id="18-cat-显示文件的内容"><a href="#18-cat-显示文件的内容" class="headerlink" title="18.[cat]-显示文件的内容"></a>18.[cat]-显示文件的内容</h2><pre><code class="hljs shell">cat</code></pre><p><span class="label label-primary">终端中的cat</span></p><p>虽然可以使用“ nano”（上方）打开文件进行编辑，但是可以使用单独的命令在终端中简单列出文件的内容。</p><p>使用“ cat”后跟文件名来执行此操作，例如，“ cat myfile.txt”。</p><h2 id="19-rm-删除文件"><a href="#19-rm-删除文件" class="headerlink" title="19.[rm]-删除文件"></a>19.[rm]-删除文件</h2><p><span class="label label-primary">终端中的rm命令有助于轻松删除文件</span><br><pre><code class="hljs shell">rm 文件名</code></pre><br>在Raspberry Pi上，删除文件很容易，并且在编写代码麻烦的同时制作许多版本的Python文件时，您会做很多事情。</p><p>要删除文件，我们使用“ rm”命令，后跟文件名。例如“ rm myfile.txt”。</p><h2 id="20-cp-复制文件或目录"><a href="#20-cp-复制文件或目录" class="headerlink" title="20.[cp]-复制文件或目录"></a>20.[cp]-复制文件或目录</h2><pre><code class="hljs shell">cp 文件名或目录名</code></pre><p><span class="label label-primary">终端中的cp命令可帮助复制文件</span><br><span class="label label-primary">当需要复制文件或目录时，请使用“ cp”命令。</span></p><p>要在同一目录中复制文件，请输入命令“ cp original_file new_file”</p><p>要在另一个具有相同名称的目录中进行复制，请输入命令“ cp original_file home / pi / subdirectory”</p><p>要复制整个目录（及其内容），请输入命令“ cp -R home / pi / folder_one home / pi / folder_two”。这会将“ folder_one”复制到“ folder_two”。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.lxx1.com/3985">面向初学者的20个树莓派命令</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://www.lifewire.com/raspberry-pi-terminal-commands-4054108">20 Handy Raspberry Pi Terminal Commands for Beginners</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>基地2.0</tag>
      
      <tag>系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[10:基地2.0开启9090端口和VNC内网穿透]</title>
    <link href="/2020/07/17/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B10%E5%9F%BA%E5%9C%B02.0%E5%BC%80%E5%90%AF9090%E7%AB%AF%E5%8F%A3%E5%92%8CVNC%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%5D/"/>
    <url>/2020/07/17/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B10%E5%9F%BA%E5%9C%B02.0%E5%BC%80%E5%90%AF9090%E7%AB%AF%E5%8F%A3%E5%92%8CVNC%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%5D/</url>
    
    <content type="html"><![CDATA[<p class="note note-primary">  之前做过本地搭的网站的内网穿透，但是想利用内网穿透把基地2.0的管理界面和vnc界面集成进去。之前也做过尝试，但是可能都由于安装的系统不完整等等原因导致无法穿透，今天尝试了一下vnc发现可以，但是9090管理端口可能由于安全连接导致无法实现……</p><h2 id="vnc"><a href="#vnc" class="headerlink" title="vnc"></a>vnc</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122222722.png" alt=""></p><p><span class="label label-primary">这个端口没有安全设置，只需要按照sunny-ngrok官方文档设置就可以。</span></p><p><a href="http://www.baixf.xyz/index.php/2020/06/12/%e6%a0%91%e8%8e%93%e6%b4%be%e4%bd%bf%e7%94%a8ngrok%e8%bf%9b%e8%a1%8c%e5%86%85%e7%bd%91%e7%a9%bf%e9%80%8f%ef%bc%8c%e5%9c%a8%e5%85%ac%e7%bd%91%e4%b8%8a%e6%90%ad%e5%bb%ba%e4%b8%aa%e4%ba%ba%e5%8d%9a/">设置参考链接</a></p><h2 id="9090"><a href="#9090" class="headerlink" title="9090"></a>9090</h2><p><span class="label label-primary"><br>  错误显示如下：<br>  此网站无法提供安全连接，localhost 发送的响应无效</span></p><p><span class="label label-primary">在设置9090管理端口内网穿透时发现由于安全性无法进行连接，因此寻找方法，发现如下文章：</span></p><p><a href="https://blog.csdn.net/wang_xiaoniao/article/details/107280638">csdn原文链接</a></p><p><span class="label label-primary"></p><h2 id="错误原因"><a href="#错误原因" class="headerlink" title="错误原因"></a>错误原因</h2><p>使用了https作为网络协议，应用http代替https。<br>  HTTPS和HTTP的区别<br>  1、https协议需要到ca申请证书，一般免费证书较少，因而需要一定费用。<br>  2、http是超文本传输1653协议，信息是明文传输，https则是具有安全性的ssl加密传输协议<br>  3、http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443<br>  4、http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。</p><p>  其实网站的报错就已经提示了错误原因，此网站无法提供安全连接。因为我本地搭建的服务器并没有申请ssl数字证书，只是简单的作为项目运行时的临时服务器，所以无法用https进行访问。<br>  ————————————————<br>  版权声明：本文为CSDN博主「wang_xiaoniao」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>&lt;/span&gt;</p><p><span class="label label-primary">⚠即解决办法就是将内网穿透的http换成https协议</span></p><p><span class="label label-primary">修改后的效果如下</span></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122223141.png" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="http://www.ngrok.cc/_book/">Sunny-Ngrok使用教程</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://www.ngrok.cc/">Sunny-Ngrok官网</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>基地2.0</tag>
      
      <tag>内网穿透</tag>
      
      <tag>9090端口</tag>
      
      <tag>vnc</tag>
      
      <tag>http协议</tag>
      
      <tag>sunny-ngrok</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[09:使用Ngrok进行内网穿透，在公网上搭建个人博客]</title>
    <link href="/2020/07/16/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B09%E4%BD%BF%E7%94%A8Ngrok%E8%BF%9B%E8%A1%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%EF%BC%8C%E5%9C%A8%E5%85%AC%E7%BD%91%E4%B8%8A%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%5D/"/>
    <url>/2020/07/16/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B09%E4%BD%BF%E7%94%A8Ngrok%E8%BF%9B%E8%A1%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%EF%BC%8C%E5%9C%A8%E5%85%AC%E7%BD%91%E4%B8%8A%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%5D/</url>
    
    <content type="html"><![CDATA[<p class="note note-primary">  树莓派性能虽然比不上家用电脑或者服务器，但是搭建个人博客网站足够了。我使用树莓派4B，在树莓派上安装了宝塔面板，利用wordpress在本地搭建了一个个人博客。博客搭建好了，树莓派网站只能在局域网内访问，存在外网无法访问的问题。为解决这个问题，经过一番搜索，终于发现树莓派可以使用Ngrok进行内网穿透，从而在公网上也可以访问树莓派上的博客网站。以下是教程。</p><h2 id="一、Ngrok-介绍和选择服务商"><a href="#一、Ngrok-介绍和选择服务商" class="headerlink" title="一、Ngrok 介绍和选择服务商"></a>一、Ngrok 介绍和选择服务商</h2><p><span class="label label-primary"><br>  首先，什么是Ngrok?</span></p><p><span class="label label-primary">ngrok 通过安全隧道将位于NAT和防火墙后面的本地服务器公开到公共Internet，即将没有公网IP地址的服务器公开到公网，从而可以在任何地方访问局域网内的服务器。</span></p><p><span class="label label-primary"><br>  其次，Ngrok是怎么运行的？</span></p><p><span class="label label-primary">您可以在计算机上下载并运行客户端程序，并为客户端提供网络服务（通常是Web服务器）的端口。</span></p><p><span class="label label-primary">客户端连接到ngrok云服务，该服务在公网上接受流量，并将该流量转发到计算机上运行的ngrok进程，然后再转发到您指定的本地地址，从而实现内网穿透。</span></p><p><span class="label label-primary">最后如何选择Ngrok云服务，如果你有云服务器，那么你可以自己搭建Ngrok云服务，也可以选择Ngrok服务商，因为方便就没有自建服务。对比了Ngrok官方和 Sunny Ngrok之后，最终选择了Sunny Ngrok，因为从两个服务商提供的服务来说，官方的不能自定义域名，虽然提供4个通道，但是每分钟有40次连接的限制。</span></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122224244.png" alt=""></p><h3 id="Ngrok-提供的服务价格"><a href="#Ngrok-提供的服务价格" class="headerlink" title="Ngrok 提供的服务价格"></a>Ngrok 提供的服务价格</h3><p><span class="label label-primary">而我只需要一个通道就够了，并且我有个人的域名，所以选择了可以自定义域名的Sunny Ngrok。</span></p><h2 id="二、注册Sunny-Ngrok，并开通隧道"><a href="#二、注册Sunny-Ngrok，并开通隧道" class="headerlink" title="二、注册Sunny-Ngrok，并开通隧道"></a>二、注册Sunny-Ngrok，并开通隧道</h2><p><span class="label label-primary">在Sunny-Ngrok上注册一个账号，然后进入后台，开通一个隧道。</span></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122224918.png" alt=""></p><p>开通Sunny-Ngrok 隧道</p><h2 id="三、在宝塔面板中绑定新的域名"><a href="#三、在宝塔面板中绑定新的域名" class="headerlink" title="三、在宝塔面板中绑定新的域名"></a>三、在宝塔面板中绑定新的域名</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122224956.png" alt=""></p><h2 id="四、下载客户端，并启动隧道"><a href="#四、下载客户端，并启动隧道" class="headerlink" title="四、下载客户端，并启动隧道"></a>四、下载客户端，并启动隧道</h2><h3 id="1-在树莓派上下载Ngrok客户端"><a href="#1-在树莓派上下载Ngrok客户端" class="headerlink" title="1.在树莓派上下载Ngrok客户端"></a>1.在树莓派上下载Ngrok客户端</h3><p><a href="http://hls.ctopus.com/sunny/linux_arm.zip?v=2">下载地址</a></p><p>下载完成之后将客户端执行文件移动到 /use/local/bin 目录下并给予可执行权限。</p><pre><code class="hljs shell">sudo mv sunny /usr/local/bin/sunnysudo chmod +x /usr/local/bin/sunny</code></pre><h3 id="2、编写启动脚本"><a href="#2、编写启动脚本" class="headerlink" title="2、编写启动脚本"></a>2、编写启动脚本</h3><pre><code class="hljs shell">sudo nano /etc/init.d/sunny/etc/init.d/sunny 启动脚本代码</code></pre><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/bin/sh -e</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">## BEGIN INIT INFO</span></span><span class="hljs-meta">#</span><span class="bash"> Provides:          ngrok.cc</span><span class="hljs-meta">#</span><span class="bash"> Required-Start:    <span class="hljs-variable">$network</span> <span class="hljs-variable">$remote_fs</span> <span class="hljs-variable">$local_fs</span></span><span class="hljs-meta">#</span><span class="bash"> Required-Stop:     <span class="hljs-variable">$network</span> <span class="hljs-variable">$remote_fs</span> <span class="hljs-variable">$local_fs</span></span><span class="hljs-meta">#</span><span class="bash"> Default-Start:     2 3 4 5</span><span class="hljs-meta">#</span><span class="bash"> Default-Stop:      0 1 6</span><span class="hljs-meta">#</span><span class="bash"> Short-Description: autostartup of ngrok <span class="hljs-keyword">for</span> Linux</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">## END INIT INFO</span></span>NAME=sunnyDAEMON=/usr/local/bin/$NAMEPIDFILE=/var/run/$NAME.pid[ -x &quot;$DAEMON&quot; ] || exit 0case &quot;$1&quot; in  start)      if [ -f $PIDFILE ]; then        echo &quot;$NAME already running...&quot;        echo -e &quot;\033[1;35mStart Fail\033[0m&quot;      else        echo &quot;Starting $NAME...&quot;        start-stop-daemon -S -p $PIDFILE -m -b -o -q -x $DAEMON -- clientid 隧道id || return 2        echo -e &quot;\033[1;32mStart Success\033[0m&quot;    fi    ;;  stop)        echo &quot;Stoping $NAME...&quot;        start-stop-daemon -K -p $PIDFILE -s TERM -o -q || return 2        rm -rf $PIDFILE        echo -e &quot;\033[1;32mStop Success\033[0m&quot;    ;;  restart)    $0 stop &amp;&amp; sleep 2 &amp;&amp; $0 start    ;;  *)    echo &quot;Usage: $0 &#123;start|stop|restart&#125;&quot;    exit 1    ;;esacexit 0</code></pre><p><span class="label label-primary">⚠️注意：</span></p><p><span class="label label-primary">把代码里面的【隧道id】替换成自己的隧道id</span></p><h3 id="3、测试可执行代码"><a href="#3、测试可执行代码" class="headerlink" title="3、测试可执行代码"></a>3、测试可执行代码</h3><pre><code class="hljs shell">sudo chmod 755 /etc/init.d/sunnysudo /etc/init.d/sunny startsudo /etc/init.d/sunny start    #启动sudo /etc/init.d/sunny stop     #停止sudo /etc/init.d/sunny restart  #重启</code></pre><h3 id="4、设置开机启动"><a href="#4、设置开机启动" class="headerlink" title="4、设置开机启动"></a>4、设置开机启动</h3><pre><code class="hljs shell">cd /etc/init.dsudo update-rc.d sunny defaults 90    #加入开机启动sudo update-rc.d -f sunny remove  #取消开机启动</code></pre><h3 id="5、隧道启动官方文档说明"><a href="#5、隧道启动官方文档说明" class="headerlink" title="5、隧道启动官方文档说明"></a>5、隧道启动官方文档说明</h3><h5 id="启动隧道"><a href="#启动隧道" class="headerlink" title="启动隧道"></a>启动隧道</h5><p><span class="label label-primary"><br>  Mac、Linux、树莓派的使用方式是一样的。Windows才会不一样。但是它们的启动方式都是通过隧道id启动，隧道id可以在隧道管理的列表里面获得。这里以映射http服务为例。</span></p><p><span class="label label-primary">注意 下方代码仅供参考，sunny执行文件位置还得对应自己安装位置</span></p><p><span class="label label-primary">Mac、Linux、树莓派</span></p><pre><code class="hljs shell">./sunny clientid 隧道id</code></pre><p><span class="label label-primary">启动多个隧道</span></p><pre><code class="hljs shell">./sunny clientid 隧道id,隧道id</code></pre><p><span class="label label-primary">要想后台运行可以使用 setsid 命令</span></p><pre><code class="hljs shell">setsid ./sunny clientid 隧道id &amp;</code></pre><h2 id="五、完成"><a href="#五、完成" class="headerlink" title="五、完成"></a>五、完成</h2><p><span class="label label-primary">启动Ngrok 隧道，可以看到服务器已经上线了。</span></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122225032.png" alt=""></p><h2 id="六、树莓派内网穿透"><a href="#六、树莓派内网穿透" class="headerlink" title="六、树莓派内网穿透"></a>六、树莓派内网穿透</h2><p><span class="label label-primary">再打开赠送的域名<a href="http://bxf.free.idcfengye.com/">http://bxf.free.idcfengye.com/</a> ，就可以看到运行在树莓派上的博客网站啦，树莓派内网穿透成功！</span></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123204628.png" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.lxx1.com/3709">科技爱好者博客-树莓派使用Ngrok进行内网穿透，在公网上搭建个人博客</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>基地2.0</tag>
      
      <tag>内网穿透</tag>
      
      <tag>公网</tag>
      
      <tag>个人博客</tag>
      
      <tag>suny-ngrok</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[08:安装x11vnc并设置开机自动启动]</title>
    <link href="/2020/07/15/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B08%E5%AE%89%E8%A3%85x11vnc%E5%B9%B6%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8%5D/"/>
    <url>/2020/07/15/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B08%E5%AE%89%E8%A3%85x11vnc%E5%B9%B6%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8%5D/</url>
    
    <content type="html"><![CDATA[<p class="note note-primary">  最近基地新更新了'raspberry-uos-happy版',本着好奇就开始了。但是这个版本没有预设的9090和vnc等配置，所以手动装一个x11vnc实现远程操作。</p><h2 id="1-安装x11vnc"><a href="#1-安装x11vnc" class="headerlink" title="1.安装x11vnc"></a>1.安装x11vnc</h2><p>打开终端，使用如下命令安装x11vnc</p><pre><code class="hljs shell">sudo apt-get install x11vnc</code></pre><h2 id="2-设置密码"><a href="#2-设置密码" class="headerlink" title="2.设置密码"></a>2.设置密码</h2><p><span class="label label-primary"><br>  默认保存在 /home/“user”/.vnc/passwd</span></p><pre><code class="hljs shell">sudo x11vnc -storepasswd</code></pre><h2 id="3-设置密码保存位置"><a href="#3-设置密码保存位置" class="headerlink" title="3.设置密码保存位置"></a>3.设置密码保存位置</h2><pre><code class="hljs shell">sudo x11vnc -storepasswd in /etc/x11vnc.pass</code></pre><h2 id="4-拷贝密码文件"><a href="#4-拷贝密码文件" class="headerlink" title="4.拷贝密码文件"></a>4.拷贝密码文件</h2><p><span class="label label-primary"><br>  将用户目录下的passwd文件内容copy到 /etc/x11vnc.pass下</span></p><pre><code class="hljs shell">sudo cp /home/&quot;user&quot;/.vnc/passwd /etc/x11vnc.pass</code></pre><h2 id="5-手动连接"><a href="#5-手动连接" class="headerlink" title="5.手动连接"></a>5.手动连接</h2><p><span class="label label-primary"><br>  需每次开机手动启动连接</span></p><pre><code class="hljs shell">sudo /usr/bin/x11vnc -display :0 -auth /var/run/lightdm/root/:0 -forever -bg -o /var/log/x11vnc.log -rfbauth /etc/x11vnc.pass -rfbport 5900</code></pre><h2 id="6-关闭x11vnc"><a href="#6-关闭x11vnc" class="headerlink" title="6.关闭x11vnc"></a>6.关闭x11vnc</h2><pre><code class="hljs shell">pi@raspbian:~$ ps -ef|grep -i vncroot     18008     1  0 11:27 ?        00:00:11 /usr/bin/x11vnc -display :0 -auth /var/run/lightdm/root/:0 -forever -bg -o /var/log/x11vnc.log -rfbauth /etc/x11vnc.pass -rfbport 5900pi       27883  1482  0 11:49 pts/0    00:00:00 grep -i vncpi@raspbian:~$ sudo kill -9 18008pi@raspbian:~$ ps -ef|grep -i vncpi       28431  1482  0 11:51 pts/0    00:00:00 grep -i vnc</code></pre><h2 id="7-设置开机启动"><a href="#7-设置开机启动" class="headerlink" title="7.设置开机启动"></a>7.设置开机启动</h2><h3 id="配置x11vnc为跟随系统自动启动"><a href="#配置x11vnc为跟随系统自动启动" class="headerlink" title="配置x11vnc为跟随系统自动启动"></a>配置x11vnc为跟随系统自动启动</h3><p><span class="label label-primary">需要新建一个文件/etc/init/x11vnc.conf</span></p><pre><code class="hljs shell">sudo touch /etc/init/x11vnc.conf</code></pre><p><span class="label label-primary"><br>对文件修改需要权限才能修改</span></p><pre><code class="hljs shell">sudo chmod a+w /etc/init/x11vnc.conf</code></pre><p><span class="label label-primary"><br>在x11vnc.conf文件里加入：</span></p><pre><code class="hljs shell">start on login-session-startscriptx11vnc -display :0 -auth /var/run/lightdm/root/:0 -forever -bg -o /var/log/x11vnc.log -rfbauth /etc/x11vnc.pass -rfbport 5900end script</code></pre><p><span class="label label-primary"><br>保存</span></p><p><span class="label label-primary"><br>  到此 开机自动启动就设置好了</span></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://blog.csdn.net/han609768249/article/details/78759590">ubuntu安装vnc server-x11vnc并设置开机自动启动</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://blog.csdn.net/techsupporter/article/details/52887199">Linux上VNC 启动和关闭 已经常见问题</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>基地2.0</tag>
      
      <tag>系统</tag>
      
      <tag>uos</tag>
      
      <tag>x11vnc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[07:开机后将 IP 地址信息自动推送到微信]</title>
    <link href="/2020/07/14/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B07%E5%BC%80%E6%9C%BA%E5%90%8E%E5%B0%86%20IP%20%E5%9C%B0%E5%9D%80%E4%BF%A1%E6%81%AF%E8%87%AA%E5%8A%A8%E6%8E%A8%E9%80%81%E5%88%B0%E5%BE%AE%E4%BF%A1%5D/"/>
    <url>/2020/07/14/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B07%E5%BC%80%E6%9C%BA%E5%90%8E%E5%B0%86%20IP%20%E5%9C%B0%E5%9D%80%E4%BF%A1%E6%81%AF%E8%87%AA%E5%8A%A8%E6%8E%A8%E9%80%81%E5%88%B0%E5%BE%AE%E4%BF%A1%5D/</url>
    
    <content type="html"><![CDATA[<p class="note note-primary">树莓派经常会用到查看本机的IP，知道了 IP 地址才能进行 ssh 远程连接。以前用过使用Python 获取树莓派地址+Email 发送到自己的邮箱，方法是可行的。但是这里使用了更加简便的方法，使用 Python 加上 Server酱服务， Server酱 服务实现了通过请求 URL + 推送信息，的方式来把消息推送到微信。省去了去配置邮箱参数的麻烦，而且通过微信可以更加快捷的查看到推送到微信的IP信息。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre><code class="hljs shell">import timeimport socketimport requestsdef getLocalIP():    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)    s.connect((&#x27;1.1.1.1&#x27;, 80))    ipaddr = s.getsockname()[0]    s.close()    return ipaddrdef post(ip):    url = &quot;https://sc.ftqq.com/your~sckey.send&quot;    data = &quot;text=%s&quot; % ip    results = requests.get(url, data)    print(results)if __name__ == &#x27;__main__&#x27;:    time.sleep(20)    while True:        ip = getLocalIP()        if ip == False:            post(&#x27;finding ip ~&#x27;)        else:            print(ip)            post(ip)            time.sleep(5)        break</code></pre><h2 id="配置开机自启动"><a href="#配置开机自启动" class="headerlink" title="配置开机自启动"></a>配置开机自启动</h2><pre><code class="hljs shell">pi@raspbian:/$ cat /boot/rc-local<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span><span class="hljs-meta">#</span><span class="bash"> Print the IP address</span>_IP=$(hostname -I) || trueif [ &quot;$_IP&quot; ]; then  printf &quot;IP address is %s\n&quot; &quot;$_IP&quot;fiecho &quot;rc-local bash echo test.&quot;sleep 1mpython /home/pi/ip_send.pyexit 0</code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.cnblogs.com/kekeoutlook/p/12723833.html">树莓派python获取自身IP</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://www.z10.xin/archives/771">树莓派开机后把 IP 地址信息，自动推送到微信的方法 | 中心线</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="http://sc.ftqq.com/3.version">Server酱</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>微信</tag>
      
      <tag>server酱</tag>
      
      <tag>ip发送</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[06:USB摄像头和motion实现监控]</title>
    <link href="/2020/07/13/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B06USB%E6%91%84%E5%83%8F%E5%A4%B4%E5%92%8Cmotion%E5%AE%9E%E7%8E%B0%E7%9B%91%E6%8E%A7%5D/"/>
    <url>/2020/07/13/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B06USB%E6%91%84%E5%83%8F%E5%A4%B4%E5%92%8Cmotion%E5%AE%9E%E7%8E%B0%E7%9B%91%E6%8E%A7%5D/</url>
    
    <content type="html"><![CDATA[<p><span class="label label-primary"><br>  这篇文章主要为大家详细介绍了树莓派使用USB摄像头和motion实现监控，具有一定的参考价值，感兴趣的小伙伴们可以参考一下。</span></p><p>本文实例为大家分享了树莓派使用USB摄像头和motion实现监控的具体代码，供大家参考，具体内容如下</p><h2 id="一、工具"><a href="#一、工具" class="headerlink" title="一、工具"></a>一、工具</h2><p>1、树莓派<br>2、USB摄像头</p><h2 id="二、操作步骤"><a href="#二、操作步骤" class="headerlink" title="二、操作步骤"></a>二、操作步骤</h2><h3 id="0、连接并测试USB摄像头"><a href="#0、连接并测试USB摄像头" class="headerlink" title="0、连接并测试USB摄像头"></a>0、连接并测试USB摄像头</h3><p>树莓派接USB摄像头十分简单，毕竟树莓派是Linux系统的卡片电脑，将买来的USB摄像头直接连在树莓派的USB口上，然后我们看看摄像头是否被识别，有两种方法：</p><pre><code class="hljs shell">1. 使用lsusb命令pi@raspbian:~$ lsusbBus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hubBus 001 Device 003: ID 1871:0101 Aveo Technology Corp. UVC camera (Bresser microscope)Bus 001 Device 002: ID 2109:3431 VIA Labs, Inc. HubBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub</code></pre><p>SSH终端会显示树莓派当前接入的USB设备列表，我们可以先不插摄像头，lsusb，然后插上摄像头lsusb，就可以看到USB摄像头对应的是哪个设备了。</p><pre><code class="hljs shell">2. 查看设备文件也可以查看设备文件，输入命令：pi@raspbian:~$ ls /dev/video*/dev/video0  /dev/video1  /dev/video10  /dev/video11  /dev/video12  /dev/video13  /dev/video14  /dev/video15  /dev/video16</code></pre><pre><code class="hljs shell">3、本人实测摄像画面。安装mplayer，终端运行：sudo apt-get install mplayersudo mplayer tv://</code></pre><p><span class="label label-primary">注意事项：须在安装vnc桌面情况下查看⚠</span></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122214638.png" alt=""></p><h3 id="1、安装motion"><a href="#1、安装motion" class="headerlink" title="1、安装motion"></a>1、安装motion</h3><pre><code class="hljs shell">sudo apt-get install motion</code></pre><h3 id="2、配置motion"><a href="#2、配置motion" class="headerlink" title="2、配置motion"></a>2、配置motion</h3><p>(1)让motion可以一直在后台运行</p><pre><code class="hljs shell">sudo nano /etc/default/motion</code></pre><p>将里面的no修改成yes，让motion可以一直在后台运行：start_motion_daemon=yes</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122214717.jpg" alt=""></p><p>(2)修改其他配置</p><pre><code class="hljs shell">一些常见参数：daemon on                        #开启守护进程（选配）target_dir /home/pi/motion-images    #图片保存的路径<span class="hljs-meta">#</span><span class="bash">videodevice /dev/video0            <span class="hljs-comment">#摄像头设备（默认）可修改            </span></span>stream_localhost off                 #允许通过网页查看摄像头stream_auth_method 2               #开启密码认证stream_authentication 用户名:密码    #网页查看摄像头的用户名和密码</code></pre><p>具体修改如下：</p><pre><code class="hljs shell">sudo nano /etc/motion/motion.conf</code></pre><p>修改配置文件，这个文件比较长，请确保一下参数的配置。在nano编辑器下，可以使用^w快速查找到如下配置内容。也可以使用^v向下翻页。</p><h4 id="开启终端启动和后台模式"><a href="#开启终端启动和后台模式" class="headerlink" title="开启终端启动和后台模式"></a>开启终端启动和后台模式</h4><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122214900.jpg" alt=""></p><h4 id="网页端口"><a href="#网页端口" class="headerlink" title="网页端口"></a>网页端口</h4><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122214917.jpg" alt=""></p><h4 id="监控宽度高度"><a href="#监控宽度高度" class="headerlink" title="监控宽度高度"></a>监控宽度高度</h4><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122214933.jpg" alt=""></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122214948.jpg" alt=""></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122215002.jpg" alt=""></p><h3 id="3、启动motion"><a href="#3、启动motion" class="headerlink" title="3、启动motion"></a>3、启动motion</h3><pre><code class="hljs shell">sudo motion</code></pre><h3 id="4、查看视频数据"><a href="#4、查看视频数据" class="headerlink" title="4、查看视频数据"></a>4、查看视频数据</h3><p>在局域网内的设备，不管是手机还是电脑，均可打开浏览器访问树莓派IP:8081</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122215035.png" alt=""></p><h3 id="5、退出motion"><a href="#5、退出motion" class="headerlink" title="5、退出motion"></a>5、退出motion</h3><pre><code class="hljs shell">killall -TERM motion</code></pre><p>或者</p><pre><code class="hljs shell">service motion stop</code></pre><h3 id="6、-设置为开机运行（选配）"><a href="#6、-设置为开机运行（选配）" class="headerlink" title="6、 设置为开机运行（选配）"></a>6、 设置为开机运行（选配）</h3><pre><code class="hljs shell">sudo vim /etc/rc.local</code></pre><p>在exit 0前添加 motion , 保存，就会开机自动运行了。</p><h3 id="附件一-motion-conf"><a href="#附件一-motion-conf" class="headerlink" title="附件一 motion.conf"></a>附件一 motion.conf</h3><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> Rename this distribution example file to motion.conf</span><span class="hljs-meta">#</span><span class="hljs-meta">#</span><span class="bash"> This config file was generated by motion 4.1.1</span><span class="hljs-meta">#</span><span class="bash"> Documentation:  /usr/share/doc/motion/motion_guide.html</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Daemon</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Start <span class="hljs-keyword">in</span> daemon (background) mode and release terminal (default: off)</span>daemon on<span class="hljs-meta">#</span><span class="bash"> File to store the process ID, also called pid file. (default: not defined)</span>process_id_file /var/run/motion/motion.pid<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Basic Setup Mode</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Start <span class="hljs-keyword">in</span> Setup-Mode, daemon disabled. (default: off)</span>setup_mode off<span class="hljs-meta">#</span><span class="bash"> Use a file to save logs messages, <span class="hljs-keyword">if</span> not defined stderr and syslog is used. (default: not defined)</span>logfile /var/log/motion/motion.log<span class="hljs-meta">#</span><span class="bash"> Level of <span class="hljs-built_in">log</span> messages [1..9] (EMG, ALR, CRT, ERR, WRN, NTC, INF, DBG, ALL). (default: 6 / NTC)</span>log_level 6<span class="hljs-meta">#</span><span class="bash"> Filter to <span class="hljs-built_in">log</span> messages by <span class="hljs-built_in">type</span> (COR, STR, ENC, NET, DBL, EVT, TRK, VID, ALL). (default: ALL)</span>log_type all<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">##########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Capture device options</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Videodevice to be used <span class="hljs-keyword">for</span> capturing  (default /dev/video0)</span><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-keyword">for</span> FreeBSD default is /dev/bktr0</span>videodevice /dev/video0<span class="hljs-meta">#</span><span class="bash"> v4l2_palette allows one to choose preferable palette to be use by motion</span><span class="hljs-meta">#</span><span class="bash"> See motion_guide.html <span class="hljs-keyword">for</span> the valid options and values.  (default: 17)</span>v4l2_palette 17<span class="hljs-meta">#</span><span class="bash"> Tuner device to be used <span class="hljs-keyword">for</span> capturing using tuner as <span class="hljs-built_in">source</span> (default /dev/tuner0)</span><span class="hljs-meta">#</span><span class="bash"> This is ONLY used <span class="hljs-keyword">for</span> FreeBSD. Leave it commented out <span class="hljs-keyword">for</span> Linux</span>; tunerdevice /dev/tuner0<span class="hljs-meta">#</span><span class="bash"> The video input to be used (default: -1)</span><span class="hljs-meta">#</span><span class="bash"> Should normally be <span class="hljs-built_in">set</span> to 0 or 1 <span class="hljs-keyword">for</span> video/TV cards, and -1 <span class="hljs-keyword">for</span> USB cameras</span><span class="hljs-meta">#</span><span class="bash"> Set to 0 <span class="hljs-keyword">for</span> uvideo(4) on OpenBSD</span>input -1<span class="hljs-meta">#</span><span class="bash"> The video norm to use (only <span class="hljs-keyword">for</span> video capture and TV tuner cards)</span><span class="hljs-meta">#</span><span class="bash"> Values: 0 (PAL), 1 (NTSC), 2 (SECAM), 3 (PAL NC no colour). Default: 0 (PAL)</span>norm 0<span class="hljs-meta">#</span><span class="bash"> The frequency to <span class="hljs-built_in">set</span> the tuner to (kHz) (only <span class="hljs-keyword">for</span> TV tuner cards) (default: 0)</span>frequency 0<span class="hljs-meta">#</span><span class="bash"> Override the power line frequency <span class="hljs-keyword">for</span> the webcam. (normally not necessary)</span><span class="hljs-meta">#</span><span class="bash"> Values:</span><span class="hljs-meta">#</span><span class="bash"> -1 : Do not modify device setting</span><span class="hljs-meta">#</span><span class="bash"> 0  : Power line frequency Disabled</span><span class="hljs-meta">#</span><span class="bash"> 1  : 50hz</span><span class="hljs-meta">#</span><span class="bash"> 2  : 60hz</span><span class="hljs-meta">#</span><span class="bash"> 3  : Auto</span>power_line_frequency -1<span class="hljs-meta">#</span><span class="bash"> Rotate image this number of degrees. The rotation affects all saved images as</span><span class="hljs-meta">#</span><span class="bash"> well as movies. Valid values: 0 (default = no rotation), 90, 180 and 270.</span>rotate 0<span class="hljs-meta">#</span><span class="bash"> Flip image over a given axis (vertical or horizontal), vertical means from left to right</span><span class="hljs-meta">#</span><span class="bash"> horizontal means top to bottom. Valid values: none, v and h.</span>flip_axis none<span class="hljs-meta">#</span><span class="bash"> Image width (pixels). Valid range: Camera dependent, default: 320</span>width 800<span class="hljs-meta">#</span><span class="bash"> Image height (pixels). Valid range: Camera dependent, default: 240</span>height 600<span class="hljs-meta">#</span><span class="bash"> Maximum number of frames to be captured per second.</span><span class="hljs-meta">#</span><span class="bash"> Valid range: 2-100. Default: 100 (almost no <span class="hljs-built_in">limit</span>).</span>framerate 2<span class="hljs-meta">#</span><span class="bash"> Minimum time <span class="hljs-keyword">in</span> seconds between capturing picture frames from the camera.</span><span class="hljs-meta">#</span><span class="bash"> Default: 0 = disabled - the capture rate is given by the camera framerate.</span><span class="hljs-meta">#</span><span class="bash"> This option is used when you want to capture images at a rate lower than 2 per second.</span>minimum_frame_time 0<span class="hljs-meta">#</span><span class="bash"> Full Network Camera URL.  Valid Services: http:// ftp:// mjpg:// rtsp:// mjpeg:// file:// rtmp://</span>; netcam_url value<span class="hljs-meta">#</span><span class="bash"> Username and password <span class="hljs-keyword">for</span> network camera <span class="hljs-keyword">if</span> required. Syntax is user:password</span>; netcam_userpass value<span class="hljs-meta">#</span><span class="bash"> The setting <span class="hljs-keyword">for</span> keep-alive of network socket, should improve performance on compatible net cameras.</span><span class="hljs-meta">#</span><span class="bash"> off:   The historical implementation using HTTP/1.0, closing the socket after each http request.</span><span class="hljs-meta">#</span><span class="bash"> force: Use HTTP/1.0 requests with keep alive header to reuse the same connection.</span><span class="hljs-meta">#</span><span class="bash"> on:    Use HTTP/1.1 requests that support keep alive as default.</span><span class="hljs-meta">#</span><span class="bash"> Default: off</span>netcam_keepalive off<span class="hljs-meta">#</span><span class="bash"> URL to use <span class="hljs-keyword">for</span> a netcam proxy server, <span class="hljs-keyword">if</span> required, e.g. <span class="hljs-string">&quot;http://myproxy&quot;</span>.</span><span class="hljs-meta">#</span><span class="bash"> If a port number other than 80 is needed, use <span class="hljs-string">&quot;http://myproxy:1234&quot;</span>.</span><span class="hljs-meta">#</span><span class="bash"> Default: not defined</span>; netcam_proxy value<span class="hljs-meta">#</span><span class="bash"> Set less strict jpeg checks <span class="hljs-keyword">for</span> network cameras with a poor/buggy firmware.</span><span class="hljs-meta">#</span><span class="bash"> Default: off</span>netcam_tolerant_check off<span class="hljs-meta">#</span><span class="bash"> RTSP connection uses TCP to communicate to the camera. Can prevent image corruption.</span><span class="hljs-meta">#</span><span class="bash"> Default: on</span>rtsp_uses_tcp on<span class="hljs-meta">#</span><span class="bash"> Name of camera to use <span class="hljs-keyword">if</span> you are using a camera accessed through OpenMax/MMAL</span><span class="hljs-meta">#</span><span class="bash"> Default: Not defined</span>; mmalcam_name vc.ril.camera<span class="hljs-meta">#</span><span class="bash"> Camera control parameters (see raspivid/raspistill tool documentation)</span><span class="hljs-meta">#</span><span class="bash"> Default: Not defined</span>; mmalcam_control_params -hf<span class="hljs-meta">#</span><span class="bash"> Let motion regulate the brightness of a video device (default: off).</span><span class="hljs-meta">#</span><span class="bash"> The auto_brightness feature uses the brightness option as its target value.</span><span class="hljs-meta">#</span><span class="bash"> If brightness is zero auto_brightness will adjust to average brightness value 128.</span><span class="hljs-meta">#</span><span class="bash"> Only recommended <span class="hljs-keyword">for</span> cameras without auto brightness</span>auto_brightness off<span class="hljs-meta">#</span><span class="bash"> Set the initial brightness of a video device.</span><span class="hljs-meta">#</span><span class="bash"> If auto_brightness is enabled, this value defines the average brightness level</span><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">which</span> Motion will try and adjust to.</span><span class="hljs-meta">#</span><span class="bash"> Valid range 0-255, default 0 = disabled</span>brightness 0<span class="hljs-meta">#</span><span class="bash"> Set the contrast of a video device.</span><span class="hljs-meta">#</span><span class="bash"> Valid range 0-255, default 0 = disabled</span>contrast 0<span class="hljs-meta">#</span><span class="bash"> Set the saturation of a video device.</span><span class="hljs-meta">#</span><span class="bash"> Valid range 0-255, default 0 = disabled</span>saturation 0<span class="hljs-meta">#</span><span class="bash"> Set the hue of a video device (NTSC feature).</span><span class="hljs-meta">#</span><span class="bash"> Valid range 0-255, default 0 = disabled</span>hue 0<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Round Robin (multiple inputs on same video device name)</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Number of frames to capture <span class="hljs-keyword">in</span> each roundrobin step (default: 1)</span>roundrobin_frames 1<span class="hljs-meta">#</span><span class="bash"> Number of frames to skip before each roundrobin step (default: 1)</span>roundrobin_skip 1<span class="hljs-meta">#</span><span class="bash"> Try to filter out noise generated by roundrobin (default: off)</span>switchfilter off<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Motion Detection Settings:</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Threshold <span class="hljs-keyword">for</span> number of changed pixels <span class="hljs-keyword">in</span> an image that</span><span class="hljs-meta">#</span><span class="bash"> triggers motion detection (default: 1500)</span>threshold 1500<span class="hljs-meta">#</span><span class="bash"> Automatically tune the threshold down <span class="hljs-keyword">if</span> possible (default: off)</span>threshold_tune off<span class="hljs-meta">#</span><span class="bash"> Noise threshold <span class="hljs-keyword">for</span> the motion detection (default: 32)</span>noise_level 32<span class="hljs-meta">#</span><span class="bash"> Automatically tune the noise threshold (default: on)</span>noise_tune on<span class="hljs-meta">#</span><span class="bash"> Despeckle motion image using (e)rode or (d)ilate or (l)abel (Default: not defined)</span><span class="hljs-meta">#</span><span class="bash"> Recommended value is EedDl. Any combination (and number of) of E, e, d, and D is valid.</span><span class="hljs-meta">#</span><span class="bash"> (l)abeling must only be used once and the <span class="hljs-string">&#x27;l&#x27;</span> must be the last letter.</span><span class="hljs-meta">#</span><span class="bash"> Comment out to <span class="hljs-built_in">disable</span></span>despeckle_filter EedDl<span class="hljs-meta">#</span><span class="bash"> Detect motion <span class="hljs-keyword">in</span> predefined areas (1 - 9). Areas are numbered like that:  1 2 3</span><span class="hljs-meta">#</span><span class="bash"> A script (on_area_detected) is started immediately when motion is         4 5 6</span><span class="hljs-meta">#</span><span class="bash"> detected <span class="hljs-keyword">in</span> one of the given areas, but only once during an event.        7 8 9</span><span class="hljs-meta">#</span><span class="bash"> One or more areas can be specified with this option. Take care: This option</span><span class="hljs-meta">#</span><span class="bash"> does NOT restrict detection to these areas! (Default: not defined)</span>; area_detect value<span class="hljs-meta">#</span><span class="bash"> PGM file to use as a sensitivity mask.</span><span class="hljs-meta">#</span><span class="bash"> Full path name to. (Default: not defined)</span>; mask_file value<span class="hljs-meta">#</span><span class="bash"> PGM file to completely mask out a area of image.</span><span class="hljs-meta">#</span><span class="bash"> Full path name to. (Default: not defined)</span><span class="hljs-meta">#</span><span class="bash"> mask_privacy value</span><span class="hljs-meta">#</span><span class="bash"> Dynamically create a mask file during operation (default: 0)</span><span class="hljs-meta">#</span><span class="bash"> Adjust speed of mask changes from 0 (off) to 10 (fast)</span>smart_mask_speed 0<span class="hljs-meta">#</span><span class="bash"> Ignore sudden massive light intensity changes given as a percentage of the picture</span><span class="hljs-meta">#</span><span class="bash"> area that changed intensity. Valid range: 0 - 100 , default: 0 = disabled</span>lightswitch 0<span class="hljs-meta">#</span><span class="bash"> Picture frames must contain motion at least the specified number of frames</span><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-keyword">in</span> a row before they are detected as <span class="hljs-literal">true</span> motion. At the default of 1, all</span><span class="hljs-meta">#</span><span class="bash"> motion is detected. Valid range: 1 to thousands, recommended 1-5</span>minimum_motion_frames 1<span class="hljs-meta">#</span><span class="bash"> Specifies the number of pre-captured (buffered) pictures from before motion</span><span class="hljs-meta">#</span><span class="bash"> was detected that will be output at motion detection.</span><span class="hljs-meta">#</span><span class="bash"> Recommended range: 0 to 5 (default: 0)</span><span class="hljs-meta">#</span><span class="bash"> Do not use large values! Large values will cause Motion to skip video frames and</span><span class="hljs-meta">#</span><span class="bash"> cause unsmooth movies. To smooth movies use larger values of post_capture instead.</span>pre_capture 0<span class="hljs-meta">#</span><span class="bash"> Number of frames to capture after motion is no longer detected (default: 0)</span>post_capture 0<span class="hljs-meta">#</span><span class="bash"> Event Gap is the seconds of no motion detection that triggers the end of an event.</span><span class="hljs-meta">#</span><span class="bash"> An event is defined as a series of motion images taken within a short timeframe.</span><span class="hljs-meta">#</span><span class="bash"> Recommended value is 60 seconds (Default). The value -1 is allowed and disables</span><span class="hljs-meta">#</span><span class="bash"> events causing all Motion to be written to one single movie file and no pre_capture.</span><span class="hljs-meta">#</span><span class="bash"> If <span class="hljs-built_in">set</span> to 0, motion is running <span class="hljs-keyword">in</span> gapless mode. Movies don<span class="hljs-string">&#x27;t have gaps anymore. An</span></span><span class="hljs-meta">#</span><span class="bash"> event ends right after no more motion is detected and post_capture is over.</span>event_gap 60<span class="hljs-meta">#</span><span class="bash"> Maximum length <span class="hljs-keyword">in</span> seconds of a movie</span><span class="hljs-meta">#</span><span class="bash"> When value is exceeded a new movie file is created. (Default: 0 = infinite)</span>max_movie_time 0<span class="hljs-meta">#</span><span class="bash"> Always save images even <span class="hljs-keyword">if</span> there was no motion (default: off)</span>emulate_motion off<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Image File Output</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Output <span class="hljs-string">&#x27;normal&#x27;</span> pictures when motion is detected (default: off)</span><span class="hljs-meta">#</span><span class="bash"> Valid values: on, off, first, best, center</span><span class="hljs-meta">#</span><span class="bash"> When <span class="hljs-built_in">set</span> to <span class="hljs-string">&#x27;first&#x27;</span>, only the first picture of an event is saved.</span><span class="hljs-meta">#</span><span class="bash"> Picture with most motion of an event is saved when <span class="hljs-built_in">set</span> to <span class="hljs-string">&#x27;best&#x27;</span>.</span><span class="hljs-meta">#</span><span class="bash"> Picture with motion nearest center of picture is saved when <span class="hljs-built_in">set</span> to <span class="hljs-string">&#x27;center&#x27;</span>.</span><span class="hljs-meta">#</span><span class="bash"> Can be used as preview shot <span class="hljs-keyword">for</span> the corresponding movie.</span>output_pictures off<span class="hljs-meta">#</span><span class="bash"> Output pictures with only the pixels moving object (ghost images) (default: off)</span>output_debug_pictures off<span class="hljs-meta">#</span><span class="bash"> The quality (<span class="hljs-keyword">in</span> percent) to be used by the jpeg and webp compression (default: 75)</span>quality 75<span class="hljs-meta">#</span><span class="bash"> Type of output images</span><span class="hljs-meta">#</span><span class="bash"> Valid values: jpeg, ppm or webp (default: jpeg)</span>picture_type jpeg<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Use ffmpeg to encode videos of motion (default: off)</span>ffmpeg_output_movies on<span class="hljs-meta">#</span><span class="bash"> Use ffmpeg to make videos showing the moving pixels (ghost images) (default: off)</span>ffmpeg_output_debug_movies off<span class="hljs-meta">#</span><span class="bash"> Bitrate to be used by the ffmpeg encoder (default: 400000)</span><span class="hljs-meta">#</span><span class="bash"> This option is ignored <span class="hljs-keyword">if</span> ffmpeg_variable_bitrate is not 0 (disabled)</span>ffmpeg_bps 400000<span class="hljs-meta">#</span><span class="bash"> Enables and defines variable bitrate <span class="hljs-keyword">for</span> the ffmpeg encoder.</span><span class="hljs-meta">#</span><span class="bash"> ffmpeg_bps is ignored <span class="hljs-keyword">if</span> variable bitrate is enabled.</span><span class="hljs-meta">#</span><span class="bash"> Valid values: 0 (default) = fixed bitrate defined by ffmpeg_bps,</span><span class="hljs-meta">#</span><span class="bash"> or the range 1 - 100 <span class="hljs-built_in">where</span> 1 means worst quality and 100 is best.</span>ffmpeg_variable_bitrate 0<span class="hljs-meta">#</span><span class="bash"> Container/Codec output videos</span><span class="hljs-meta">#</span><span class="bash"> Valid values: mpeg4, msmpeg4, swf,flv, ffv1, mov, mp4, mkv, hevc</span>ffmpeg_video_codec mkv<span class="hljs-meta">#</span><span class="bash"> When creating videos, should frames be duplicated <span class="hljs-keyword">in</span> order</span><span class="hljs-meta">#</span><span class="bash"> to keep up with the requested frames per second</span><span class="hljs-meta">#</span><span class="bash"> (default: <span class="hljs-literal">true</span>)</span>ffmpeg_duplicate_frames true<span class="hljs-meta">#</span><span class="bash"> Interval <span class="hljs-keyword">in</span> seconds between timelapse captures.  Default: 0 = off</span>timelapse_interval 0<span class="hljs-meta">#</span><span class="bash"> Timelapse file rollover mode. See motion_guide.html <span class="hljs-keyword">for</span> options and uses.</span>timelapse_mode daily<span class="hljs-meta">#</span><span class="bash"> Frame rate <span class="hljs-keyword">for</span> timelapse playback</span>timelapse_fps 30<span class="hljs-meta">#</span><span class="bash"> Container/Codec <span class="hljs-keyword">for</span> timelapse video. Valid values: mpg or mpeg4</span>timelapse_codec mpg<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> External pipe to video encoder</span><span class="hljs-meta">#</span><span class="bash"> Replacement <span class="hljs-keyword">for</span> FFMPEG <span class="hljs-built_in">builtin</span> encoder <span class="hljs-keyword">for</span> ffmpeg_output_movies only.</span><span class="hljs-meta">#</span><span class="bash"> The options movie_filename and timelapse_filename are also used</span><span class="hljs-meta">#</span><span class="bash"> by the ffmpeg feature</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">############################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Bool to <span class="hljs-built_in">enable</span> or <span class="hljs-built_in">disable</span> extpipe (default: off)</span>use_extpipe off<span class="hljs-meta">#</span><span class="bash"> External program (full path and opts) to pipe raw video to</span><span class="hljs-meta">#</span><span class="bash"> Generally, use <span class="hljs-string">&#x27;-&#x27;</span> <span class="hljs-keyword">for</span> STDIN...</span>;extpipe mencoder -demuxer rawvideo -rawvideo w=%w:h=%h:i420 -ovc x264 -x264encopts bframes=4:frameref=1:subq=1:scenecut=-1:nob_adapt:threads=1:keyint=1000:8x8dct:vbv_bufsize=4000:crf=24:partitions=i8x8,i4x4:vbv_maxrate=800:no-chroma-me -vf denoise3d=16:12:48:4,pp=lb -of   avi -o %f.avi - -fps %fps;extpipe x264 - --input-res %wx%h --fps %fps --bitrate 2000 --preset ultrafast --quiet -o %f.mp4;extpipe mencoder -demuxer rawvideo -rawvideo w=%w:h=%h:fps=%fps -ovc x264 -x264encopts preset=ultrafast -of lavf -o %f.mp4 - -fps %fps;extpipe ffmpeg -y -f rawvideo -pix_fmt yuv420p -video_size %wx%h -framerate %fps -i pipe:0 -vcodec libx264 -preset ultrafast -f mp4 %f.mp4<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Snapshots (Traditional Periodic Webcam File Output)</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Make automated snapshot every N seconds (default: 0 = disabled)</span>snapshot_interval 0<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Text Display</span><span class="hljs-meta">#</span><span class="bash"> %Y = year, %m = month, %d = date,</span><span class="hljs-meta">#</span><span class="bash"> %H = hour, %M = minute, %S = second, %T = HH:MM:SS,</span><span class="hljs-meta">#</span><span class="bash"> %v = event, %q = frame number, %t = camera id number,</span><span class="hljs-meta">#</span><span class="bash"> %D = changed pixels, %N = noise level, \n = new line,</span><span class="hljs-meta">#</span><span class="bash"> %i and %J = width and height of motion area,</span><span class="hljs-meta">#</span><span class="bash"> %K and %L = X and Y coordinates of motion center</span><span class="hljs-meta">#</span><span class="bash"> %C = value defined by text_event - <span class="hljs-keyword">do</span> not use with text_event!</span><span class="hljs-meta">#</span><span class="bash"> You can put quotation marks around the text to allow</span><span class="hljs-meta">#</span><span class="bash"> leading spaces</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Locate and draw a box around the moving object.</span><span class="hljs-meta">#</span><span class="bash"> Valid values: on, off, preview (default: off)</span><span class="hljs-meta">#</span><span class="bash"> Set to <span class="hljs-string">&#x27;preview&#x27;</span> will only draw a box <span class="hljs-keyword">in</span> preview_shot pictures.</span>locate_motion_mode off<span class="hljs-meta">#</span><span class="bash"> Set the look and style of the locate box <span class="hljs-keyword">if</span> enabled.</span><span class="hljs-meta">#</span><span class="bash"> Valid values: box, redbox, cross, redcross (default: box)</span><span class="hljs-meta">#</span><span class="bash"> Set to <span class="hljs-string">&#x27;box&#x27;</span> will draw the traditional box.</span><span class="hljs-meta">#</span><span class="bash"> Set to <span class="hljs-string">&#x27;redbox&#x27;</span> will draw a red box.</span><span class="hljs-meta">#</span><span class="bash"> Set to <span class="hljs-string">&#x27;cross&#x27;</span> will draw a little cross to mark center.</span><span class="hljs-meta">#</span><span class="bash"> Set to <span class="hljs-string">&#x27;redcross&#x27;</span> will draw a little red cross to mark center.</span>locate_motion_style box<span class="hljs-meta">#</span><span class="bash"> Draws the timestamp using same options as C <span class="hljs-keyword">function</span> strftime(3)</span><span class="hljs-meta">#</span><span class="bash"> Default: %Y-%m-%d\n%T = date <span class="hljs-keyword">in</span> ISO format and time <span class="hljs-keyword">in</span> 24 hour clock</span><span class="hljs-meta">#</span><span class="bash"> Text is placed <span class="hljs-keyword">in</span> lower right corner</span>text_right %Y-%m-%d\n%T-%q<span class="hljs-meta">#</span><span class="bash"> Draw a user defined text on the images using same options as C <span class="hljs-keyword">function</span> strftime(3)</span><span class="hljs-meta">#</span><span class="bash"> Default: Not defined = no text</span><span class="hljs-meta">#</span><span class="bash"> Text is placed <span class="hljs-keyword">in</span> lower left corner</span>; text_left CAMERA %t<span class="hljs-meta">#</span><span class="bash"> Draw the number of changed pixed on the images (default: off)</span><span class="hljs-meta">#</span><span class="bash"> Will normally be <span class="hljs-built_in">set</span> to off except when you setup and adjust the motion settings</span><span class="hljs-meta">#</span><span class="bash"> Text is placed <span class="hljs-keyword">in</span> upper right corner</span>text_changes off<span class="hljs-meta">#</span><span class="bash"> This option defines the value of the special event conversion specifier %C</span><span class="hljs-meta">#</span><span class="bash"> You can use any conversion specifier <span class="hljs-keyword">in</span> this option except %C. Date and time</span><span class="hljs-meta">#</span><span class="bash"> values are from the timestamp of the first image <span class="hljs-keyword">in</span> the current event.</span><span class="hljs-meta">#</span><span class="bash"> Default: %Y%m%d%H%M%S</span><span class="hljs-meta">#</span><span class="bash"> The idea is that %C can be used filenames and text_left/right <span class="hljs-keyword">for</span> creating</span><span class="hljs-meta">#</span><span class="bash"> a unique identifier <span class="hljs-keyword">for</span> each event.</span>text_event %Y%m%d%H%M%S<span class="hljs-meta">#</span><span class="bash"> Draw characters at twice normal size on images. (default: off)</span>text_double off<span class="hljs-meta">#</span><span class="bash"> Text to include <span class="hljs-keyword">in</span> a JPEG EXIF comment</span><span class="hljs-meta">#</span><span class="bash"> May be any text, including conversion specifiers.</span><span class="hljs-meta">#</span><span class="bash"> The EXIF timestamp is included independent of this text.</span>;exif_text %i%J/%K%L<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Target Directories and filenames For Images And Films</span><span class="hljs-meta">#</span><span class="bash"> For the options snapshot_, picture_, movie_ and timelapse_filename</span><span class="hljs-meta">#</span><span class="bash"> you can use conversion specifiers</span><span class="hljs-meta">#</span><span class="bash"> %Y = year, %m = month, %d = date,</span><span class="hljs-meta">#</span><span class="bash"> %H = hour, %M = minute, %S = second,</span><span class="hljs-meta">#</span><span class="bash"> %v = event, %q = frame number, %t = camera id number,</span><span class="hljs-meta">#</span><span class="bash"> %D = changed pixels, %N = noise level,</span><span class="hljs-meta">#</span><span class="bash"> %i and %J = width and height of motion area,</span><span class="hljs-meta">#</span><span class="bash"> %K and %L = X and Y coordinates of motion center</span><span class="hljs-meta">#</span><span class="bash"> %C = value defined by text_event</span><span class="hljs-meta">#</span><span class="bash"> Quotation marks round string are allowed.</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Target base directory <span class="hljs-keyword">for</span> pictures and films</span><span class="hljs-meta">#</span><span class="bash"> Recommended to use absolute path. (Default: current working directory)</span>target_dir /var/lib/motion<span class="hljs-meta">#</span><span class="bash"> File path <span class="hljs-keyword">for</span> snapshots (jpeg, ppm or webp) relative to target_dir</span><span class="hljs-meta">#</span><span class="bash"> Default: %v-%Y%m%d%H%M%S-snapshot</span><span class="hljs-meta">#</span><span class="bash"> Default value is equivalent to legacy oldlayout option</span><span class="hljs-meta">#</span><span class="bash"> For Motion 3.0 compatible mode choose: %Y/%m/%d/%H/%M/%S-snapshot</span><span class="hljs-meta">#</span><span class="bash"> File extension .jpg, .ppm or .webp is automatically added so <span class="hljs-keyword">do</span> not include this.</span><span class="hljs-meta">#</span><span class="bash"> Note: A symbolic link called lastsnap.jpg created <span class="hljs-keyword">in</span> the target_dir will always</span><span class="hljs-meta">#</span><span class="bash"> point to the latest snapshot, unless snapshot_filename is exactly <span class="hljs-string">&#x27;lastsnap&#x27;</span></span>snapshot_filename %v-%Y%m%d%H%M%S-snapshot<span class="hljs-meta">#</span><span class="bash"> File path <span class="hljs-keyword">for</span> motion triggered images (jpeg, ppm or .webp) relative to target_dir</span><span class="hljs-meta">#</span><span class="bash"> Default: %v-%Y%m%d%H%M%S-%q</span><span class="hljs-meta">#</span><span class="bash"> Default value is equivalent to legacy oldlayout option</span><span class="hljs-meta">#</span><span class="bash"> For Motion 3.0 compatible mode choose: %Y/%m/%d/%H/%M/%S-%q</span><span class="hljs-meta">#</span><span class="bash"> File extension .jpg, .ppm or .webp is automatically added so <span class="hljs-keyword">do</span> not include this</span><span class="hljs-meta">#</span><span class="bash"> Set to <span class="hljs-string">&#x27;preview&#x27;</span> together with best-preview feature enables special naming</span><span class="hljs-meta">#</span><span class="bash"> convention <span class="hljs-keyword">for</span> preview shots. See motion guide <span class="hljs-keyword">for</span> details</span>picture_filename %v-%Y%m%d%H%M%S-%q<span class="hljs-meta">#</span><span class="bash"> File path <span class="hljs-keyword">for</span> motion triggered ffmpeg films (movies) relative to target_dir</span><span class="hljs-meta">#</span><span class="bash"> Default: %v-%Y%m%d%H%M%S</span><span class="hljs-meta">#</span><span class="bash"> File extensions(.mpg .avi) are automatically added so <span class="hljs-keyword">do</span> not include them</span>movie_filename %v-%Y%m%d%H%M%S<span class="hljs-meta">#</span><span class="bash"> File path <span class="hljs-keyword">for</span> timelapse movies relative to target_dir</span><span class="hljs-meta">#</span><span class="bash"> Default: %Y%m%d-timelapse</span><span class="hljs-meta">#</span><span class="bash"> File extensions(.mpg .avi) are automatically added so <span class="hljs-keyword">do</span> not include them</span>timelapse_filename %Y%m%d-timelapse<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Global Network Options</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Enable IPv6 (default: off)</span>ipv6_enabled off<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Live Stream Server</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> The mini-http server listens to this port <span class="hljs-keyword">for</span> requests (default: 0 = disabled)</span>stream_port 8081<span class="hljs-meta">#</span><span class="bash"> 50% scaled down substream (default: 0 = disabled)</span><span class="hljs-meta">#</span><span class="bash"> substream_port 8082</span><span class="hljs-meta">#</span><span class="bash"> Quality of the jpeg (<span class="hljs-keyword">in</span> percent) images produced (default: 50)</span>stream_quality 50<span class="hljs-meta">#</span><span class="bash"> Output frames at 1 fps when no motion is detected and increase to the</span><span class="hljs-meta">#</span><span class="bash"> rate given by stream_maxrate when motion is detected (default: off)</span>stream_motion off<span class="hljs-meta">#</span><span class="bash"> Maximum framerate <span class="hljs-keyword">for</span> stream streams (default: 1)</span>stream_maxrate 1<span class="hljs-meta">#</span><span class="bash"> Restrict stream connections to localhost only (default: on)</span>stream_localhost off<span class="hljs-meta">#</span><span class="bash"> Limits the number of images per connection (default: 0 = unlimited)</span><span class="hljs-meta">#</span><span class="bash"> Number can be defined by multiplying actual stream rate by desired number of seconds</span><span class="hljs-meta">#</span><span class="bash"> Actual stream rate is the smallest of the numbers framerate and stream_maxrate</span>stream_limit 0<span class="hljs-meta">#</span><span class="bash"> Set the authentication method (default: 0)</span><span class="hljs-meta">#</span><span class="bash"> 0 = disabled</span><span class="hljs-meta">#</span><span class="bash"> 1 = Basic authentication</span><span class="hljs-meta">#</span><span class="bash"> 2 = MD5 digest (the safer authentication)</span>stream_auth_method 0<span class="hljs-meta">#</span><span class="bash"> Authentication <span class="hljs-keyword">for</span> the stream. Syntax username:password</span><span class="hljs-meta">#</span><span class="bash"> Default: not defined (Disabled)</span>; stream_authentication username:password<span class="hljs-meta">#</span><span class="bash"> Percentage to scale the stream image <span class="hljs-keyword">for</span> preview</span><span class="hljs-meta">#</span><span class="bash"> This is scaled on the browser side, motion will keep sending full frames</span><span class="hljs-meta">#</span><span class="bash"> Default: 25</span>; stream_preview_scale 25<span class="hljs-meta">#</span><span class="bash"> Have stream preview image start on a new line</span><span class="hljs-meta">#</span><span class="bash"> Default: no</span>; stream_preview_newline no<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> HTTP Based Control</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> TCP/IP port <span class="hljs-keyword">for</span> the http server to listen on (default: 0 = disabled)</span>webcontrol_port 8080<span class="hljs-meta">#</span><span class="bash"> Restrict control connections to localhost only (default: on)</span>webcontrol_localhost off<span class="hljs-meta">#</span><span class="bash"> Output <span class="hljs-keyword">for</span> http server, select off to choose raw text plain (default: on)</span>webcontrol_html_output on<span class="hljs-meta">#</span><span class="bash"> Authentication <span class="hljs-keyword">for</span> the http based control. Syntax username:password</span><span class="hljs-meta">#</span><span class="bash"> Default: not defined (Disabled)</span>; webcontrol_authentication username:password<span class="hljs-meta">#</span><span class="bash"> Parameters to include on webcontrol.  0=none, 1=limited, 2=advanced, 3=restricted</span><span class="hljs-meta">#</span><span class="bash"> Default: 0 (none)</span>webcontrol_parms 0<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Tracking (Pan/Tilt)</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">############################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Type of tracker (0=none (default), 1=stepper, 2=iomojo, 3=pwc, 4=generic, 5=uvcvideo, 6=servo)</span><span class="hljs-meta">#</span><span class="bash"> The generic <span class="hljs-built_in">type</span> enables the definition of motion center and motion size to</span><span class="hljs-meta">#</span><span class="bash"> be used with the conversion specifiers <span class="hljs-keyword">for</span> options like on_motion_detected</span>track_type 0<span class="hljs-meta">#</span><span class="bash"> Enable auto tracking (default: off)</span>track_auto off<span class="hljs-meta">#</span><span class="bash"> Serial port of motor (default: none)</span>;track_port /dev/ttyS0<span class="hljs-meta">#</span><span class="bash"> Motor number <span class="hljs-keyword">for</span> x-axis (default: 0)</span>;track_motorx 0<span class="hljs-meta">#</span><span class="bash"> Set motorx reverse (default: 0)</span>;track_motorx_reverse 0<span class="hljs-meta">#</span><span class="bash"> Motor number <span class="hljs-keyword">for</span> y-axis (default: 0)</span>;track_motory 1<span class="hljs-meta">#</span><span class="bash"> Set motory reverse (default: 0)</span>;track_motory_reverse 0<span class="hljs-meta">#</span><span class="bash"> Maximum value on x-axis (default: 0)</span>;track_maxx 200<span class="hljs-meta">#</span><span class="bash"> Minimum value on x-axis (default: 0)</span>;track_minx 50<span class="hljs-meta">#</span><span class="bash"> Maximum value on y-axis (default: 0)</span>;track_maxy 200<span class="hljs-meta">#</span><span class="bash"> Minimum value on y-axis (default: 0)</span>;track_miny 50<span class="hljs-meta">#</span><span class="bash"> Center value on x-axis (default: 0)</span>;track_homex 128<span class="hljs-meta">#</span><span class="bash"> Center value on y-axis (default: 0)</span>;track_homey 128<span class="hljs-meta">#</span><span class="bash"> ID of an iomojo camera <span class="hljs-keyword">if</span> used (default: 0)</span>track_iomojo_id 0<span class="hljs-meta">#</span><span class="bash"> Angle <span class="hljs-keyword">in</span> degrees the camera moves per step on the X-axis</span><span class="hljs-meta">#</span><span class="bash"> with auto-track (default: 10)</span><span class="hljs-meta">#</span><span class="bash"> Currently only used with pwc <span class="hljs-built_in">type</span> cameras</span>track_step_angle_x 10<span class="hljs-meta">#</span><span class="bash"> Angle <span class="hljs-keyword">in</span> degrees the camera moves per step on the Y-axis</span><span class="hljs-meta">#</span><span class="bash"> with auto-track (default: 10)</span><span class="hljs-meta">#</span><span class="bash"> Currently only used with pwc <span class="hljs-built_in">type</span> cameras</span>track_step_angle_y 10<span class="hljs-meta">#</span><span class="bash"> Delay to <span class="hljs-built_in">wait</span> <span class="hljs-keyword">for</span> after tracking movement as number</span><span class="hljs-meta">#</span><span class="bash"> of picture frames (default: 10)</span>track_move_wait 10<span class="hljs-meta">#</span><span class="bash"> Speed to <span class="hljs-built_in">set</span> the motor to (stepper motor option) (default: 255)</span>track_speed 255<span class="hljs-meta">#</span><span class="bash"> Number of steps to make (stepper motor option) (default: 40)</span>track_stepsize 40<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> External Commands, Warnings and Logging:</span><span class="hljs-meta">#</span><span class="bash"> You can use conversion specifiers <span class="hljs-keyword">for</span> the on_xxxx commands</span><span class="hljs-meta">#</span><span class="bash"> %Y = year, %m = month, %d = date,</span><span class="hljs-meta">#</span><span class="bash"> %H = hour, %M = minute, %S = second,</span><span class="hljs-meta">#</span><span class="bash"> %v = event, %q = frame number, %t = camera id number,</span><span class="hljs-meta">#</span><span class="bash"> %D = changed pixels, %N = noise level,</span><span class="hljs-meta">#</span><span class="bash"> %i and %J = width and height of motion area,</span><span class="hljs-meta">#</span><span class="bash"> %K and %L = X and Y coordinates of motion center</span><span class="hljs-meta">#</span><span class="bash"> %C = value defined by text_event</span><span class="hljs-meta">#</span><span class="bash"> %f = filename with full path</span><span class="hljs-meta">#</span><span class="bash"> %n = number indicating filetype</span><span class="hljs-meta">#</span><span class="bash"> Both %f and %n are only defined <span class="hljs-keyword">for</span> on_picture_save,</span><span class="hljs-meta">#</span><span class="bash"> on_movie_start and on_movie_end</span><span class="hljs-meta">#</span><span class="bash"> Quotation marks round string are allowed.</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Do not sound beeps when detecting motion (default: on)</span><span class="hljs-meta">#</span><span class="bash"> Note: Motion never beeps when running <span class="hljs-keyword">in</span> daemon mode.</span>quiet on<span class="hljs-meta">#</span><span class="bash"> Command to be executed when an event starts. (default: none)</span><span class="hljs-meta">#</span><span class="bash"> An event starts at first motion detected after a period of no motion defined by event_gap</span>; on_event_start value<span class="hljs-meta">#</span><span class="bash"> Command to be executed when an event ends after a period of no motion</span><span class="hljs-meta">#</span><span class="bash"> (default: none). The period of no motion is defined by option event_gap.</span>; on_event_end value<span class="hljs-meta">#</span><span class="bash"> Command to be executed when a picture (.ppm|.jpg) is saved (default: none)</span><span class="hljs-meta">#</span><span class="bash"> To give the filename as an argument to a <span class="hljs-built_in">command</span> append it with %f</span>; on_picture_save value<span class="hljs-meta">#</span><span class="bash"> Command to be executed when a motion frame is detected (default: none)</span>; on_motion_detected value<span class="hljs-meta">#</span><span class="bash"> Command to be executed when motion <span class="hljs-keyword">in</span> a predefined area is detected</span><span class="hljs-meta">#</span><span class="bash"> Check option <span class="hljs-string">&#x27;area_detect&#x27;</span>.   (default: none)</span>; on_area_detected value<span class="hljs-meta">#</span><span class="bash"> Command to be executed when a movie file (.mpg|.avi) is created. (default: none)</span><span class="hljs-meta">#</span><span class="bash"> To give the filename as an argument to a <span class="hljs-built_in">command</span> append it with %f</span>; on_movie_start value<span class="hljs-meta">#</span><span class="bash"> Command to be executed when a movie file (.mpg|.avi) is closed. (default: none)</span><span class="hljs-meta">#</span><span class="bash"> To give the filename as an argument to a <span class="hljs-built_in">command</span> append it with %f</span>; on_movie_end value<span class="hljs-meta">#</span><span class="bash"> Command to be executed when a camera can<span class="hljs-string">&#x27;t be opened or if it is lost</span></span><span class="hljs-meta">#</span><span class="bash"> NOTE: There is situations when motion don<span class="hljs-string">&#x27;t detect a lost camera!</span></span><span class="hljs-meta">#</span><span class="bash"> It depends on the driver, some drivers dosn<span class="hljs-string">&#x27;t detect a lost camera at all</span></span><span class="hljs-meta">#</span><span class="bash"> Some hangs the motion thread. Some even hangs the PC! (default: none)</span>; on_camera_lost value<span class="hljs-meta">#</span><span class="bash"> Command to be executed when a camera that was lost has been found (default: none)</span><span class="hljs-meta">#</span><span class="bash"> NOTE: If motion doesn<span class="hljs-string">&#x27;t properly detect a lost camera, it also won&#x27;</span>t know it found one.</span>; on_camera_found value<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">####################################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Common Options <span class="hljs-keyword">for</span> database features.</span><span class="hljs-meta">#</span><span class="bash"> Options require database options to be active also.</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">####################################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Log to the database when creating motion triggered picture file  (default: on)</span>; sql_log_picture on<span class="hljs-meta">#</span><span class="bash"> Log to the database when creating a snapshot image file (default: on)</span>; sql_log_snapshot on<span class="hljs-meta">#</span><span class="bash"> Log to the database when creating motion triggered movie file (default: off)</span>; sql_log_movie off<span class="hljs-meta">#</span><span class="bash"> Log to the database when creating timelapse movies file (default: off)</span>; sql_log_timelapse off<span class="hljs-meta">#</span><span class="bash"> SQL query string that is sent to the database</span><span class="hljs-meta">#</span><span class="bash"> Use same conversion specifiers has <span class="hljs-keyword">for</span> text features</span><span class="hljs-meta">#</span><span class="bash"> Additional special conversion specifiers are</span><span class="hljs-meta">#</span><span class="bash"> %n = the number representing the file_type</span><span class="hljs-meta">#</span><span class="bash"> %f = filename with full path</span><span class="hljs-meta">#</span><span class="bash"> Default value:</span><span class="hljs-meta">#</span><span class="bash"> Create tables :</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#</span></span><span class="hljs-meta">#</span><span class="bash"> Mysql</span><span class="hljs-meta">#</span><span class="bash"> CREATE TABLE security (camera int, filename char(80) not null, frame int, file_type int, time_stamp timestamp(14), event_time_stamp timestamp(14));</span><span class="hljs-meta">#</span><span class="hljs-meta">#</span><span class="bash"> Postgresql</span><span class="hljs-meta">#</span><span class="bash"> CREATE TABLE security (camera int, filename char(80) not null, frame int, file_type int, time_stamp timestamp without time zone, event_time_stamp timestamp without time zone);</span><span class="hljs-meta">#</span><span class="hljs-meta">#</span><span class="bash"> insert into security(camera, filename, frame, file_type, time_stamp, text_event) values(<span class="hljs-string">&#x27;%t&#x27;</span>, <span class="hljs-string">&#x27;%f&#x27;</span>, <span class="hljs-string">&#x27;%q&#x27;</span>, <span class="hljs-string">&#x27;%n&#x27;</span>, <span class="hljs-string">&#x27;%Y-%m-%d %T&#x27;</span>, <span class="hljs-string">&#x27;%C&#x27;</span>)</span>; sql_query insert into security(camera, filename, frame, file_type, time_stamp, event_time_stamp) values(&#x27;%t&#x27;, &#x27;%f&#x27;, &#x27;%q&#x27;, &#x27;%n&#x27;, &#x27;%Y-%m-%d %T&#x27;, &#x27;%C&#x27;)<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Database Options</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> database <span class="hljs-built_in">type</span> : mysql, postgresql, sqlite3 (default : not defined)</span>; database_type value<span class="hljs-meta">#</span><span class="bash"> database to <span class="hljs-built_in">log</span> to (default: not defined)</span><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-keyword">for</span> sqlite3, the full path and name <span class="hljs-keyword">for</span> the database.</span>; database_dbname value<span class="hljs-meta">#</span><span class="bash"> The host on <span class="hljs-built_in">which</span> the database is located (default: localhost)</span>; database_host value<span class="hljs-meta">#</span><span class="bash"> User account name <span class="hljs-keyword">for</span> database (default: not defined)</span>; database_user value<span class="hljs-meta">#</span><span class="bash"> User password <span class="hljs-keyword">for</span> database (default: not defined)</span>; database_password value<span class="hljs-meta">#</span><span class="bash"> Port on <span class="hljs-built_in">which</span> the database is located</span><span class="hljs-meta">#</span><span class="bash">  mysql 3306 , postgresql 5432 (default: not defined)</span>; database_port value<span class="hljs-meta">#</span><span class="bash"> Database <span class="hljs-built_in">wait</span> time <span class="hljs-keyword">in</span> milliseconds <span class="hljs-keyword">for</span> locked database to</span><span class="hljs-meta">#</span><span class="bash"> be unlocked before returning database locked error (default 0)</span>; database_busy_timeout 0<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Video Loopback Device (vloopback project)</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Output images to a video4linux loopback device</span><span class="hljs-meta">#</span><span class="bash"> Specify the device associated with the loopback device</span><span class="hljs-meta">#</span><span class="bash"> For example /dev/video1 (default: not defined)</span>; video_pipe value<span class="hljs-meta">#</span><span class="bash"> Output motion images to a video4linux loopback device</span><span class="hljs-meta">#</span><span class="bash"> Specify the device associated with the loopback device</span><span class="hljs-meta">#</span><span class="bash"> For example /dev/video1 (default: not defined)</span>; motion_video_pipe value<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#############################################################</span></span><span class="hljs-meta">#</span><span class="bash"> camera config files - One <span class="hljs-keyword">for</span> each camera.</span><span class="hljs-meta">#</span><span class="bash"> Except <span class="hljs-keyword">if</span> only one camera - You only need this config file.</span><span class="hljs-meta">#</span><span class="bash"> If you have more than one camera you MUST define one camera</span><span class="hljs-meta">#</span><span class="bash"> config file <span class="hljs-keyword">for</span> each camera <span class="hljs-keyword">in</span> addition to this config file.</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#############################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Remember: If you have more than one camera you must have one</span><span class="hljs-meta">#</span><span class="bash"> camera file <span class="hljs-keyword">for</span> each camera. E.g. 2 cameras requires 3 files:</span><span class="hljs-meta">#</span><span class="bash"> This motion.conf file AND camera1.conf and camera2.conf.</span><span class="hljs-meta">#</span><span class="bash"> Only put the options that are unique to each camera <span class="hljs-keyword">in</span> the</span><span class="hljs-meta">#</span><span class="bash"> camera config files.</span>; camera /etc/motion/camera1.conf; camera /etc/motion/camera2.conf; camera /etc/motion/camera3.conf; camera /etc/motion/camera4.conf<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#############################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Camera config directory</span><span class="hljs-meta">#</span><span class="bash"> Any files ending <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;.conf&#x27;</span> <span class="hljs-keyword">in</span> this directory will be <span class="hljs-built_in">read</span></span><span class="hljs-meta">#</span><span class="bash"> as a camera config file.</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#############################################################</span></span>; camera_dir /etc/motion/conf.d</code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.jb51.net/article/163690.htm">树莓派使用USB摄像头和motion实现监控</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://blog.csdn.net/weixin_30509393/article/details/99396622?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.nonecase&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.nonecase">linux下的开源移动图像监测程序—motion编译与配置</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="http://lavrsen.dk/foswiki/bin/view/Motion/ConfigFileOptions">（看不懂qwqの）Motion官方配置文件</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://blog.csdn.net/u013162035/article/details/78580486">第6章 树莓派摄像头操作</a><a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>基地2.0</tag>
      
      <tag>实时</tag>
      
      <tag>监控</tag>
      
      <tag>网页</tag>
      
      <tag>树莓派</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[05:私有云搭建]</title>
    <link href="/2020/07/12/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B05%E7%A7%81%E6%9C%89%E4%BA%91%E6%90%AD%E5%BB%BA%5D/"/>
    <url>/2020/07/12/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B05%E7%A7%81%E6%9C%89%E4%BA%91%E6%90%AD%E5%BB%BA%5D/</url>
    
    <content type="html"><![CDATA[<p><span class="label label-primary"><br>  之前已经做过关于树莓派的私有云搭建，只不过都是在宝塔直接完成的，在宝塔搭建固然容易，但是宝塔作为虚拟机，储存的东西只是虚拟内存，无法实现本机的访问，现在在本地搭建的Nginx上搭建一下私有云。</span></p><h2 id="一-owncloud"><a href="#一-owncloud" class="headerlink" title="一.owncloud"></a>一.owncloud</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122210506.jpg" alt=""></p><h3 id="1-下载ownCloud"><a href="#1-下载ownCloud" class="headerlink" title="1. 下载ownCloud"></a>1. 下载ownCloud</h3><p>按照下面的指令依次执行</p><pre><code class="hljs shell">sudo wget https://download.owncloud.org/community/owncloud-10.2.0.zipsudo unzip owncloud-10.2.0.zip -d /var/www/html/cd /var/www/html/owncloudsudo mkdir data</code></pre><h3 id="2-修改目录权限"><a href="#2-修改目录权限" class="headerlink" title="2. 修改目录权限"></a>2. 修改目录权限</h3><p><span class="label label-primary"><br>  OwnCloud在安装的过程中需要对一些目录有写的权限,为此，web服务器用户（www-data对于基于Debian的系统）必须要拥有apps、data、config目录的权限。</span></p><pre><code class="hljs shell">依次执行下面的指令sudo chown -R www-data:www-data datasudo chown -R www-data:www-data configsudo chown -R www-data:www-data apps</code></pre><h3 id="3-设置mysql账户密码"><a href="#3-设置mysql账户密码" class="headerlink" title="3. 设置mysql账户密码"></a>3. 设置mysql账户密码</h3><p>输入下面指令</p><pre><code class="hljs shell">sudo mysql -u root -p</code></pre><p>然后随便输密码点击回车就能登录进去</p><p>输入下面指令点击回车</p><pre><code class="hljs shell">update mysql.user set plugin=&#x27;mysql_native_password&#x27;;</code></pre><p>输入下面指令在newpassword处输入你想设置的密码</p><pre><code class="hljs shell">update mysql.user set password=PASSWORD(&quot;newpassword&quot;) where User=&#x27;root&#x27;;</code></pre><p>用下面指令刷新信息</p><pre><code class="hljs shell">flush privileges;</code></pre><p>刷新以后点击ctrl-c退出</p><h3 id="4-配置owncloud"><a href="#4-配置owncloud" class="headerlink" title="4. 配置owncloud"></a>4. 配置owncloud</h3><p>打开浏览器，输入 树莓派IP/owncloud ,进入设置安装界面</p><h3 id="5-问题"><a href="#5-问题" class="headerlink" title="5. 问题"></a>5. 问题</h3><pre><code class="hljs shell">error:This version of ownCloud is not compatible with PHP 7.3You are currently running PHP 7.3.19-1~deb10u1.</code></pre><p>解决方案：（呃，解决不了）<br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122210801.png" alt=""></p><h2 id="二-nextcloud"><a href="#二-nextcloud" class="headerlink" title="二.nextcloud"></a>二.nextcloud</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122210845.jpg" alt=""></p><h3 id="1-下载nextcloud"><a href="#1-下载nextcloud" class="headerlink" title="1. 下载nextcloud"></a>1. 下载nextcloud</h3><p>按照下面的指令依次执行</p><pre><code class="hljs shell">sudo wget https://download.nextcloud.com/server/releases/nextcloud-19.0.0.zipsudo unzip nextcloud-19.0.0.zip -d /var/www/html/cd /var/www/html/nextcloudsudo mkdir data</code></pre><h3 id="2-修改目录权限-1"><a href="#2-修改目录权限-1" class="headerlink" title="2. 修改目录权限"></a>2. 修改目录权限</h3><p><span class="label label-primary"><br>  nextcloud在安装的过程中需要对一些目录有写的权限,为此，web服务器用户（www-data对于基于Debian的系统）必须要拥有apps、data、config目录的权限。</span></p><pre><code class="hljs shell">依次执行下面的指令sudo chown -R www-data:www-data datasudo chown -R www-data:www-data configsudo chown -R www-data:www-data apps</code></pre><h3 id="3-为nextcloud创建数据库"><a href="#3-为nextcloud创建数据库" class="headerlink" title="3. 为nextcloud创建数据库"></a>3. 为nextcloud创建数据库</h3><p>进入phpmyadmin页面</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122211024.png" alt=""></p><h3 id="4-配置nextcloud"><a href="#4-配置nextcloud" class="headerlink" title="4. 配置nextcloud"></a>4. 配置nextcloud</h3><p>打开浏览器，输入 树莓派IP/nextcloud ,进入设置安装界面</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122211108.png" alt=""></p><h3 id="5-问题-1"><a href="#5-问题-1" class="headerlink" title="5. 问题"></a>5. 问题</h3><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122211153.png" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://mp.weixin.qq.com/s/IKMIYHsRsvVzoaBF89byBw">树莓派爱好者基地：树莓派搭建私有云盘教程</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://central.owncloud.org/t/this-version-of-owncloud-is-not-compatible-with-php-7-3/17531">This version of ownCloud is not compatible with PHP 7.3</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://www.orgleaf.com/2891.html?replytocom=2711">解决CentOS中安装Nextcloud出现“内部服务器错误</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>私有云</tag>
      
      <tag>nextcloud</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[04:pi-dashboard实时监控]</title>
    <link href="/2020/07/11/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B04pi-dashboard%E5%AE%9E%E6%97%B6%E7%9B%91%E6%8E%A7%5D/"/>
    <url>/2020/07/11/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B04pi-dashboard%E5%AE%9E%E6%97%B6%E7%9B%91%E6%8E%A7%5D/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><span class="label label-primary"><br>  树莓派作为一台Linux主机，要是有一个可视化界面能实时显示树莓派的状态信息那该有多棒啊。<br>  最近找到一个有趣的项目，我们只需要给树莓派配置好lnmp环境后，就可以装上一个类似于仪表盘的状态监控的工具。<br>  通过炫酷的WebUI的界面显示当前树莓派的各种数据：<br>  CPU的基本信息，状态和使用率树莓派当前IP地址、使用的时间、操作系统内存、缓存、SWAP分区的实时数据TF卡磁盘的占用情况网络接口实时数据</span></p><p>以下是在树莓派上安装pi-dashboard的详细过程：</p><h2 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h2><h3 id="1-安装Nginx"><a href="#1-安装Nginx" class="headerlink" title="1. 安装Nginx"></a>1. 安装Nginx</h3><p>ssh登录树莓派，输入：</p><pre><code class="hljs shell">sudo apt-get updatesudo apt-get install nginx</code></pre><h3 id="2-安装php"><a href="#2-安装php" class="headerlink" title="2. 安装php"></a>2. 安装php</h3><pre><code class="hljs shell">sudo apt-get install php7.3-fpm</code></pre><h3 id="3-配置Nginx"><a href="#3-配置Nginx" class="headerlink" title="3. 配置Nginx"></a>3. 配置Nginx</h3><p>安装好Nginx后，为了让Nginx能够处理PHP网页，需要修改/etc/nginx/sites-available/default文件</p><pre><code class="hljs shell">sudo vim /etc/nginx/sites-available/default</code></pre><p>将default文件修改为以下内容：</p><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> Default server configuration</span><span class="hljs-meta">#</span>server &#123;        listen 80 default_server;        listen [::]:80 default_server;        root /var/www/html;        # Add index.php to the list if you are using PHP        index index.html index.htm index.nginx-debian.html index.php;        server_name _;        location / &#123;                # First attempt to serve request as file, then                # as directory, then fall back to displaying a 404.                try_files $uri $uri/ =404;        &#125;        # pass PHP scripts to FastCGI server        #        location ~ \.php$ &#123;        #       include snippets/fastcgi-php.conf;        #        #       # With php-fpm (or other unix sockets):                fastcgi_pass unix:/run/php/php7.3-fpm.sock;        #       # With php-cgi (or other tcp sockets):        #       fastcgi_pass 127.0.0.1:9000;        # 设置脚本文件请求的路径                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;        # 引入fastcgi的配置文件                include fastcgi_params;        &#125;&#125;</code></pre><h3 id="4-重启Nginx"><a href="#4-重启Nginx" class="headerlink" title="4. 重启Nginx"></a>4. 重启Nginx</h3><pre><code class="hljs shell">sudo nginx -s reload</code></pre><p>这时我们可以查看Nginx与PHP是否配置成功，我们可以在网站根目录下 /var/www/html创建一个index.php文件，内容如下：</p><pre><code class="hljs shell">&lt;?php phpinfo(); ?&gt;</code></pre><p>保存后退出，在局域网下浏览器地址栏输入：<a href="http://你的树莓派ip/index.php，查看PHPinfo信息，如果显示说明PHP与Nginx配置成功。">http://你的树莓派ip/index.php，查看PHPinfo信息，如果显示说明PHP与Nginx配置成功。</a></p><h3 id="5-树莓派安装MariaDB和phpMyAdmin"><a href="#5-树莓派安装MariaDB和phpMyAdmin" class="headerlink" title="5. 树莓派安装MariaDB和phpMyAdmin"></a>5. 树莓派安装MariaDB和phpMyAdmin</h3><pre><code class="hljs shell">sudo apt-get install mariadb-server-10.3 phpmyadmin</code></pre><pre><code class="hljs shell">error:pi@raspbian:~$ sudo apt-get install mariadb-server-10.3 phpmyadminReading package lists... DoneBuilding dependency tree       Reading state information... DoneSome packages could not be installed. This may mean that you haverequested an impossible situation or if you are using the unstabledistribution that some required packages have not yet been createdor been moved out of Incoming.The following information may help to resolve the situation:The following packages have unmet dependencies: phpmyadmin : Depends: php-twig (&gt;= 2.9) but 2.6.2-2 is to be installed              Recommends: php-curl              Recommends: php-gd              Recommends: php-bz2              Recommends: php-zip              Recommends: php-tcpdf but it is not going to be installedE: Unable to correct problems, you have held broken packages.</code></pre><p>解决办法：</p><pre><code class="hljs shell">sudo apt-get install aptitudesudo aptitude install xxxxx第一选项no第二个选项yes</code></pre><p>控制台安装phpMyAdmin过程中会出现配置phpMyAdmin的选项<br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122205629.png" alt=""><br>它让我们自动重新配置网络服务器Apache或者lighttpd，因为我们用的是Nginx所以按 esc键取消选择，安装结束时会出现一个配置选项，点击 yes进行配置，之后要求输入一个密码，注册到MySQL服务器上<br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122205634.png" alt=""></p><h3 id="6-建立软链接："><a href="#6-建立软链接：" class="headerlink" title="6. 建立软链接："></a>6. 建立软链接：</h3><pre><code class="hljs shell">sudo ln -s /usr/share/phpmyadmin /var/www/html</code></pre><h3 id="7-pi-dashboard项目部署"><a href="#7-pi-dashboard项目部署" class="headerlink" title="7.pi-dashboard项目部署"></a>7.pi-dashboard项目部署</h3><p>我们先在本地下载pi-dashboard项目，下载地址：<a href="https://github.com/spoonysonny/pi">https://github.com/spoonysonny/pi</a><br>解压后用xftp软件传送到树莓派上，然后运行命令</p><pre><code class="hljs shell">sudo mv pi-dashboard /var/www/html</code></pre><h3 id="8-重启后浏览器输入http-你的树莓派ip-pi-dashboard"><a href="#8-重启后浏览器输入http-你的树莓派ip-pi-dashboard" class="headerlink" title="8.重启后浏览器输入http://你的树莓派ip/pi-dashboard/"></a>8.重启后浏览器输入<a href="http://你的树莓派ip/pi-dashboard/">http://你的树莓派ip/pi-dashboard/</a></h3><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122205117.png" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://gitee.com/openfans-community/Debian-Pi-Aarch64/">Debian-Pi-Aarch64 ★ 全新树莓派64位系统2.0正式版 - 说明文档</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://raspberrypi.club/">树莓派俱乐部</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://shumeipai.nxez.com/">树莓派实验</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://mp.weixin.qq.com/s/h--AL0TiA-2J551Vn0A3Ow">小雨编程</a><a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span><a href="https://blog.csdn.net/qiqzhang/article/details/87862556">ubuntu安装软件时出现The following packages have unmet dependencies，有依赖关系</a><a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>基地2.0</tag>
      
      <tag>系统</tag>
      
      <tag>mariadb</tag>
      
      <tag>myadmin</tag>
      
      <tag>mysql mysql</tag>
      
      <tag>nginx nginx</tag>
      
      <tag>php</tag>
      
      <tag>pi-dashboard</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[03:安装宝塔]</title>
    <link href="/2020/07/10/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B03%E5%AE%89%E8%A3%85%E5%AE%9D%E5%A1%94%5D/"/>
    <url>/2020/07/10/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B03%E5%AE%89%E8%A3%85%E5%AE%9D%E5%A1%94%5D/</url>
    
    <content type="html"><![CDATA[<h2 id="1-下载宝塔虚拟机镜像，通过xftp上传到树莓派"><a href="#1-下载宝塔虚拟机镜像，通过xftp上传到树莓派" class="headerlink" title="1.下载宝塔虚拟机镜像，通过xftp上传到树莓派"></a>1.下载宝塔虚拟机镜像，通过xftp上传到树莓派</h2><h2 id="2-下载解压支持"><a href="#2-下载解压支持" class="headerlink" title="2.下载解压支持"></a>2.下载解压支持</h2><pre><code class="hljs shell">sudo apt updatesudo apt install tar gzip zip unzip bzip2 xz-utils -y</code></pre><h2 id="3-解压压缩包"><a href="#3-解压压缩包" class="headerlink" title="3. 解压压缩包"></a>3. 解压压缩包</h2><pre><code class="hljs shell">tar xvf bt-panel_vm_5.9.1_pro_v2.tar</code></pre><h2 id="4-进入文件目录"><a href="#4-进入文件目录" class="headerlink" title="4. 进入文件目录"></a>4. 进入文件目录</h2><pre><code class="hljs shell">cd ./bt-panel_vm_5.9.1_pro_v2</code></pre><h2 id="5-安装宝塔虚拟机"><a href="#5-安装宝塔虚拟机" class="headerlink" title="5.安装宝塔虚拟机"></a>5.安装宝塔虚拟机</h2><pre><code class="hljs shell">sudo ./install</code></pre><h2 id="6-启动宝塔虚拟机"><a href="#6-启动宝塔虚拟机" class="headerlink" title="6. 启动宝塔虚拟机"></a>6. 启动宝塔虚拟机</h2><pre><code class="hljs shell">sudo ./bt_run</code></pre><h2 id="7-关闭宝塔虚拟机："><a href="#7-关闭宝塔虚拟机：" class="headerlink" title="7.关闭宝塔虚拟机："></a>7.关闭宝塔虚拟机：</h2><p><span class="label label-primary"><br>为了保证虚拟机的数据同步安全，请按照以下步骤操作：<br>请ssh登录到虚拟机再执行命令 “ init 0 “ 关闭虚拟机<br>关闭后，需要在宝塔虚拟机目录下执行 “ ./bt_prog “ 命令，检查虚拟机是否已关闭<br>如果没有任何输出结果，代表虚拟机已正常关闭<br>如果无法正常关闭虚拟机，请在宝塔虚拟机目录下执行 “ ./bt_prog kill “ 命令<br>同样记得再次执行 “ ./bt_prog “ 命令，检查虚拟机是否已关闭<br>自动启动</span></p><h2 id="8-开机自动启动"><a href="#8-开机自动启动" class="headerlink" title="8.开机自动启动"></a>8.开机自动启动</h2><pre><code class="hljs shell">启用开机自动启动./install int</code></pre><pre><code class="hljs shell">取消开机自动启动./install uint</code></pre><h2 id="9-默认参数值"><a href="#9-默认参数值" class="headerlink" title="9.默认参数值:"></a>9.默认参数值:</h2><pre><code class="hljs shell">默认管理端口  28888默认管理地址  http://你树莓派的IP地址:28888/默认Web管理用户及密码    openfans/openfans宝塔虚拟机ssh端口  2222宝塔虚拟机root默认密码   raspberry</code></pre><h2 id="10-如何ssh连接到宝塔虚拟机"><a href="#10-如何ssh连接到宝塔虚拟机" class="headerlink" title="10.如何ssh连接到宝塔虚拟机?"></a>10.如何ssh连接到宝塔虚拟机?</h2><pre><code class="hljs shell">本机连接： ssh -p 2222 root@localhost外部连接： ssh -p 2222 root@你树莓派的IP地址</code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://gitee.com/openfans-community/Debian-Pi-Aarch64/">Debian-Pi-Aarch64 ★ 全新树莓派64位系统2.0正式版 - 说明文档</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://raspberrypi.club/">树莓派俱乐部</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://shumeipai.nxez.com/">树莓派实验</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>基地2.0</tag>
      
      <tag>宝塔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[02:树莓派+u盘搭建家庭共享]</title>
    <link href="/2020/07/09/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B02%E6%A0%91%E8%8E%93%E6%B4%BE+u%E7%9B%98%E6%90%AD%E5%BB%BA%E5%AE%B6%E5%BA%AD%E5%85%B1%E4%BA%AB%5D/"/>
    <url>/2020/07/09/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B02%E6%A0%91%E8%8E%93%E6%B4%BE+u%E7%9B%98%E6%90%AD%E5%BB%BA%E5%AE%B6%E5%BA%AD%E5%85%B1%E4%BA%AB%5D/</url>
    
    <content type="html"><![CDATA[<h2 id="1-硬盘挂载"><a href="#1-硬盘挂载" class="headerlink" title="1.硬盘挂载"></a>1.硬盘挂载</h2><h3 id="1-1-使用fdisk-l-查看硬盘的详细信息"><a href="#1-1-使用fdisk-l-查看硬盘的详细信息" class="headerlink" title="1.1 使用fdisk -l 查看硬盘的详细信息"></a>1.1 使用fdisk -l 查看硬盘的详细信息</h3><pre><code class="hljs shell">pi@raspbian:~$ sudo fdisk -lDisk /dev/ram0: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram1: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram2: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram3: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram4: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram5: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram6: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram7: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram8: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram9: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram10: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram11: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram12: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram13: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram14: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram15: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/mmcblk0: 29.9 GiB, 32105299968 bytes, 62705664 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: dosDisk identifier: 0x68339ddaDevice         Boot  Start      End  Sectors  Size Id Type/dev/mmcblk0p1 *      8192   524287   516096  252M  c W95 FAT32 (LBA)/dev/mmcblk0p2      524288 62705663 62181376 29.7G 83 LinuxDisk /dev/sda: 30 GiB, 32212254720 bytes, 62914560 sectorsDisk model: U310Units: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: dosDisk identifier: 0xb64d29a8Device     Boot Start      End  Sectors Size Id Type/dev/sda1        8192 62914559 62906368  30G  7 HPFS/NTFS/exFAT</code></pre><h3 id="1-2-挂载到指定位置"><a href="#1-2-挂载到指定位置" class="headerlink" title="1.2 挂载到指定位置"></a>1.2 挂载到指定位置</h3><pre><code class="hljs shell">pi@raspbian:~$ mkdir sharepi@raspbian:~$ lssharepi@raspbian:~$ sudo mount /dev/sda1 share</code></pre><h3 id="1-3-查看挂载情况"><a href="#1-3-查看挂载情况" class="headerlink" title="1.3 查看挂载情况"></a>1.3 查看挂载情况</h3><pre><code class="hljs shell">df -h</code></pre><pre><code class="hljs shell">pi@raspbian:~$ df -hFilesystem      Size  Used Avail Use% Mounted on/dev/root        30G  4.2G   24G  15% /devtmpfs        918M     0  918M   0% /devtmpfs           950M     0  950M   0% /dev/shmtmpfs           950M  8.9M  941M   1% /runtmpfs           5.0M     0  5.0M   0% /run/locktmpfs           950M     0  950M   0% /sys/fs/cgroup/dev/mmcblk0p1  252M   71M  181M  29% /boottmpfs           190M     0  190M   0% /run/user/1000/dev/sda1        30G   19G  9.9G  65% /home/pi/share</code></pre><p class="note note-primary">  取消挂载 : sudo umount /dev/sda1</p><h3 id="1-4-解决硬盘的自动挂载"><a href="#1-4-解决硬盘的自动挂载" class="headerlink" title="1.4 解决硬盘的自动挂载"></a>1.4 解决硬盘的自动挂载</h3><p>每次树莓派重启或者硬盘插拔都需要对硬盘进行重新挂载，比较麻烦，因此需要自动挂载。这里要修改/etc/fstab文件。</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201121203001.png" alt=""></p><p>可以看到，fstab文件其实就是一个表格，表格各列的含意如下：<br>第一列：磁盘分区名/卷标，一般是/dev/sdaN（N表示正整数）<br>第二列：挂载点，我们在这里把/dev/sda1挂到/samba上。<br>第三列：缺省设置，一般用defautls。<br>第四列：是否备份：0——表示不做 dump 备份；1——表示要将整个 fie sysytem 里的内容备份；2 也表示要做 dump 备份，但该分区的重要性比 1 小。<br>第五列：检测顺序：0——不进行检测；根分区（/），必须填写 1，其它的都不能填写 1。如果有分区填写大于 1 的话，则在检查完根分区后，从小到大依次检查下去。<br>具体填写方法在图中已注明。</p><h2 id="2-df-h查看盘符挂载情况"><a href="#2-df-h查看盘符挂载情况" class="headerlink" title="2.df -h查看盘符挂载情况"></a>2.df -h查看盘符挂载情况</h2><pre><code class="hljs shell">pi@raspbian:~$ df -hFilesystem      Size  Used Avail Use% Mounted onudev            788M     0  788M   0% /devtmpfs           185M   12M  173M   7% /run/dev/mmcblk0p2   30G  8.8G   20G  32% /tmpfs           925M     0  925M   0% /dev/shmtmpfs           5.0M  4.0K  5.0M   1% /run/locktmpfs           925M     0  925M   0% /sys/fs/cgroup/dev/mmcblk0p1  252M   89M  163M  36% /boottmpfs           185M   16K  185M   1% /run/user/1000/dev/sda        500G   28G  473G   6% /media/pi/AE57-581F</code></pre><h2 id="3-已知盘符已自动挂载在-home-pi-share文件夹下"><a href="#3-已知盘符已自动挂载在-home-pi-share文件夹下" class="headerlink" title="3.已知盘符已自动挂载在/home/pi/share文件夹下"></a>3.已知盘符已自动挂载在/home/pi/share文件夹下</h2><h2 id="4-安装samba"><a href="#4-安装samba" class="headerlink" title="4.安装samba"></a>4.安装samba</h2><p><span class="label label-primary">更新一下源 ：sudo apt-get update</span></p><p><span class="label label-primary">安装samba : sudo apt-get install samba samba-common-bin</span></p><h2 id="5-安装完成后，配置-etc-samba-smb-conf文件"><a href="#5-安装完成后，配置-etc-samba-smb-conf文件" class="headerlink" title="5.安装完成后，配置/etc/samba/smb.conf文件"></a>5.安装完成后，配置/etc/samba/smb.conf文件</h2><pre><code class="hljs shell">sudo vim /etc/samba/smb.conf</code></pre><p>&lt;span class=label label-primary”&gt;在其最后添加以下命令：&lt;/span&gt;</p><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">共享文件的名称，将在网络上以此名称显示</span>path = /home/pi/share #共享文件的路径valid users = root pi #允许访问的用户，这里我用的是root 和 pi 两个用户browseable = yes  #允许浏览public = yes  #共享开放writable = yes  #可写</code></pre><h2 id="6-保存后，重启samba服务"><a href="#6-保存后，重启samba服务" class="headerlink" title="6.保存后，重启samba服务"></a>6.保存后，重启samba服务</h2><pre><code class="hljs shell">sudo /usr/sbin/samba restart</code></pre><p>(可通过 whereis samba 寻找 samba 所在位置)</p><h2 id="7-最后使用root用户添加共享用户："><a href="#7-最后使用root用户添加共享用户：" class="headerlink" title="7.最后使用root用户添加共享用户："></a>7.最后使用root用户添加共享用户：</h2><p>smbpasswd –a pi #这里我用的pi。</p><pre><code class="hljs shell">pi@raspbian:~$ sudo suroot@raspbian:/home/pi# smbpasswd -a piNew SMB password:Retype new SMB password:Added user pi</code></pre><h2 id="8-ok-完成"><a href="#8-ok-完成" class="headerlink" title="8.ok 完成"></a>8.ok 完成</h2><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201121203707.png" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://gitee.com/openfans-community/Debian-Pi-Aarch64/">Debian-Pi-Aarch64 ★ 全新树莓派64位系统2.0正式版 - 说明文档</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://raspberrypi.club/">树莓派俱乐部</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://shumeipai.nxez.com/">树莓派实验</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>基地2.0</tag>
      
      <tag>samba</tag>
      
      <tag>家庭共享，U盘，挂载</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[01:装系统]</title>
    <link href="/2020/07/08/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B01%E8%A3%85%E7%B3%BB%E7%BB%9F%5D/"/>
    <url>/2020/07/08/raspberry/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B01%E8%A3%85%E7%B3%BB%E7%BB%9F%5D/</url>
    
    <content type="html"><![CDATA[<h2 id="一-格式化以及烤录系统"><a href="#一-格式化以及烤录系统" class="headerlink" title="一.格式化以及烤录系统"></a>一.格式化以及烤录系统</h2><p class="note note-primary">  镜像选择：树莓派爱好者基地  2020-06-17-OPENFANS-Debian-Buster-Desktop-Aarch64-ext4-v2019-2.0-U3-Release.img.xz</p><h4 id="1-1格式化储存卡"><a href="#1-1格式化储存卡" class="headerlink" title="1.1格式化储存卡"></a>1.1格式化储存卡</h4><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201121201303.png"  border="0" /></p><h4 id="1-2烤录镜像"><a href="#1-2烤录镜像" class="headerlink" title="1.2烤录镜像"></a>1.2烤录镜像</h4><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201121201352.png"  border="0" /></p><h2 id="二-查看官方文档"><a href="#二-查看官方文档" class="headerlink" title="二.查看官方文档"></a>二.查看官方文档</h2><p><a class="wp-editor-md-post-content-link" href="https://gitee.com/openfans-community/Debian-Pi-Aarch64">https://gitee.com/openfans-community/Debian-Pi-Aarch64/</a></p><h3 id="2-1服务开关："><a href="#2-1服务开关：" class="headerlink" title="2.1服务开关："></a>2.1服务开关：</h3><h4 id="2-1-1-Docker容器"><a href="#2-1-1-Docker容器" class="headerlink" title="2.1.1 Docker容器"></a>2.1.1 Docker容器</h4><p><span class="label label-primary"><br>  手动开启：systemctl start docker.service<br>  手动停止：systemctl stop docker.service<br>  启用开机启动：systemctl enable docker.service<br>  禁用开机启动：systemctl disable docker.service</span></p><h4 id="2-1-2-CecOS-CaaS容器云（服务端口：8443）"><a href="#2-1-2-CecOS-CaaS容器云（服务端口：8443）" class="headerlink" title="2.1.2 CecOS CaaS容器云（服务端口：8443）"></a>2.1.2 CecOS CaaS容器云（服务端口：8443）</h4><p><span class="label label-primary"><br>  手动开启：systemctl start cecos-caas.service<br>  手动停止：systemctl stop cecos-caas.service<br>  启用开机启动：systemctl enable cecos-caas.service<br>  禁用开机启动：systemctl disable cecos-caas.service</span></p><h4 id="2-1-3-WebGUI管理平台（服务端口：9090"><a href="#2-1-3-WebGUI管理平台（服务端口：9090" class="headerlink" title="2.1.3 WebGUI管理平台（服务端口：9090)"></a>2.1.3 WebGUI管理平台（服务端口：9090)</h4><p><span class="label label-primary"><br>  手动开启：systemctl start cockpit.socket<br>  手动停止：systemctl stop cockpit.socket<br>  启用开机启动：systemctl enable cockpit.socket<br>  禁用开机启动：systemctl disable cockpit.socket</span></p><h4 id="2-1-4-Web-SSH客户端（服务端口：4200）"><a href="#2-1-4-Web-SSH客户端（服务端口：4200）" class="headerlink" title="2.1.4 Web SSH客户端（服务端口：4200）"></a>2.1.4 Web SSH客户端（服务端口：4200）</h4><p><span class="label label-primary"><br>  手动开启：systemctl start shellinabox.service<br>  手动停止：systemctl stop shellinabox.service<br>  启用开机启动：systemctl enable shellinabox.service<br>  禁用开机启动：systemctl disable shellinabox.service</span></p><h4 id="2-1-5-默认的VNC访问密码为-raspberry"><a href="#2-1-5-默认的VNC访问密码为-raspberry" class="headerlink" title="2.1.5 默认的VNC访问密码为: raspberry"></a>2.1.5 默认的VNC访问密码为: raspberry</h4><p><span class="label label-primary"><br>默认的WEB VNC访问地址为: <a href="http://你树莓派的IP地址:5901">http://你树莓派的IP地址:5901</a><br>默认的客户端访问地址为: 你树莓派的IP地址:5900</span></p><h3 id="2-2账户及密码"><a href="#2-2账户及密码" class="headerlink" title="2.2账户及密码"></a>2.2账户及密码</h3><p><span class="label label-primary"><br>  系统默认账户：pi ，默认密码：raspberry<br>  默认账户pi账户支持ssh登录，root账户密码请登陆后使用命令 “sudo passwd root” 执行设置，<br>  或使用命令 “sudo -i” 来切换到root用户。</span></p><h3 id="2-3Web登录接口说明"><a href="#2-3Web登录接口说明" class="headerlink" title="2.3Web登录接口说明"></a>2.3Web登录接口说明</h3><h4 id="2-3-1-Web可视化管理界面"><a href="#2-3-1-Web可视化管理界面" class="headerlink" title="2.3.1 Web可视化管理界面"></a>2.3.1 Web可视化管理界面</h4><p><span class="label label-primary"><br>登录地址 <a href="https://你树莓派的IP地址:9090">https://你树莓派的IP地址:9090</a><br>说明：请使用系统默认账户pi登录</span></p><h4 id="2-3-2-WEB-SSH-客户端-入口界面"><a href="#2-3-2-WEB-SSH-客户端-入口界面" class="headerlink" title="2.3.2 WEB SSH 客户端 入口界面"></a>2.3.2 WEB SSH 客户端 入口界面</h4><p><span class="label label-primary"><br>登录地址 <a href="https://你树莓派的IP地址:4200">https://你树莓派的IP地址:4200</a><br>说明：使用具有控制台登录权限的帐户登录，例如：pi</span></p><h4 id="2-3-3-CecOS-CaaS-容器云管理平台-登录界面"><a href="#2-3-3-CecOS-CaaS-容器云管理平台-登录界面" class="headerlink" title="2.3.3 CecOS CaaS 容器云管理平台 登录界面"></a>2.3.3 CecOS CaaS 容器云管理平台 登录界面</h4><p><span class="label label-primary"><br>登录地址 <a href="https://你树莓派的IP地址:8443">https://你树莓派的IP地址:8443</a><br>说明：默认管理账户 admin , 默认密码：password 。请登录后立即修改默认密码！！</span></p><h3 id="2-4启用和运行Docker服务"><a href="#2-4启用和运行Docker服务" class="headerlink" title="2.4启用和运行Docker服务"></a>2.4启用和运行Docker服务</h3><p><span class="label label-primary"><br>  启用 Docker服务，需要手动启动。<br>  开机自动启动Docker服务<br>  systemctl enable docker.service<br>  启动Docker服务<br>  systemctl start docker.service<br>  停止Docker服务<br>  systemctl stop docker.service<br>  禁止Docker服务开机启动<br>  systemctl disable docker.service</span></p><h3 id="2-5启用CecOS-CaaS容器云"><a href="#2-5启用CecOS-CaaS容器云" class="headerlink" title="2.5启用CecOS-CaaS容器云"></a>2.5启用CecOS-CaaS容器云</h3><p><span class="label label-primary"><br>  默认没有启用 CecOS CaaS容器云 服务，需要手动启动。<br>  注意：要启用CecOS CaaS容器云服务，必须要先启用和启动docker服务！！<br>  开机自动启动 CecOS CaaS容器云 服务<br>  systemctl enable cecos-caas.service<br>  启动 CecOS CaaS容器云 服务<br>  systemctl start cecos-caas.service<br>  停止 CecOS CaaS容器云 服务<br>  systemctl stop cecos-caas.service<br>  禁止 CecOS CaaS容器云 服务开机启动<br>  systemctl disable cecos-caas.service</span></p><h3 id="2-6启用和退出Docker集群"><a href="#2-6启用和退出Docker集群" class="headerlink" title="2.6启用和退出Docker集群"></a>2.6启用和退出Docker集群</h3><p><span class="label label-primary"><br>  初始化并加入一个 Docker Swarm集群<br>  docker swarm init</p><h1 id="查看集群节点状态"><a href="#查看集群节点状态" class="headerlink" title="查看集群节点状态"></a>查看集群节点状态</h1><p>  docker node ls</p><h1 id="退出Docker-Swarm集群"><a href="#退出Docker-Swarm集群" class="headerlink" title="退出Docker Swarm集群"></a>退出Docker Swarm集群</h1><p>  docker swarm leave —force<br>&lt;/span&gt;</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://gitee.com/openfans-community/Debian-Pi-Aarch64/">Debian-Pi-Aarch64 ★ 全新树莓派64位系统2.0正式版 - 说明文档</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://raspberrypi.club/">树莓派俱乐部</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://shumeipai.nxez.com/">树莓派实验</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>基地2.0</tag>
      
      <tag>系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试文档</title>
    <link href="/2019/11/11/%E6%B5%8B%E8%AF%95%E6%96%87%E6%A1%A3/"/>
    <url>/2019/11/11/%E6%B5%8B%E8%AF%95%E6%96%87%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<p>正文</p><p class="note note-primary">标签</p><pre><code class="hljs markdown"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-primary&quot;</span>&gt;</span></span>标签<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span></code></pre><p><span class="label label-primary">Label</span></p><pre><code class="hljs markdown"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;label label-primary&quot;</span>&gt;</span></span>Label<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span></code></pre>            <input type="checkbox" disabled checked="checked">text          <pre><code class="hljs markdown">&#123;% cb text, checked?, incline? %&#125;</code></pre><p><a class="btn" href="url" title="title">text</a></p><pre><code class="hljs markdown"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span></span>text<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span></code></pre><p>$\lim_{x \to \infty} \frac{1}{n(n+1)}$</p><p>$\Gamma$</p><pre><code class="hljs markdown">\lim<span class="hljs-emphasis">_&#123;x \to \infty&#125; \frac&#123;1&#125;&#123;n(n+1)&#125;</span></code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><pre><code class="hljs markdown">[<span class="hljs-symbol">^2</span>]: <span class="hljs-link">参考资料2</span></code></pre><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>参考资料1<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>参考资料2<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>Linux</category>
      
      <category>raspberry</category>
      
      <category>数学建模</category>
      
      <category>python</category>
      
      <category>docker</category>
      
      <category>git</category>
      
      <category>life</category>
      
      <category>杂谈</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
