<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>基于Python的防网络沉迷相关信息获取</title>
    <link href="/2020/07/19/%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E9%98%B2%E7%BD%91%E7%BB%9C%E6%B2%89%E8%BF%B7%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96/"/>
    <url>/2020/07/19/%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E9%98%B2%E7%BD%91%E7%BB%9C%E6%B2%89%E8%BF%B7%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96/</url>
    
    <content type="html"><![CDATA[<h3 id="1-程序描述"><a href="#1-程序描述" class="headerlink" title="1.程序描述"></a>1.程序描述</h3><p class="note note-primary">基于Python网络爬虫技术，在一些门户网站或社交网站爬取一些关于网络沉迷的案例、图片，以此为例撰写一篇关于防止网络沉迷的论文，可以论述怎样借助于Python爬虫技术实现相关内容的获取，也可以基于所编写Python爬虫程序获取的图片、案例或者文字信息，撰写网络沉迷的危害，以及怎样防止网络沉迷。</p><h3 id="2-程序设计"><a href="#2-程序设计" class="headerlink" title="2.程序设计"></a>2.程序设计</h3><h4 id="2-1-设计思路"><a href="#2-1-设计思路" class="headerlink" title="2.1 设计思路"></a>2.1 设计思路</h4><p><span class="label label-primary">1.借助 selenium 爬虫爬取网上课堂以来的微博有关“青少年沉迷网络”的话题的相关动态。</span></p><p><span class="label label-primary">2.借助 xlrd 模块提取爬取的内容。</span></p><p><span class="label label-primary">3.借助词云wordcloud 和 jieba 模块进行关键词分析。</span></p><h4 id="2-2-程序代码"><a href="#2-2-程序代码" class="headerlink" title="2.2 程序代码"></a>2.2 程序代码</h4><p><span class="label label-primary">代码一借助 selenium 自动化提取 “青少年沉迷网络” 的动态</span>    [3]</p><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><span class="hljs-string">&quot;&quot;&quot;</span><span class="hljs-string">Created on 2018/11/27 下午 1:03</span><span class="hljs-string"></span><span class="hljs-string">@author: FeiTao</span><span class="hljs-string">@Email: feitao_sydx@163.com</span><span class="hljs-string">@Software: PyCharm</span><span class="hljs-string">&quot;&quot;&quot;</span><span class="hljs-keyword">import</span> time<span class="hljs-keyword">import</span> datetime<span class="hljs-keyword">import</span> re<span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<span class="hljs-keyword">from</span> selenium.webdriver.common.keys <span class="hljs-keyword">import</span> Keys<span class="hljs-keyword">import</span> xlwt<span class="hljs-comment"># 先调用无界面浏览器PhantomJS或Firefox</span><span class="hljs-comment"># driver = webdriver.PhantomJS()</span><span class="hljs-comment"># driver = webdriver.Firefox()</span>driver = webdriver.Chrome()<span class="hljs-comment"># ********************************************************************************</span><span class="hljs-comment">#                            第一步: 登陆login.sina.com</span><span class="hljs-comment">#                     这是一种很好的登陆方式，有可能有输入验证码</span><span class="hljs-comment">#                          登陆之后即可以登陆方式打开网页</span><span class="hljs-comment"># ********************************************************************************</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">LoginWeibo</span>(<span class="hljs-params">username, password</span>):</span>    <span class="hljs-keyword">try</span>:        <span class="hljs-comment"># 输入用户名/密码登录</span>        print(<span class="hljs-string">&#x27;准备登陆Weibo.cn网站...&#x27;</span>)        driver.get(<span class="hljs-string">&quot;http://login.sina.com.cn/&quot;</span>)        elem_user = driver.find_element_by_name(<span class="hljs-string">&quot;username&quot;</span>)        elem_user.send_keys(username)  <span class="hljs-comment"># 用户名</span>        elem_pwd = driver.find_element_by_name(<span class="hljs-string">&quot;password&quot;</span>)        elem_pwd.send_keys(password)  <span class="hljs-comment"># 密码</span>        elem_sub = driver.find_element_by_xpath(<span class="hljs-string">&quot;//input[@class=&#x27;W_btn_a btn_34px&#x27;]&quot;</span>)        elem_sub.click()  <span class="hljs-comment"># 点击登陆 因无name属性</span>        <span class="hljs-keyword">try</span>:            <span class="hljs-comment"># 输入验证码</span>            time.sleep(<span class="hljs-number">10</span>)            elem_sub.click()        <span class="hljs-keyword">except</span>:            <span class="hljs-comment"># 不用输入验证码</span>            <span class="hljs-keyword">pass</span>        <span class="hljs-comment"># 获取Coockie 推荐资料：http://www.cnblogs.com/fnng/p/3269450.html</span>        print(<span class="hljs-string">&#x27;Crawl in &#x27;</span>, driver.current_url)        print(<span class="hljs-string">&#x27;输出Cookie键值对信息:&#x27;</span>)        <span class="hljs-keyword">for</span> cookie <span class="hljs-keyword">in</span> driver.get_cookies():            print(cookie)            <span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> cookie:                print(key, cookie[key])        print(<span class="hljs-string">&#x27;登陆成功...&#x27;</span>)    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:        print(<span class="hljs-string">&quot;Error: &quot;</span>, e)    <span class="hljs-keyword">finally</span>:        print(<span class="hljs-string">&#x27;End LoginWeibo!\n&#x27;</span>)<span class="hljs-comment"># ********************************************************************************</span><span class="hljs-comment">#                  第二步: 访问http://s.weibo.com/页面搜索结果</span><span class="hljs-comment">#               输入关键词、时间范围，得到所有微博信息、博主信息等</span><span class="hljs-comment">#                     考虑没有搜索结果、翻页效果的情况</span><span class="hljs-comment"># ********************************************************************************</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">GetSearchContent</span>(<span class="hljs-params">key</span>):</span>    driver.get(<span class="hljs-string">&quot;http://s.weibo.com/&quot;</span>)    print(<span class="hljs-string">&#x27;搜索热点主题：&#x27;</span>)    <span class="hljs-comment"># 输入关键词并点击搜索</span>    item_inp = driver.find_element_by_xpath(<span class="hljs-string">&quot;//input[@type=&#x27;text&#x27;]&quot;</span>)    <span class="hljs-comment">#item_inp = driver.find_element_by_xpath(&quot;//*[@id=&#x27;pl_homepage_search&#x27;]/div/div[2]/div/input&quot;)</span>    item_inp.send_keys(key)    item_inp.send_keys(Keys.RETURN)  <span class="hljs-comment"># 采用点击回车直接搜索</span>    time.sleep(<span class="hljs-number">5</span>)    <span class="hljs-comment"># 获取搜索词的URL，用于后期按时间查询的URL拼接</span>    current_url = driver.current_url    current_url = current_url.split(<span class="hljs-string">&#x27;&amp;&#x27;</span>)[<span class="hljs-number">0</span>]  <span class="hljs-comment"># http://s.weibo.com/weibo/%25E7%258E%2589%25E6%25A0%2591%25E5%259C%25B0%25E9%259C%2587</span>    <span class="hljs-keyword">global</span> start_stamp    <span class="hljs-keyword">global</span> page    <span class="hljs-comment"># 需要抓取的开始和结束日期</span>    start_date = datetime.datetime(<span class="hljs-number">2020</span>, <span class="hljs-number">2</span>, <span class="hljs-number">25</span>)    end_date = datetime.datetime(<span class="hljs-number">2020</span>, <span class="hljs-number">5</span>, <span class="hljs-number">24</span>)    delta_date = datetime.timedelta(days=<span class="hljs-number">1</span>)    <span class="hljs-comment"># 需要抓取的地区   37:2代表山东青岛</span>    <span class="hljs-comment">#region = &#x27;custom:37:2&#x27;</span>    <span class="hljs-comment"># 每次抓取一天的数据</span>    start_stamp = start_date    end_stamp = start_date + delta_date    <span class="hljs-keyword">global</span> outfile    <span class="hljs-keyword">global</span> sheet    outfile = xlwt.Workbook(encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>)    <span class="hljs-keyword">while</span> end_stamp &lt;= end_date:        page = <span class="hljs-number">1</span>        <span class="hljs-comment"># 每一天使用一个sheet存储数据</span>        sheet = outfile.add_sheet(start_stamp.strftime(<span class="hljs-string">&quot;%Y-%m-%d-%H&quot;</span>))        initXLS()        <span class="hljs-comment"># 通过构建URL实现每一天的查询</span>        <span class="hljs-comment">#url = current_url + &#x27;&amp;typeall=1&amp;suball=1×cope=custom:&#x27; + start_stamp.strftime(</span>        <span class="hljs-comment">#    &quot;%Y-%m-%d-%H&quot;) + &#x27;:&#x27; + end_stamp.strftime(&quot;%Y-%m-%d-%H&quot;) + &#x27;®ion=&#x27;+ region + &#x27;&amp;Refer=g&#x27;</span>        <span class="hljs-comment">#url = &#x27;https://s.weibo.com/weibo?q=%E9%9B%BE%E9%9C%BE®ion=custom:37:2&amp;typeall=1&amp;suball=1×cope=custom:2018-01-01-17:2018-01-01-19&amp;Refer=g&#x27;</span>        url = current_url + <span class="hljs-string">&#x27;&amp;typeall=1&amp;suball=1×cope=custom:&#x27;</span> + start_stamp.strftime(        <span class="hljs-string">&quot;%Y-%m-%d-%H&quot;</span>) + <span class="hljs-string">&#x27;:&#x27;</span> + end_stamp.strftime(<span class="hljs-string">&quot;%Y-%m-%d-%H&quot;</span>) +  <span class="hljs-string">&#x27;&amp;Refer=g&#x27;</span>        driver.get(url)        handlePage()  <span class="hljs-comment"># 处理当前页面内容</span>        start_stamp = end_stamp        end_stamp = end_stamp + delta_date<span class="hljs-comment"># time.sleep(1)</span><span class="hljs-comment"># ********************************************************************************</span><span class="hljs-comment">#                  辅助函数，考虑页面加载完成后得到页面所需要的内容</span><span class="hljs-comment"># ********************************************************************************</span><span class="hljs-comment"># 页面加载完成后，对页面内容进行处理</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">handlePage</span>():</span>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:        <span class="hljs-comment"># 之前认为可能需要sleep等待页面加载，后来发现程序执行会等待页面加载完毕</span>        <span class="hljs-comment"># sleep的原因是对付微博的反爬虫机制，抓取太快可能会判定为机器人，需要输入验证码</span>        time.sleep(<span class="hljs-number">1</span>)        <span class="hljs-comment"># 先行判定是否有内容</span>        <span class="hljs-keyword">if</span> checkContent():            print(<span class="hljs-string">&quot;getContent&quot;</span>)            getContent()            <span class="hljs-comment"># 先行判定是否有下一页按钮</span>            <span class="hljs-keyword">if</span> checkNext():                <span class="hljs-comment"># 拿到下一页按钮</span>                next_page_btn = driver.find_element_by_css_selector(<span class="hljs-string">&quot;#pl_feedlist_index &gt; div.m-page &gt; div &gt; a.next&quot;</span>)                next_page_btn.click()            <span class="hljs-keyword">else</span>:                print(<span class="hljs-string">&quot;no Next&quot;</span>)                <span class="hljs-keyword">break</span>        <span class="hljs-keyword">else</span>:            print(<span class="hljs-string">&quot;no Content&quot;</span>)            <span class="hljs-keyword">break</span><span class="hljs-comment"># 判断页面加载完成后是否有内容</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">checkContent</span>():</span>    <span class="hljs-comment"># 有内容的前提是有“导航条”？错！只有一页内容的也没有导航条</span>    <span class="hljs-comment"># 但没有内容的前提是有“pl_noresult”</span>    <span class="hljs-keyword">try</span>:        driver.find_element_by_xpath(<span class="hljs-string">&quot;//div[@class=&#x27;card card-no-result s-pt20b40&#x27;]&quot;</span>)        flag = <span class="hljs-literal">False</span>    <span class="hljs-keyword">except</span>:        flag = <span class="hljs-literal">True</span>    <span class="hljs-keyword">return</span> flag<span class="hljs-comment"># 判断是否有下一页按钮</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">checkNext</span>():</span>    <span class="hljs-keyword">try</span>:        driver.find_element_by_css_selector(<span class="hljs-string">&quot;#pl_feedlist_index &gt; div.m-page &gt; div &gt; a.next&quot;</span>)        flag = <span class="hljs-literal">True</span>    <span class="hljs-keyword">except</span>:        flag = <span class="hljs-literal">False</span>    <span class="hljs-keyword">return</span> flag<span class="hljs-comment"># 判断是否有展开全文按钮</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">checkqw</span>():</span>    <span class="hljs-keyword">try</span>:        driver.find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;txt&#x27;]/a&quot;</span>)        flag = <span class="hljs-literal">True</span>    <span class="hljs-keyword">except</span>:        flag = <span class="hljs-literal">False</span>    <span class="hljs-keyword">return</span> flag<span class="hljs-comment"># 在添加每一个sheet之后，初始化字段</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">initXLS</span>():</span>    name = [<span class="hljs-string">&#x27;博主昵称&#x27;</span>, <span class="hljs-string">&#x27;博主主页&#x27;</span>, <span class="hljs-string">&#x27;微博认证&#x27;</span>, <span class="hljs-string">&#x27;微博达人&#x27;</span>, <span class="hljs-string">&#x27;微博内容&#x27;</span>, <span class="hljs-string">&#x27;发布位置&#x27;</span>, <span class="hljs-string">&#x27;发布时间&#x27;</span>, <span class="hljs-string">&#x27;微博地址&#x27;</span>, <span class="hljs-string">&#x27;微博来源&#x27;</span>, <span class="hljs-string">&#x27;转发&#x27;</span>, <span class="hljs-string">&#x27;评论&#x27;</span>, <span class="hljs-string">&#x27;赞&#x27;</span>]    <span class="hljs-keyword">global</span> row    <span class="hljs-keyword">global</span> outfile    <span class="hljs-keyword">global</span> sheet    row = <span class="hljs-number">0</span>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(name)):        sheet.write(row, i, name[i])    row = row + <span class="hljs-number">1</span>    outfile.save(<span class="hljs-string">&quot;./crawl_output_YS.xls&quot;</span>)<span class="hljs-comment"># 将dic中的内容写入excel</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">writeXLS</span>(<span class="hljs-params">dic</span>):</span>    <span class="hljs-keyword">global</span> row    <span class="hljs-keyword">global</span> outfile    <span class="hljs-keyword">global</span> sheet    <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> dic:        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(dic[k])):            sheet.write(row, i, dic[k][i])        row = row + <span class="hljs-number">1</span>    outfile.save(<span class="hljs-string">&quot;./crawl_output_YS.xls&quot;</span>)<span class="hljs-comment"># 在页面有内容的前提下，获取内容</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getContent</span>():</span>    <span class="hljs-comment"># 寻找到每一条微博的class</span>    <span class="hljs-keyword">try</span>:        <span class="hljs-comment"># nodes = driver.find_elements_by_xpath(&quot;//div[@class=&#x27;WB_cardwrap S_bg2 clearfix&#x27;]&quot;)</span>        <span class="hljs-comment"># nodes = driver.find_elements_by_xpath(&quot;//div[@class=&#x27;card-wrap&#x27;]&quot;)</span>        nodes = driver.find_elements_by_xpath(<span class="hljs-string">&quot;//div[@class=&#x27;card-wrap&#x27;]/div[@class=&#x27;card&#x27;]&quot;</span>)    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:        print(e)    <span class="hljs-comment"># 在运行过程中微博数==0的情况，可能是微博反爬机制，需要输入验证码</span>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(nodes) == <span class="hljs-number">0</span>:        <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请在微博页面输入验证码！&quot;</span>)        url = driver.current_url        driver.get(url)        getContent()        <span class="hljs-keyword">return</span>    dic = &#123;&#125;    <span class="hljs-keyword">global</span> page    print(start_stamp.strftime(<span class="hljs-string">&quot;%Y-%m-%d-%H&quot;</span>))    print(<span class="hljs-string">&#x27;页数:&#x27;</span>, page)    page = page + <span class="hljs-number">1</span>    print(<span class="hljs-string">&#x27;微博数量&#x27;</span>, <span class="hljs-built_in">len</span>(nodes))    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(nodes)):        dic[i] = []        <span class="hljs-keyword">try</span>:            <span class="hljs-comment"># BZNC = nodes[i].find_element_by_xpath(&quot;.//div[@class=&#x27;feed_content wbcon&#x27;]/a[@class=&#x27;W_texta W_fb&#x27;]&quot;).text</span>            BZNC = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;txt&#x27;]&quot;</span>).get_attribute(<span class="hljs-string">&quot;nick-name&quot;</span>)            <span class="hljs-comment"># print(nodes[2].find_element_by_xpath(&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;txt&#x27;]&quot;).get_attribute(&quot;nick-name&quot;))</span>        <span class="hljs-keyword">except</span>:            BZNC = <span class="hljs-string">&#x27;&#x27;</span>        print(<span class="hljs-string">&#x27;博主昵称:&#x27;</span>, BZNC)        dic[i].append(BZNC)        <span class="hljs-keyword">try</span>:            BZZY = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/div[@class=&#x27;info&#x27;]/div[2]/a&quot;</span>).get_attribute(<span class="hljs-string">&quot;href&quot;</span>)            <span class="hljs-comment"># print(nodes[1].find_element_by_xpath(&quot;//*[@id=&quot;pl_feedlist_index&quot;]/div[2]/div[1]/div/div[1]/div[1]/a&quot;).get_attribute(&quot;href&quot;))</span>            <span class="hljs-comment"># print(nodes[1].find_element_by_css_selector(&quot;#pl_feedlist_index &gt; div:nth-child(2) &gt; div:nth-child(1) &gt; div &gt; div.card-feed &gt; div.avator &gt; a&quot;).get_attribute(&quot;href&quot;))</span>        <span class="hljs-keyword">except</span>:            BZZY = <span class="hljs-string">&#x27;&#x27;</span>        print(<span class="hljs-string">&#x27;博主主页:&#x27;</span>, BZZY)        dic[i].append(BZZY)        <span class="hljs-comment"># 微博官方认证，没有爬取</span>        <span class="hljs-keyword">try</span>:            <span class="hljs-comment"># WBRZ = nodes[i].find_element_by_xpath(&quot;.//div[@class=&#x27;feed_content wbcon&#x27;]/a[@class=&#x27;approve_co&#x27;]&quot;).get_attribute(&#x27;title&#x27;)#若没有认证则不存在节点</span>            WBRZ = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;info&#x27;]/div/a[contains(@title,&#x27;微博&#x27;)]&quot;</span>).get_attribute(<span class="hljs-string">&#x27;title&#x27;</span>) <span class="hljs-comment"># 若没有认证则不存在节点</span>        <span class="hljs-keyword">except</span>:            WBRZ = <span class="hljs-string">&#x27;&#x27;</span>        print(<span class="hljs-string">&#x27;微博认证:&#x27;</span>, WBRZ)        dic[i].append(WBRZ)        <span class="hljs-keyword">try</span>:            <span class="hljs-comment"># WBDR = nodes[i].find_element_by_xpath(&quot;.//div[@class=&#x27;feed_content wbcon&#x27;]/a[@class=&#x27;ico_club&#x27;]&quot;).get_attribute(&#x27;title&#x27;)#若非达人则不存在节点</span>            WBDR = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;feed_content wbcon&#x27;]/a[@class=&#x27;ico_club&#x27;]&quot;</span>).get_attribute(<span class="hljs-string">&#x27;title&#x27;</span>)  <span class="hljs-comment"># 若非达人则不存在节点</span>        <span class="hljs-keyword">except</span>:            WBDR = <span class="hljs-string">&#x27;&#x27;</span>        print(<span class="hljs-string">&#x27;微博达人:&#x27;</span>, WBDR)        dic[i].append(WBDR)        <span class="hljs-comment"># 判断展开全文和网页链接是否存在</span>        <span class="hljs-keyword">try</span>:            nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;txt&#x27;]/a[@action-type=&#x27;fl_unfold&#x27;]&quot;</span>).is_displayed()            flag = <span class="hljs-literal">True</span>        <span class="hljs-keyword">except</span>:            flag = <span class="hljs-literal">False</span>        <span class="hljs-comment"># 获取微博内容</span>        <span class="hljs-keyword">try</span>:            <span class="hljs-keyword">if</span> flag:                nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;txt&#x27;]/a[@action-type=&#x27;fl_unfold&#x27;]&quot;</span>).click()                time.sleep(<span class="hljs-number">1</span>)                WBNR = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[2]&quot;</span>).text.replace(<span class="hljs-string">&quot;\n&quot;</span>,<span class="hljs-string">&quot;&quot;</span>)                <span class="hljs-comment"># 判断发布位置是否存在</span>                <span class="hljs-keyword">try</span>:                    nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;txt&#x27;]/a/i[@class=&#x27;wbicon&#x27;]&quot;</span>).is_displayed()                    flag = <span class="hljs-literal">True</span>                <span class="hljs-keyword">except</span>:                    flag = <span class="hljs-literal">False</span>                <span class="hljs-comment"># 获取微博发布位置</span>                <span class="hljs-keyword">try</span>:                    <span class="hljs-keyword">if</span> flag:                        pattern = nodes[i].find_elements_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[2]/a[i[@class=&#x27;wbicon&#x27;]]&quot;</span>)                        <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(pattern,<span class="hljs-built_in">list</span>):                            text = [p.text <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> pattern]                            FBWZ = [loc <span class="hljs-keyword">for</span> loc <span class="hljs-keyword">in</span> [re.findall(<span class="hljs-string">&#x27;^2(.*$)&#x27;</span>, t) <span class="hljs-keyword">for</span> t <span class="hljs-keyword">in</span> text] <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(loc) &gt; <span class="hljs-number">0</span>][<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]                        <span class="hljs-keyword">else</span>:                            text = pattern.text                            FBWZ = re.findall(<span class="hljs-string">&#x27;^2(.*$)&#x27;</span>,text)[<span class="hljs-number">0</span>]                    <span class="hljs-keyword">else</span>:                        FBWZ = <span class="hljs-string">&#x27;&#x27;</span>                <span class="hljs-keyword">except</span>:                    FBWZ = <span class="hljs-string">&#x27;&#x27;</span>            <span class="hljs-keyword">else</span>:                WBNR = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;txt&#x27;]&quot;</span>).text.replace(<span class="hljs-string">&quot;\n&quot;</span>,<span class="hljs-string">&quot;&quot;</span>)                <span class="hljs-comment"># 判断发布位置是否存在</span>                <span class="hljs-keyword">try</span>:                    nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;txt&#x27;]/a/i[@class=&#x27;wbicon&#x27;]&quot;</span>).is_displayed()                    flag = <span class="hljs-literal">True</span>                <span class="hljs-keyword">except</span>:                    flag = <span class="hljs-literal">False</span>                <span class="hljs-comment"># 获取微博发布位置</span>                <span class="hljs-keyword">try</span>:                    <span class="hljs-keyword">if</span> flag:                        pattern = nodes[i].find_elements_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;txt&#x27;]/a[i[@class=&#x27;wbicon&#x27;]]&quot;</span>)                        <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(pattern,<span class="hljs-built_in">list</span>):                            text = [p.text <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> pattern]                            FBWZ = [loc <span class="hljs-keyword">for</span> loc <span class="hljs-keyword">in</span> [re.findall(<span class="hljs-string">&#x27;^2(.*$)&#x27;</span>, t) <span class="hljs-keyword">for</span> t <span class="hljs-keyword">in</span> text] <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(loc) &gt; <span class="hljs-number">0</span>][<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]                        <span class="hljs-keyword">else</span>:                            text = pattern.text                            FBWZ = re.findall(<span class="hljs-string">&#x27;^2(.*$)&#x27;</span>,text)[<span class="hljs-number">0</span>]                    <span class="hljs-keyword">else</span>:                        FBWZ = <span class="hljs-string">&#x27;&#x27;</span>                <span class="hljs-keyword">except</span>:                    FBWZ = <span class="hljs-string">&#x27;&#x27;</span>        <span class="hljs-keyword">except</span>:            WBNR = <span class="hljs-string">&#x27;&#x27;</span>        print(<span class="hljs-string">&#x27;微博内容:&#x27;</span>, WBNR)        dic[i].append(WBNR)        print(<span class="hljs-string">&#x27;发布位置:&#x27;</span>, FBWZ)        dic[i].append(FBWZ)        <span class="hljs-keyword">try</span>:            <span class="hljs-comment"># FBSJ = nodes[i].find_element_by_xpath(&quot;.//div[@class=&#x27;feed_from W_textb&#x27;]/a[@class=&#x27;W_textb&#x27;]&quot;).text</span>            FBSJ = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;from&#x27;]/a[1]&quot;</span>).text        <span class="hljs-keyword">except</span>:            FBSJ = <span class="hljs-string">&#x27;&#x27;</span>        print(<span class="hljs-string">&#x27;发布时间:&#x27;</span>, FBSJ)        dic[i].append(FBSJ)        <span class="hljs-keyword">try</span>:            <span class="hljs-comment"># WBDZ = nodes[i].find_element_by_xpath(&quot;.//div[@class=&#x27;feed_from W_textb&#x27;]/a[@class=&#x27;W_textb&#x27;]&quot;).get_attribute(&quot;href&quot;)</span>            WBDZ = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;from&#x27;]/a[1]&quot;</span>).get_attribute(<span class="hljs-string">&quot;href&quot;</span>)        <span class="hljs-keyword">except</span>:            WBDZ = <span class="hljs-string">&#x27;&#x27;</span>        print(<span class="hljs-string">&#x27;微博地址:&#x27;</span>, WBDZ)        dic[i].append(WBDZ)        <span class="hljs-keyword">try</span>:            WBLY = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//div[@class=&#x27;content&#x27;]/p[@class=&#x27;from&#x27;]/a[2]&quot;</span>).text        <span class="hljs-keyword">except</span>:            WBLY = <span class="hljs-string">&#x27;&#x27;</span>        print(<span class="hljs-string">&#x27;微博来源:&#x27;</span>, WBLY)        dic[i].append(WBLY)        <span class="hljs-keyword">try</span>:            ZF_TEXT = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//a[@action-type=&#x27;feed_list_forward&#x27;]&quot;</span>).text            <span class="hljs-comment">#            ZF_TEXT = nodes[10].find_element_by_xpath(&quot;.//a[@action-type=&#x27;feed_list_forward&#x27;]&quot;).text</span>            <span class="hljs-comment">#            ZF_TEXT.split(&#x27; &#x27;)[1]</span>            <span class="hljs-keyword">if</span> ZF_TEXT == <span class="hljs-string">&#x27;转发&#x27;</span>:                ZF = <span class="hljs-number">0</span>            <span class="hljs-keyword">else</span>:                ZF = <span class="hljs-built_in">int</span>(ZF_TEXT.split(<span class="hljs-string">&#x27; &#x27;</span>)[<span class="hljs-number">1</span>])        <span class="hljs-keyword">except</span>:            ZF = <span class="hljs-number">0</span>        print(<span class="hljs-string">&#x27;转发:&#x27;</span>, ZF)        dic[i].append(ZF)        <span class="hljs-keyword">try</span>:            <span class="hljs-comment"># PL_TEXT = nodes[i].find_element_by_xpath(&quot;.//a[@action-type=&#x27;feed_list_comment&#x27;]//em&quot;).text#可能没有em元素</span>            PL_TEXT = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//a[@action-type=&#x27;feed_list_comment&#x27;]&quot;</span>).text  <span class="hljs-comment"># 可能没有em元素</span>            <span class="hljs-comment"># nodes[10].find_element_by_xpath(&quot;.//a[@action-type=&#x27;feed_list_comment&#x27;]&quot;).text</span>            <span class="hljs-keyword">if</span> PL_TEXT == <span class="hljs-string">&#x27;评论&#x27;</span>:                PL = <span class="hljs-number">0</span>            <span class="hljs-keyword">else</span>:                PL = <span class="hljs-built_in">int</span>(PL_TEXT.split(<span class="hljs-string">&#x27; &#x27;</span>)[<span class="hljs-number">1</span>])        <span class="hljs-keyword">except</span>:            PL = <span class="hljs-number">0</span>        print(<span class="hljs-string">&#x27;评论:&#x27;</span>, PL)        dic[i].append(PL)        <span class="hljs-keyword">try</span>:            ZAN_TEXT = nodes[i].find_element_by_xpath(<span class="hljs-string">&quot;.//a[@action-type=&#x27;feed_list_like&#x27;]//em&quot;</span>).text  <span class="hljs-comment"># 可为空</span>            <span class="hljs-comment"># ZAN_TEXT = nodes[10].find_element_by_xpath(&quot;.//a[@action-type=&#x27;feed_list_like&#x27;]&quot;).text #可为空</span>            <span class="hljs-keyword">if</span> ZAN_TEXT == <span class="hljs-string">&#x27;&#x27;</span>:                ZAN = <span class="hljs-number">0</span>            <span class="hljs-keyword">else</span>:                ZAN = <span class="hljs-built_in">int</span>(ZAN_TEXT)        <span class="hljs-keyword">except</span>:            ZAN = <span class="hljs-number">0</span>        print(<span class="hljs-string">&#x27;赞:&#x27;</span>, ZAN)        dic[i].append(ZAN)        print(<span class="hljs-string">&#x27;\n&#x27;</span>)    <span class="hljs-comment"># 写入Excel</span>    writeXLS(dic)<span class="hljs-comment"># *******************************************************************************</span><span class="hljs-comment">#                                程序入口</span><span class="hljs-comment"># *******************************************************************************</span><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:    <span class="hljs-comment"># 定义变量</span>    username = <span class="hljs-string">&#x27;*************&#x27;</span>  <span class="hljs-comment"># 输入你的用户名</span>    password = <span class="hljs-string">&#x27;*************&#x27;</span>  <span class="hljs-comment"># 输入你的密码</span>    <span class="hljs-comment"># 操作函数</span>    LoginWeibo(username, password)  <span class="hljs-comment"># 登陆微博</span>    <span class="hljs-comment"># 搜索热点微博 爬取评论</span>    key = <span class="hljs-string">&#x27;青少年沉迷网络&#x27;</span>    GetSearchContent(key)</code></pre><p><span class="label label-primary">代码二借助 xlrd 模块提取 xls 的动态栏数据至 txt</span></p><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: UTF-8 -*-</span><span class="hljs-keyword">import</span> xlrd<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">extract</span>(<span class="hljs-params">inpath,f</span>):</span>    date = xlrd.open_workbook(inpath, encoding_override=<span class="hljs-string">&#x27;utf-8&#x27;</span>)    sheets = date.nsheets    print(sheets)    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,sheets):        table = date.sheets()[i]<span class="hljs-comment">#选定表</span>        nrows = table.nrows<span class="hljs-comment">#获取行号</span>        ncols = table.ncols<span class="hljs-comment">#获取列号</span>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, nrows):            alldate = table.row_values(i)<span class="hljs-comment">#循环输出excel表中每一行，即所有数据</span>            result = alldate[<span class="hljs-number">4</span>]<span class="hljs-comment">#取出表中第4列数据</span>            print(result)            f.write(result+<span class="hljs-string">&quot;\n&quot;</span>)inpath = <span class="hljs-string">&#x27;D:\桌面\Python\拓展\weiboSpider-master\关键词爬取\crawl_output_YS.xls&#x27;</span><span class="hljs-comment">#excel文件所在路径</span>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;提取到的第二列数据.txt&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>,encoding=<span class="hljs-string">&quot;utf-8&quot;</span>)extract(inpath,f)f.close()</code></pre><p><span class="label label-primary">代码三借助  jieba 和  wordcloud  模块将提取的动态数据进行分词、可视化操作</span>  [5]</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> jieba<span class="hljs-keyword">import</span> wordcloud<span class="hljs-comment"># 导入imageio库中的imread函数，并用这个函数读取本地图片，作为词云形状图片</span><span class="hljs-keyword">import</span> imageiomk = imageio.imread(<span class="hljs-string">&quot;未标题-1.png&quot;</span>)<span class="hljs-comment"># 构建并配置词云对象w，注意要加stopwords集合参数，将不想展示在词云中的词放在stopwords集合里，这里去掉“曹操”和“孔明”两个词</span>w = wordcloud.WordCloud(width=<span class="hljs-number">1000</span>,                        height=<span class="hljs-number">700</span>,                        background_color=<span class="hljs-string">&#x27;white&#x27;</span>,                        font_path=<span class="hljs-string">&#x27;msyh.ttc&#x27;</span>,                        mask=mk,                        scale=<span class="hljs-number">5</span>                        )<span class="hljs-comment"># 对来自外部文件的文本进行中文分词，得到string</span>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;提取到的第五列数据.txt&#x27;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>)txt = f.read()txtlist = jieba.lcut(txt)string = <span class="hljs-string">&quot; &quot;</span>.join(txtlist)<span class="hljs-comment"># 将string变量传入w的generate()方法，给词云输入文字</span>w.generate(string)<span class="hljs-comment"># 将词云图片导出到当前文件夹</span>w.to_file(<span class="hljs-string">&#x27;青少年沉迷网络01.png&#x27;</span>)</code></pre><h4 id="2-3-运行结果示例"><a href="#2-3-运行结果示例" class="headerlink" title="2.3 运行结果示例"></a>2.3 运行结果示例</h4><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123205744.png" alt=""></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123205628.png" alt=""></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123205835.png" alt=""></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123205838.png" alt=""></p><h3 id="3-论文主体"><a href="#3-论文主体" class="headerlink" title="3.论文主体"></a>3.论文主体</h3><p>通过爬取以及可视化之后我们发现爬取数据中出现频率较高的一些词汇包含以下内容： <strong>青少年沉迷网络<br>收起全文（忽略） 网络 网路 游戏机  光盘 净空法师 阿弥陀佛 毒药 害人 网络游戏 侵蚀 荒废 杀人 荒废学业 色情 害人 祸害 法身 山东 临沂 杨氏模 机构 CCTV 今日说法 焦点访谈 救治 担心 孩子 挽回 千家万户 家长 民族 儿女 中国 文明 健康 强大  必须 严厉 监管 有关部门  腾讯 网吧 政府 支持 推广 公立  时间 观察 请问 央视 新闻 爱</strong></p><p>接下来我将从家庭社会对青少年沉迷网络的态度做法来分析当前未成年人沉迷网络现状，由当前现状来分析为什么青少年会沉迷于网络，最后根据一些自己以及网络上的看法来分析如何做到防止青少年沉迷网络。</p><h4 id="3-1-当前未成年人沉迷网络现状"><a href="#3-1-当前未成年人沉迷网络现状" class="headerlink" title="3.1 当前未成年人沉迷网络现状"></a>3.1 当前未成年人沉迷网络现状</h4><p>当看到上面提取的关键词的时候，我的内心是极其欢喜的，因为在这些关键词里面我感觉到互联网的奇妙，互联网涵盖了几乎这个问问题的所有社会观点，于是我将这些关键词进行分类处理得到以下几类：</p><p><span class="label label-primary"><br>青少年沉迷网络<br>收起全文（忽略）<br>网络 网路 游戏机 光盘 腾讯 网络游戏 色情<br>净空法师 阿弥陀佛<br>毒药  侵蚀 杀人 荒废学业 害人 祸害<br>法身 山东 临沂 杨氏模 机构 CCTV 今日说法 焦点访谈 救治<br>担心 孩子 挽回 千家万户 家长<br>民族 儿女 中国 文明 健康 强大<br>必须 严厉 监管 有关部门  腾讯 网吧 政府 支持 推广 公立<br>时间 观察 请问 央视 新闻 爱</span></p><p><span class="label label-primary">对以上词汇分析可得到一下几点内容：<br>当前青少年沉迷于网络多半是因为网络游戏，随着互联网的普及，各种互联网衍生品也层出不穷，例如色情、网络游戏等，互联网游戏公司也如雨后春笋般的蓬勃发展，也正是因为游戏的不断创作导致很多自制力还不健全的青少年沉浸其中。</span><br><span class="label label-primary">随着青少年沉迷网络的数目不断变大，社会中讨伐互联网的舆论也不断上升，主要表现为：<br>互联网荒废青少年的学业<br>互联网就是毒药，祸害人。<br>互联很多是竞技比赛，打打杀杀导致社会犯罪率增加。</span></p><p><span class="label label-primary">针对青少年沉迷网络，引发社会各种舆论对策：</span></p><p><span class="label label-primary">家长对子女的担心、忧虑。</span><br><span class="label label-primary">以山东临沂戒网中心为代表的所谓”杨氏模救治“机构的建立。</span><br><span class="label label-primary">CCTV、焦点访谈针对未成年人沉迷网络的相关报道。</span><br><span class="label label-primary">政府考虑社会热点以及民族未来开展“健康中国”“文明中国”活动。</span><br><span class="label label-primary">政府推进对网吧、腾讯等平台的监管力度。</span><br><span class="label label-primary">还有一部分人不反对青少年合理利用网络，认为互联网更像是七八十年代的摇滚乐，只是还没有被人们认可，暂时地认为是腐朽青年一代的产品。在他们看来，青少年沉迷网络的根本原因是由于家庭中缺少爱。</span></p><h4 id="3-2-为什么青少年会沉迷网络"><a href="#3-2-为什么青少年会沉迷网络" class="headerlink" title="3.2 为什么青少年会沉迷网络"></a>3.2 为什么青少年会沉迷网络</h4><p><span class="label label-primary"><br>  知乎问题：青少年为何会对网络成瘾？[6]</p><p>  孩子没有获得足够的陪伴。<br>  孩子没有获得尊重。<br>  青少年的发展特点 根据马斯洛需求层次理论，人底层的需求被满足后，便会产生高层次的需。如果心理需求不能得到满足的话，会产生焦虑，孤独等心理问题。青少面时期是个体由不成熟过渡的重要时期，心理状态不稳定，情绪起伏大，自制力相对较差，心理需要比成年人强烈而明显。<br>&lt;/span&gt;</p><p>从社会角度考虑，当今社会是互联网社会，随着笔记本电脑、平板、智能手机等互联网产品种类以及支付宝、淘宝、QQ、微信等软件的开发利用，涵盖人们生活的各个领域，娱乐作为人们日常生活重要的一部分，游戏行业蓬勃发展，也逐渐赢得了青少年的喜爱。再加上当今社会重功利化，家庭赋予太大的学习压力，游戏也顺势站在了学习的对立面；从青少年人群分析我们知道青少年自制力稍欠，并且获取信息的欲望很强，很难在网络中辨别是非，误入歧途；站在游戏的角度考虑，为什么会受到那么多人的喜爱。我想他们正是抓住了很多人在生活中没有存在感，缺少父母的陪伴，于是在网络中提供了一个可以有存在感的空间；但是最重要的一点还是家庭原因，青少年在家轻重缺少陪伴与关爱，再加上对现实生活的不满，他们不得不选择去互联网去释放压力寻求慰藉。</p><h4 id="3-3-怎样才能做到防青少年沉迷网络"><a href="#3-3-怎样才能做到防青少年沉迷网络" class="headerlink" title="3.3 怎样才能做到防青少年沉迷网络"></a>3.3 怎样才能做到防青少年沉迷网络</h4><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123210526.jpg" alt=""><br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123210527.jpg" alt=""></p><p class="note note-primary">  朱永新建议，从网络游戏类别、认证、时长、充值方面建立网络游戏强制分级制度，并由相关政府部门审核监管。根据目前社会发展客观实际和网络游戏内容，比如是否包含暴力内容、不良语言、性内容等，可从早教类、管控类、限制类、禁止类等方面划分，对不同年龄段的未成年人建立网络游戏产品分级制度，其中包括实行用户注册登录实名认证分级，通过未成年人及其监护人身份证信息、手机号或人脸识别等方式实行未成年人登录网游时段、时长监管分级，实行游戏充值限额分级等。  朱永新还建议，建立网络游戏分级监管与评价机制，并修订完善网络游戏法律法规，对《未成年保护法》《网络安全法》《出版管理条例》《网络游戏管理暂行办法》进行修订，增加“基于未成年人保护的网络游戏分级”相关内容。[6]</p><p>在今年两会上，也有关于青少年沉迷网络的声音，因为目前我国尚没有全国性的行业协会，相关法律法规及管理条例内容宏观，缺少具体的细则和分级方案，执行效果不明显。全国政协委员、民进中央副主席朱永新呼吁建立网络游戏分级制度，通过人脸识别等技术实行未成年人登入网游时段、时长监管分级，防止青少年沉迷网络游戏。因此，政府还应该完善相关法律制度，建立健全相关法律规章制度，企业也应做好对未成年人的监督，在技术层面上做到硬核防沉迷。</p><p class="note note-primary">从家庭教育关注未成年人权益保护，是一个很重要的角度。家庭是青少年成长的第一环境，是预防青少年走向犯罪歧路的第一道防线。孩子出了问题，多数情况下说明家庭教育出了问题。现在正大修的未成年人保护法和预防未成年人犯罪法，都把家庭教育作为了发力点之一。但相对来说，这都是一些原则性规定，效力十分有限。制定专门的“家庭教育法”，是在更高维度上唤起社会重视：家庭教育是不是一门专门的学问？家长需不需要接受专门的教育？答案是肯定的。</p><p class="note note-primary">这次疫情期间，让近2亿中小学生迎来史无前例的在线教育，同时也凸显了青少年沉迷网络的问题。许多家长惊奇地发现，以前总是把问题归咎为“没时间照顾孩子”，但现在陪孩子的时间多了，却发现不了解他们，甚至无法沟通交流。这种尴尬指向的是，大多数人结婚生子后就无师自通，不需要学习就当上了家长。这实际是不够的，正如蒙台梭利所说，“儿童是成人之父”。和孩子相处是个学习和成长过程，家长们不应把教育看得太简单。</p>  <p class="note note-primary">以“沉迷游戏”为例。调查显示，有4种青少年特别容易出现游戏成瘾现象，分别是家庭条件较差的；隔代教育下的；家庭关系差、亲子互动少的；家长对子女游戏行为没有限制的。它的心理机制是：亲子互动不足，只好到游戏里找补偿。家长需要反思的是，如果只生不养、只养不教，一下班自己也玩游戏，将孩子丢给别人看护，甚至拿手机当“电子保姆”，孩子很可能产生心理偏差。可见，家长需要接受教育，思考怎样正确爱孩子，让孩子健康成长。</p>  <p class="note note-primary">进一步，“家庭教育法”有助于厘清家庭教育和学校教育的责任边界。学校、社会、家庭教育三者为一体，学校教育负责传道授业，社会教育重在历事练心，家庭教育关心爱和成长，三者互为犄角，谁也取代不了谁。但在现实中，人们常常把孩子的希望寄托在学校，过分夸大学校教育的作用，轻视自己的责任，这是一种失职渎职。进一步明确家庭教育的定位和功能，有利于家长看到自身责任，从而合力探讨家庭教育怎么做，它的着力点、抓手在哪里。</span>  <p class="note note-primary">“天下之本在国，国之本在家。”习近平总书记多次强调要“注重家庭、注重家教、注重家风”，强调家长要给孩子讲好“人生第一课”，帮助扣好人生第一粒扣子，并强调要认真研究家庭领域出现的新情况新问题，把推进家庭工作作为一项长期任务抓实抓好。长期以来，家庭教育被认为是私领域的事，没有引起足够重视。人大代表的立法建议，有利于提升家庭教育地位、规范家庭教育行为。就目前来讲，如果能引起家庭的反思，也是件十分有益的事。</p>[7]<p class="note note-primary">当然最重要的还是家庭层面，有时候孩子需要的不是锦衣玉食、而是陪伴。现代生活中，人们的生活逐渐碎片化，家长们越来越忙，家里买台电脑、买个平板可以让孩子在网上学习，但是对于孩子来说，他们尚未形成良好的自制能力，对网络繁杂的信息，没有辨别好坏的能力，他会忍不住玩游戏或者浏览色情网站，从而潜移默化的影响着他们的生活习惯甚至一生。因此，家长应该正视互联网或者游戏，不是上网就是有“网瘾”，应该重视与孩子的沟通，寓教于乐，多关注孩子的动态以及上网习惯、及时对孩子进行正面指导[8]。学校社会媒体也应该正视网络，不要妖魔化网络，积极宣传正能量，引导青少年健康文明上网。</p><p class="note note-primary">正如上文所说，此次疫情“网上课堂”凸显了这个问题，我们就应该全民正视这个问题，不要推脱责任给任何不良机构或者控诉某些企业，多从自己方面找原因，这一点，我认为家长、学校、社会三方都应该做好反思。</p><h3 id="4-结论"><a href="#4-结论" class="headerlink" title="4 结论"></a>4 结论</h3><p>网络上对互联网的夸赞不胜其属，其中就有人认为互联网解放了青少年的思想，固然他拓宽了人们获取知识的渠道，当然随着生活水平的提高，互联网的确给生活带来了极大的便利，但是这仍然无法掩盖互联网是把双刃剑的事实。在这里，最主要的还是家长需要接受教育，思考怎样正确爱孩子，让孩子健康成长。请不要绑架互联网，互联网只是工具，说白了，没有上瘾与不上瘾，只有失败和不失败。这不应该是家长掩盖教育失败这个事实而冠冕堂皇的理由。当然，政府企业也应该重视青少年的发展。建立健全相关法律法规，完善监管制度，让祖国的下一代能够健康成长。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.cnblogs.com/xifengmo/p/10989565.html">解决python中’chromedriver’ executable needs to be in PATH报错</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://blog.csdn.net/qq_41429288/article/details/80472064">关于Chromedriver如何配置环境变量问题解决</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://github.com/princewen/python3_crawl/blob/master/爬虫实战/使用selenium爬取按关键词搜索的微博.py">使用selenium爬取按关键词搜索的微博.py](https://github.com/princewen/python3_crawl/blob/master/%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98/%E4%BD%BF%E7%94%A8selenium%E7%88%AC%E5%8F%96%E6%8C%89%E5%85%B3%E9%94%AE%E8%AF%8D%E6%90%9C%E7%B4%A2%E7%9A%84%E5%BE%AE%E5%8D%9A.py</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="http://www.chenxm.cc/article/882.html">python xlrd读取excel(表格)详解</a><a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span><a href="https://blog.csdn.net/qq_41822781/article/details/90671050">词云可视化：四行Python代码轻松上手到精通</a><a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:6" class="footnote-text"><span><a href="https://ie.bjd.com.cn/5b165687a010550e5ddc0e6a/contentApp/5b16573ae4b02a9fe2d558f9/AP5ecb00b6e4b0be621cbdc2d0.html">朱永新委员：建立网络游戏分级制 人脸识别防未成年人沉迷</a><a href="#fnref:6" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:7" class="footnote-text"><span><a href="https://static.nfapp.southcn.com/content/202005/21/c3560548.html?from=timeline&amp;date=ZjNhZWVlMTEtZGU0MS00MmM1LWFmOWItM2EyODIwYjMzYjk2&amp;layer=4">叮咚看两会|制定“家庭教育法”很有必要</a><a href="#fnref:7" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:8" class="footnote-text"><span><a href="https://zhuanlan.zhihu.com/p/35749013">如何减少互联网带给孩子的危害</a><a href="#fnref:8" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>网络沉迷</tag>
      
      <tag>青少年</tag>
      
      <tag>调查报告</tag>
      
      <tag>爬虫</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[11:面向初学者的20个树莓派命令]</title>
    <link href="/2020/07/18/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B11%E9%9D%A2%E5%90%91%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%8420%E4%B8%AA%E6%A0%91%E8%8E%93%E6%B4%BE%E5%91%BD%E4%BB%A4%5D/"/>
    <url>/2020/07/18/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B11%E9%9D%A2%E5%90%91%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%8420%E4%B8%AA%E6%A0%91%E8%8E%93%E6%B4%BE%E5%91%BD%E4%BB%A4%5D/</url>
    
    <content type="html"><![CDATA[<p class="note note-primary">  您可能从快乐的Windows GUI用户变为没有按钮或双击任何东西的怀旧黑屏和绿屏。自从您的第一台PC开始使用GUI以来，这可能是令人恐惧的事情。  但是，有许多小技巧和命令可以帮助用户获得使用该系统的信心。  这里没有高级或突破性的内容，只有日常的基本命令可以帮助您从终端窗口浏览和执行Raspberry Pi的简单任务。随着时间的推移，您会发现更多的东西，但这是一个很好的起点。</p><h3 id="01-sudo-apt-get更新-更新程序包列表"><a href="#01-sudo-apt-get更新-更新程序包列表" class="headerlink" title="01.[sudo apt-get更新]-更新程序包列表"></a>01.[sudo apt-get更新]-更新程序包列表</h3><p><span class="label label-primary">终端中的更新命令<br><pre><code class="hljs shell">sudo apt-get update</code></pre><br><span class="label label-primary">这是更新Raspberry Pi的第一阶段（有关其他步骤，请参阅此列表中的下两个项目）。</span></p><p>“ sudo apt-get update”命令 从存储库下载软件包列表，并获取有关这些软件包的最新版本以及任何相关软件包的信息。</p><p>因此，它实际上并没有进行传统意义上的任何实际更新。在整个过程中，它更是一个必需的步骤。</p><h3 id="02-sudo-apt-get-upgrade-下载并安装更新的软件包"><a href="#02-sudo-apt-get-upgrade-下载并安装更新的软件包" class="headerlink" title="02.[sudo apt-get upgrade]-下载并安装更新的软件包"></a>02.[sudo apt-get upgrade]-下载并安装更新的软件包</h3><p><span class="label label-primary">终端中的升级命令</span><br><pre><code class="hljs shell">sudo apt-get upgrade</code></pre><br><span class="label label-primary">此命令从我们更新软件包列表的上一个项目开始。</span></p><p>有了我们更新的软件包列表后，“ sudo apt-get upgrade”命令将查看当前安装的软件包，然后查看最新的软件包列表（我们刚刚升级的软件包），然后最后安装所有尚未安装的新软件包。</p><h3 id="03-sudo-apt-get-clean-清理旧程序包文件"><a href="#03-sudo-apt-get-clean-清理旧程序包文件" class="headerlink" title="03.[sudo apt-get clean]-清理旧程序包文件"></a>03.[sudo apt-get clean]-清理旧程序包文件</h3><p><span class="label label-primary">终端中的清理命令</span><br><pre><code class="hljs shell">sudo apt-get clean</code></pre><br><span class="label label-primary">更新和升级过程的最后阶段，如果您有足够的磁盘空间，那么这并非总是必不可少的。</span></p><p>“ sudo apt-get clean”命令删除在更新过程中下载的冗余软件包文件（.deb文件）。</p><p>如果您空间有限或只想进行良好的清理，这是一个方便的命令。</p><h3 id="04-sudo-raspi-config-Raspberry-Pi配置工具"><a href="#04-sudo-raspi-config-Raspberry-Pi配置工具" class="headerlink" title="04.[sudo raspi-config]-Raspberry Pi配置工具"></a>04.[sudo raspi-config]-Raspberry Pi配置工具</h3><p><span class="label label-primary">Raspberry Pi配置工具</span></p><p><span class="label label-primary">这应该是您首次开始使用Raspberry Pi时要采取的第一步，以确保已针对您的语言，硬件和项目进行了设置。</span></p><p>配置工具就像一个“设置”窗口，可让您设置语言，时间/日期，启用摄像头模块，对处理器进行超频，启用设备，更改密码以及许多其他选项。</p><p>您可以通过键入“ sudo raspi-config”然后按回车来访问它。根据您所做的更改，之后可能会提示您重新启动Pi。</p><h3 id="05-ls-列出目录内容"><a href="#05-ls-列出目录内容" class="headerlink" title="05.[ls]-列出目录内容"></a>05.[ls]-列出目录内容</h3><p><span class="label label-primary">终端中的ls命令</span></p><pre><code class="hljs shell">ls 目录</code></pre><p><span class="label label-primary">Linux的“目录”与Windows中的“文件夹”相同。这可能是您（Windows用户）必须习惯的。</span></p><p>当然，终端中没有浏览器，因此要查看您在任何给定时间所在目录的内容，只需键入“ ls”并按回车即可。</p><p>您将看到列出该目录中的每个文件和目录，并且通常为不同项目使用颜色编码。</p><h3 id="06-cd-更改目录"><a href="#06-cd-更改目录" class="headerlink" title="06.[cd]-更改目录"></a>06.[cd]-更改目录</h3><p><span class="label label-primary">终端中的cd命令</span><br><pre><code class="hljs shell">cd 目录</code></pre><br><span class="label label-primary">如果要跳转到某个目录，可以使用“ cd”命令。</span></p><p>如果您已经在其中的目录中有目录，则可以简单地使用“ cd directoryname”（用目录名替换“ directoryname”）。</p><p>如果它在文件系统中的其他位置，只需在命令后输入路径，例如“ cd / home / pi / directoryname”。</p><p>此命令的另一个方便用法是“ cd ..”，它使您返回一个文件夹级别，类似于“返回”按钮。</p><h3 id="07-mkdir-创建目录"><a href="#07-mkdir-创建目录" class="headerlink" title="07.[mkdir]-创建目录"></a>07.[mkdir]-创建目录</h3><p><span class="label label-primary">终端中的mkdir命令</span></p><p><span class="label label-primary">mkdir 目录名</span></p><p><span class="label label-primary">如果需要在已经存在的目录中创建一个新目录，则可以使用“ mkdir”命令。这是 相当于终端世界的新&gt; 文件夹。</span></p><p>要创建新目录，只需在命令后添加目录名称，例如’mkdir new_directory’。</p><h3 id="08-rmdir-删除目录"><a href="#08-rmdir-删除目录" class="headerlink" title="08.[rmdir]-删除目录"></a>08.[rmdir]-删除目录</h3><p><span class="label label-primary">您已经了解了如何创建新目录，但是如果要删除一个目录该怎么办？</span></p><pre><code class="hljs shell">rmdir 目录名</code></pre><p><span class="label label-primary">这是删除目录的非常相似的命令，只需使用“ rmdir”然后输入目录名称即可。</span></p><p>例如，“ rmdir directory_name”将删除目录“ directory_name”。值得注意的是，该目录必须为空才能执行此命令。</p><h3 id="09-mv-移动文件"><a href="#09-mv-移动文件" class="headerlink" title="09.[mv]-移动文件"></a>09.[mv]-移动文件</h3><p><span class="label label-primary">使用“ mv”命令移动文件</span><br><pre><code class="hljs shell">mv 文件名 移动位置</code></pre><br><span class="label label-primary">通过使用“ mv”命令可在目录之间移动文件。</span></p><p>要移动文件，请使用“ mv”，然后是文件名，然后是目标目录。</p><p>例如“ mv my_file.txt / home / pi / destination_directory”，它将“ my_file.txt”文件移动到“ / home / pi / destination_directory”。</p><h3 id="10-tree-d-显示目录树"><a href="#10-tree-d-显示目录树" class="headerlink" title="10.[tree -d]-显示目录树"></a>10.[tree -d]-显示目录树</h3><pre><code class="hljs shell">tree -d</code></pre><p><span class="label label-primary">Tree命令是查看目录结构的便捷方法</span><br>创建少量新目录后，您可能会缺少Windows文件资源管理器的可视文件夹结构视图。如果无法看到目录的直观布局，事情可能会很快变得混乱。</p><p>可以帮助您更清楚地了解目录的命令之一是“ tree -d”。它在终端内以树状布局显示所有目录。</p><h3 id="11-pwd-显示当前目录"><a href="#11-pwd-显示当前目录" class="headerlink" title="11.[pwd]-显示当前目录"></a>11.[pwd]-显示当前目录</h3><pre><code class="hljs shell">pwd</code></pre><p><span class="label label-primary">当您开始感到有点迷茫时，使用“ pwd”可以为您提供帮助！</span></p><p>当您迷路时，另一个帮助您的便捷命令是’pwd’命令。如果您只想知道自己在任何给定时间的位置，这将非常方便。</p><p>只需随时输入“ pwd”以显示您所在的当前目录路径。</p><h3 id="12-clear-清除终端窗口"><a href="#12-clear-清除终端窗口" class="headerlink" title="12.[clear]-清除终端窗口"></a>12.[clear]-清除终端窗口</h3><pre><code class="hljs shell">clear</code></pre><p><span class="label label-primary">在终端中清除命令</span></p><p>当您开始使用终端机时，您会发现它会变得很混乱。在执行一些命令之后，您会在屏幕上留下一小段文字，对于我们中的某些人来说可能有点烦人。</p><p>如果要擦拭屏幕干净，只需使用“ clear”命令。屏幕将被清除，为下一个命令做好准备。</p><h3 id="13-sudo-half-关闭您的Raspberry-Pi"><a href="#13-sudo-half-关闭您的Raspberry-Pi" class="headerlink" title="13.[sudo half]-关闭您的Raspberry Pi"></a>13.[sudo half]-关闭您的Raspberry Pi</h3><p><span class="label label-primary">使用“ half”命令安全关闭Raspberry Pi</span></p><p>安全地关闭Raspberry Pi可以避免SD卡损坏等问题。您有时可以通过快速拉动电源线来逃脱，但是最终，您将杀死您的卡。</p><p>要正确关闭树莓派，请使用“ sudo halt”。在Pi的LED上最后闪烁一次之后，您可以拔下电源线。</p><h3 id="14-sudo-reboot-重新启动Raspberry-Pi"><a href="#14-sudo-reboot-重新启动Raspberry-Pi" class="headerlink" title="14.[sudo reboot]-重新启动Raspberry Pi"></a>14.[sudo reboot]-重新启动Raspberry Pi</h3><p><span class="label label-primary">在终端中使用重新启动来重新启动Pi</span></p><pre><code class="hljs shell">sudo reboot</code></pre><p>与shutdown命令类似，如果您想以安全的方式重启Raspberry Pi，则可以使用“ reboot”命令。</p><p>只需键入“ sudo reboot”，Pi就会自行重启。</p><h3 id="15-startx-启动桌面环境（LXDE）"><a href="#15-startx-启动桌面环境（LXDE）" class="headerlink" title="15.[startx]-启动桌面环境（LXDE）"></a>15.[startx]-启动桌面环境（LXDE）</h3><p><span class="label label-primary">终端中的startx命令</span></p><pre><code class="hljs shell">startx</code></pre><p><span class="label label-primary">如果您将Pi设置为始终在终端中启动，则您可能想知道如何启动桌面（如果需要使用它）。</span></p><p>使用“ startx”启动LXDE（轻便X11桌面环境）。应该注意的是，这将无法通过SSH会话进行。</p><h3 id="16-ifconfig-查找您的Raspberry-Pi的IP地址"><a href="#16-ifconfig-查找您的Raspberry-Pi的IP地址" class="headerlink" title="16.[ifconfig]-查找您的Raspberry Pi的IP地址"></a>16.[ifconfig]-查找您的Raspberry Pi的IP地址</h3><pre><code class="hljs shell">ifconfig</code></pre><p><span class="label label-primary">ifconfig可以为您提供有用的网络信息</span><br>在很多情况下，可能需要您知道Raspberry Pi 的IP地址。许多人在配置SSH会话以远程访问其Pi时使用它。</p><p>要查找您的IP地址，请在终端中键入“ ifconfig”，然后按Enter。您也可以使用“主机名-I”自行查找IP地址。</p><h3 id="17-nano-编辑文件"><a href="#17-nano-编辑文件" class="headerlink" title="17.[nano]-编辑文件"></a>17.[nano]-编辑文件</h3><p><span class="label label-primary">终端中的Nano，是Raspberry Pi的首选文本编辑器</span><br>Linux有许多不同的文本编辑器，由于各种原因，您会发现有些人喜欢使用另一种。</p><p>要编辑文件，只需键入“ nano”，然后键入文件名，例如“ nano myfile.txt”。编辑完成后，按Ctrl + X保存文件。</p><h3 id="18-cat-显示文件的内容"><a href="#18-cat-显示文件的内容" class="headerlink" title="18.[cat]-显示文件的内容"></a>18.[cat]-显示文件的内容</h3><pre><code class="hljs shell">cat</code></pre><p><span class="label label-primary">终端中的cat</span></p><p>虽然可以使用“ nano”（上方）打开文件进行编辑，但是可以使用单独的命令在终端中简单列出文件的内容。</p><p>使用“ cat”后跟文件名来执行此操作，例如，“ cat myfile.txt”。</p><h3 id="19-rm-删除文件"><a href="#19-rm-删除文件" class="headerlink" title="19.[rm]-删除文件"></a>19.[rm]-删除文件</h3><p><span class="label label-primary">终端中的rm命令有助于轻松删除文件</span><br><pre><code class="hljs shell">rm 文件名</code></pre><br>在Raspberry Pi上，删除文件很容易，并且在编写代码麻烦的同时制作许多版本的Python文件时，您会做很多事情。</p><p>要删除文件，我们使用“ rm”命令，后跟文件名。例如“ rm myfile.txt”。</p><h3 id="20-cp-复制文件或目录"><a href="#20-cp-复制文件或目录" class="headerlink" title="20.[cp]-复制文件或目录"></a>20.[cp]-复制文件或目录</h3><pre><code class="hljs shell">cp 文件名或目录名</code></pre><p><span class="label label-primary">终端中的cp命令可帮助复制文件</span><br><span class="label label-primary">当需要复制文件或目录时，请使用“ cp”命令。</span></p><p>要在同一目录中复制文件，请输入命令“ cp original_file new_file”</p><p>要在另一个具有相同名称的目录中进行复制，请输入命令“ cp original_file home / pi / subdirectory”</p><p>要复制整个目录（及其内容），请输入命令“ cp -R home / pi / folder_one home / pi / folder_two”。这会将“ folder_one”复制到“ folder_two”。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.lxx1.com/3985">面向初学者的20个树莓派命令</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://www.lifewire.com/raspberry-pi-terminal-commands-4054108">20 Handy Raspberry Pi Terminal Commands for Beginners</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>基地2.0</tag>
      
      <tag>系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[10:基地2.0开启9090端口和VNC内网穿透]</title>
    <link href="/2020/07/17/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B10%E5%9F%BA%E5%9C%B02.0%E5%BC%80%E5%90%AF9090%E7%AB%AF%E5%8F%A3%E5%92%8CVNC%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%5D/"/>
    <url>/2020/07/17/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B10%E5%9F%BA%E5%9C%B02.0%E5%BC%80%E5%90%AF9090%E7%AB%AF%E5%8F%A3%E5%92%8CVNC%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%5D/</url>
    
    <content type="html"><![CDATA[<p class="note note-primary">  之前做过本地搭的网站的内网穿透，但是想利用内网穿透把基地2.0的管理界面和vnc界面集成进去。之前也做过尝试，但是可能都由于安装的系统不完整等等原因导致无法穿透，今天尝试了一下vnc发现可以，但是9090管理端口可能由于安全连接导致无法实现……</p><h4 id="vnc"><a href="#vnc" class="headerlink" title="vnc"></a>vnc</h4><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122222722.png" alt=""></p><p><span class="label label-primary">这个端口没有安全设置，只需要按照sunny-ngrok官方文档设置就可以。</span></p><p><a href="http://www.baixf.xyz/index.php/2020/06/12/%e6%a0%91%e8%8e%93%e6%b4%be%e4%bd%bf%e7%94%a8ngrok%e8%bf%9b%e8%a1%8c%e5%86%85%e7%bd%91%e7%a9%bf%e9%80%8f%ef%bc%8c%e5%9c%a8%e5%85%ac%e7%bd%91%e4%b8%8a%e6%90%ad%e5%bb%ba%e4%b8%aa%e4%ba%ba%e5%8d%9a/">设置参考链接</a></p><h4 id="9090"><a href="#9090" class="headerlink" title="9090"></a>9090</h4><p><span class="label label-primary"><br>  错误显示如下：<br>  此网站无法提供安全连接，localhost 发送的响应无效</span></p><p><span class="label label-primary">在设置9090管理端口内网穿透时发现由于安全性无法进行连接，因此寻找方法，发现如下文章：</span></p><p><a href="https://blog.csdn.net/wang_xiaoniao/article/details/107280638">csdn原文链接</a></p><p><span class="label label-primary"><br>  三、错误原因<br>  使用了https作为网络协议，应用http代替https。<br>  HTTPS和HTTP的区别<br>  1、https协议需要到ca申请证书，一般免费证书较少，因而需要一定费用。<br>  2、http是超文本传输1653协议，信息是明文传输，https则是具有安全性的ssl加密传输协议<br>  3、http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443<br>  4、http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。</p><p>  其实网站的报错就已经提示了错误原因，此网站无法提供安全连接。因为我本地搭建的服务器并没有申请ssl数字证书，只是简单的作为项目运行时的临时服务器，所以无法用https进行访问。<br>  ————————————————<br>  版权声明：本文为CSDN博主「wang_xiaoniao」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>&lt;/span&gt;</p><p><span class="label label-primary">⚠即解决办法就是将内网穿透的http换成https协议</span></p><p><span class="label label-primary">修改后的效果如下</span></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122223141.png" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="http://www.ngrok.cc/_book/">Sunny-Ngrok使用教程</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://www.ngrok.cc/">Sunny-Ngrok官网</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>基地2.0</tag>
      
      <tag>内网穿透</tag>
      
      <tag>9090端口</tag>
      
      <tag>vnc</tag>
      
      <tag>http协议</tag>
      
      <tag>sunny-ngrok</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[09:使用Ngrok进行内网穿透，在公网上搭建个人博客]</title>
    <link href="/2020/07/16/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B09%E4%BD%BF%E7%94%A8Ngrok%E8%BF%9B%E8%A1%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%EF%BC%8C%E5%9C%A8%E5%85%AC%E7%BD%91%E4%B8%8A%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%5D/"/>
    <url>/2020/07/16/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B09%E4%BD%BF%E7%94%A8Ngrok%E8%BF%9B%E8%A1%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%EF%BC%8C%E5%9C%A8%E5%85%AC%E7%BD%91%E4%B8%8A%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%5D/</url>
    
    <content type="html"><![CDATA[<p class="note note-primary">  树莓派性能虽然比不上家用电脑或者服务器，但是搭建个人博客网站足够了。我使用树莓派4B，在树莓派上安装了宝塔面板，利用wordpress在本地搭建了一个个人博客。博客搭建好了，树莓派网站只能在局域网内访问，存在外网无法访问的问题。为解决这个问题，经过一番搜索，终于发现树莓派可以使用Ngrok进行内网穿透，从而在公网上也可以访问树莓派上的博客网站。以下是教程。</p><h3 id="一、Ngrok-介绍和选择服务商"><a href="#一、Ngrok-介绍和选择服务商" class="headerlink" title="一、Ngrok 介绍和选择服务商"></a>一、Ngrok 介绍和选择服务商</h3><p><span class="label label-primary"><br>  首先，什么是Ngrok?</span></p><p><span class="label label-primary">ngrok 通过安全隧道将位于NAT和防火墙后面的本地服务器公开到公共Internet，即将没有公网IP地址的服务器公开到公网，从而可以在任何地方访问局域网内的服务器。</span></p><p><span class="label label-primary"><br>  其次，Ngrok是怎么运行的？</span></p><p><span class="label label-primary">您可以在计算机上下载并运行客户端程序，并为客户端提供网络服务（通常是Web服务器）的端口。</span></p><p><span class="label label-primary">客户端连接到ngrok云服务，该服务在公网上接受流量，并将该流量转发到计算机上运行的ngrok进程，然后再转发到您指定的本地地址，从而实现内网穿透。</span></p><p><span class="label label-primary">最后如何选择Ngrok云服务，如果你有云服务器，那么你可以自己搭建Ngrok云服务，也可以选择Ngrok服务商，因为方便就没有自建服务。对比了Ngrok官方和 Sunny Ngrok之后，最终选择了Sunny Ngrok，因为从两个服务商提供的服务来说，官方的不能自定义域名，虽然提供4个通道，但是每分钟有40次连接的限制。</span></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122224244.png" alt=""></p><h4 id="Ngrok-提供的服务价格"><a href="#Ngrok-提供的服务价格" class="headerlink" title="Ngrok 提供的服务价格"></a>Ngrok 提供的服务价格</h4><p><span class="label label-primary">而我只需要一个通道就够了，并且我有个人的域名，所以选择了可以自定义域名的Sunny Ngrok。</span></p><h3 id="二、注册Sunny-Ngrok，并开通隧道"><a href="#二、注册Sunny-Ngrok，并开通隧道" class="headerlink" title="二、注册Sunny-Ngrok，并开通隧道"></a>二、注册Sunny-Ngrok，并开通隧道</h3><p><span class="label label-primary">在Sunny-Ngrok上注册一个账号，然后进入后台，开通一个隧道。</span></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122224918.png" alt=""></p><p>开通Sunny-Ngrok 隧道</p><h3 id="三、在宝塔面板中绑定新的域名"><a href="#三、在宝塔面板中绑定新的域名" class="headerlink" title="三、在宝塔面板中绑定新的域名"></a>三、在宝塔面板中绑定新的域名</h3><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122224956.png" alt=""></p><h3 id="四、下载客户端，并启动隧道"><a href="#四、下载客户端，并启动隧道" class="headerlink" title="四、下载客户端，并启动隧道"></a>四、下载客户端，并启动隧道</h3><h4 id="1-在树莓派上下载Ngrok客户端"><a href="#1-在树莓派上下载Ngrok客户端" class="headerlink" title="1.在树莓派上下载Ngrok客户端"></a>1.在树莓派上下载Ngrok客户端</h4><p><a href="http://hls.ctopus.com/sunny/linux_arm.zip?v=2">下载地址</a></p><p>下载完成之后将客户端执行文件移动到 /use/local/bin 目录下并给予可执行权限。</p><pre><code class="hljs shell">sudo mv sunny /usr/local/bin/sunnysudo chmod +x /usr/local/bin/sunny</code></pre><h4 id="2、编写启动脚本"><a href="#2、编写启动脚本" class="headerlink" title="2、编写启动脚本"></a>2、编写启动脚本</h4><pre><code class="hljs shell">sudo nano /etc/init.d/sunny/etc/init.d/sunny 启动脚本代码</code></pre><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/bin/sh -e</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">## BEGIN INIT INFO</span></span><span class="hljs-meta">#</span><span class="bash"> Provides:          ngrok.cc</span><span class="hljs-meta">#</span><span class="bash"> Required-Start:    <span class="hljs-variable">$network</span> <span class="hljs-variable">$remote_fs</span> <span class="hljs-variable">$local_fs</span></span><span class="hljs-meta">#</span><span class="bash"> Required-Stop:     <span class="hljs-variable">$network</span> <span class="hljs-variable">$remote_fs</span> <span class="hljs-variable">$local_fs</span></span><span class="hljs-meta">#</span><span class="bash"> Default-Start:     2 3 4 5</span><span class="hljs-meta">#</span><span class="bash"> Default-Stop:      0 1 6</span><span class="hljs-meta">#</span><span class="bash"> Short-Description: autostartup of ngrok <span class="hljs-keyword">for</span> Linux</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">## END INIT INFO</span></span>NAME=sunnyDAEMON=/usr/local/bin/$NAMEPIDFILE=/var/run/$NAME.pid[ -x &quot;$DAEMON&quot; ] || exit 0case &quot;$1&quot; in  start)      if [ -f $PIDFILE ]; then        echo &quot;$NAME already running...&quot;        echo -e &quot;\033[1;35mStart Fail\033[0m&quot;      else        echo &quot;Starting $NAME...&quot;        start-stop-daemon -S -p $PIDFILE -m -b -o -q -x $DAEMON -- clientid 隧道id || return 2        echo -e &quot;\033[1;32mStart Success\033[0m&quot;    fi    ;;  stop)        echo &quot;Stoping $NAME...&quot;        start-stop-daemon -K -p $PIDFILE -s TERM -o -q || return 2        rm -rf $PIDFILE        echo -e &quot;\033[1;32mStop Success\033[0m&quot;    ;;  restart)    $0 stop &amp;&amp; sleep 2 &amp;&amp; $0 start    ;;  *)    echo &quot;Usage: $0 &#123;start|stop|restart&#125;&quot;    exit 1    ;;esacexit 0</code></pre><p><span class="label label-primary">⚠️注意：</span></p><p><span class="label label-primary">把代码里面的【隧道id】替换成自己的隧道id</span></p><h4 id="3、测试可执行代码"><a href="#3、测试可执行代码" class="headerlink" title="3、测试可执行代码"></a>3、测试可执行代码</h4><pre><code class="hljs shell">sudo chmod 755 /etc/init.d/sunnysudo /etc/init.d/sunny startsudo /etc/init.d/sunny start    #启动sudo /etc/init.d/sunny stop     #停止sudo /etc/init.d/sunny restart  #重启</code></pre><h4 id="4、设置开机启动"><a href="#4、设置开机启动" class="headerlink" title="4、设置开机启动"></a>4、设置开机启动</h4><pre><code class="hljs shell">cd /etc/init.dsudo update-rc.d sunny defaults 90    #加入开机启动sudo update-rc.d -f sunny remove  #取消开机启动</code></pre><h4 id="5、隧道启动官方文档说明"><a href="#5、隧道启动官方文档说明" class="headerlink" title="5、隧道启动官方文档说明"></a>5、隧道启动官方文档说明</h4><h6 id="启动隧道"><a href="#启动隧道" class="headerlink" title="启动隧道"></a>启动隧道</h6><p><span class="label label-primary"><br>  Mac、Linux、树莓派的使用方式是一样的。Windows才会不一样。但是它们的启动方式都是通过隧道id启动，隧道id可以在隧道管理的列表里面获得。这里以映射http服务为例。</span></p><p><span class="label label-primary">注意 下方代码仅供参考，sunny执行文件位置还得对应自己安装位置</span></p><p><span class="label label-primary">Mac、Linux、树莓派</span></p><pre><code class="hljs shell">./sunny clientid 隧道id</code></pre><p><span class="label label-primary">启动多个隧道</span></p><pre><code class="hljs shell">./sunny clientid 隧道id,隧道id</code></pre><p><span class="label label-primary">要想后台运行可以使用 setsid 命令</span></p><pre><code class="hljs shell">setsid ./sunny clientid 隧道id &amp;</code></pre><h4 id="五、完成"><a href="#五、完成" class="headerlink" title="五、完成"></a>五、完成</h4><p><span class="label label-primary">启动Ngrok 隧道，可以看到服务器已经上线了。</span></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122225032.png" alt=""></p><h4 id="六、树莓派内网穿透"><a href="#六、树莓派内网穿透" class="headerlink" title="六、树莓派内网穿透"></a>六、树莓派内网穿透</h4><p><span class="label label-primary">再打开赠送的域名<a href="http://bxf.free.idcfengye.com/">http://bxf.free.idcfengye.com/</a> ，就可以看到运行在树莓派上的博客网站啦，树莓派内网穿透成功！</span></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201123204628.png" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.lxx1.com/3709">科技爱好者博客-树莓派使用Ngrok进行内网穿透，在公网上搭建个人博客</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>基地2.0</tag>
      
      <tag>内网穿透</tag>
      
      <tag>公网</tag>
      
      <tag>个人博客</tag>
      
      <tag>suny-ngrok</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[08:安装x11vnc并设置开机自动启动]</title>
    <link href="/2020/07/15/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B08%E5%AE%89%E8%A3%85x11vnc%E5%B9%B6%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8%5D/"/>
    <url>/2020/07/15/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B08%E5%AE%89%E8%A3%85x11vnc%E5%B9%B6%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8%5D/</url>
    
    <content type="html"><![CDATA[<p class="note note-primary">  最近基地新更新了'raspberry-uos-happy版',本着好奇就开始了。但是这个版本没有预设的9090和vnc等配置，所以手动装一个x11vnc实现远程操作。</p><h4 id="1-安装x11vnc"><a href="#1-安装x11vnc" class="headerlink" title="1.安装x11vnc"></a>1.安装x11vnc</h4><p>打开终端，使用如下命令安装x11vnc</p><pre><code class="hljs shell">sudo apt-get install x11vnc</code></pre><h4 id="2-设置密码"><a href="#2-设置密码" class="headerlink" title="2.设置密码"></a>2.设置密码</h4><p><span class="label label-primary"><br>  默认保存在 /home/“user”/.vnc/passwd</span></p><pre><code class="hljs shell">sudo x11vnc -storepasswd</code></pre><h4 id="3-设置密码保存位置"><a href="#3-设置密码保存位置" class="headerlink" title="3.设置密码保存位置"></a>3.设置密码保存位置</h4><pre><code class="hljs shell">sudo x11vnc -storepasswd in /etc/x11vnc.pass</code></pre><h4 id="4-拷贝密码文件"><a href="#4-拷贝密码文件" class="headerlink" title="4.拷贝密码文件"></a>4.拷贝密码文件</h4><p><span class="label label-primary"><br>  将用户目录下的passwd文件内容copy到 /etc/x11vnc.pass下</span></p><pre><code class="hljs shell">sudo cp /home/&quot;user&quot;/.vnc/passwd /etc/x11vnc.pass</code></pre><h4 id="5-手动连接"><a href="#5-手动连接" class="headerlink" title="5.手动连接"></a>5.手动连接</h4><p><span class="label label-primary"><br>  需每次开机手动启动连接</span></p><pre><code class="hljs shell">sudo /usr/bin/x11vnc -display :0 -auth /var/run/lightdm/root/:0 -forever -bg -o /var/log/x11vnc.log -rfbauth /etc/x11vnc.pass -rfbport 5900</code></pre><h4 id="6-关闭x11vnc"><a href="#6-关闭x11vnc" class="headerlink" title="6.关闭x11vnc"></a>6.关闭x11vnc</h4><pre><code class="hljs shell">pi@raspbian:~$ ps -ef|grep -i vncroot     18008     1  0 11:27 ?        00:00:11 /usr/bin/x11vnc -display :0 -auth /var/run/lightdm/root/:0 -forever -bg -o /var/log/x11vnc.log -rfbauth /etc/x11vnc.pass -rfbport 5900pi       27883  1482  0 11:49 pts/0    00:00:00 grep -i vncpi@raspbian:~$ sudo kill -9 18008pi@raspbian:~$ ps -ef|grep -i vncpi       28431  1482  0 11:51 pts/0    00:00:00 grep -i vnc</code></pre><h4 id="7-设置开机启动"><a href="#7-设置开机启动" class="headerlink" title="7.设置开机启动"></a>7.设置开机启动</h4><h5 id="配置x11vnc为跟随系统自动启动"><a href="#配置x11vnc为跟随系统自动启动" class="headerlink" title="配置x11vnc为跟随系统自动启动"></a>配置x11vnc为跟随系统自动启动</h5><p><span class="label label-primary">需要新建一个文件/etc/init/x11vnc.conf</span></p><pre><code class="hljs shell">sudo touch /etc/init/x11vnc.conf</code></pre><p><span class="label label-primary"><br>对文件修改需要权限才能修改</span></p><pre><code class="hljs shell">sudo chmod a+w /etc/init/x11vnc.conf</code></pre><p><span class="label label-primary"><br>在x11vnc.conf文件里加入：</span></p><pre><code class="hljs shell">start on login-session-startscriptx11vnc -display :0 -auth /var/run/lightdm/root/:0 -forever -bg -o /var/log/x11vnc.log -rfbauth /etc/x11vnc.pass -rfbport 5900end script</code></pre><p><span class="label label-primary"><br>保存</span></p><p><span class="label label-primary"><br>  到此 开机自动启动就设置好了</span></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://blog.csdn.net/han609768249/article/details/78759590">ubuntu安装vnc server-x11vnc并设置开机自动启动</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://blog.csdn.net/techsupporter/article/details/52887199">Linux上VNC 启动和关闭 已经常见问题</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>基地2.0</tag>
      
      <tag>系统</tag>
      
      <tag>uos</tag>
      
      <tag>x11vnc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[07:开机后将 IP 地址信息自动推送到微信]</title>
    <link href="/2020/07/14/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B07%E5%BC%80%E6%9C%BA%E5%90%8E%E5%B0%86%20IP%20%E5%9C%B0%E5%9D%80%E4%BF%A1%E6%81%AF%E8%87%AA%E5%8A%A8%E6%8E%A8%E9%80%81%E5%88%B0%E5%BE%AE%E4%BF%A1%5D/"/>
    <url>/2020/07/14/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B07%E5%BC%80%E6%9C%BA%E5%90%8E%E5%B0%86%20IP%20%E5%9C%B0%E5%9D%80%E4%BF%A1%E6%81%AF%E8%87%AA%E5%8A%A8%E6%8E%A8%E9%80%81%E5%88%B0%E5%BE%AE%E4%BF%A1%5D/</url>
    
    <content type="html"><![CDATA[<p class="note note-primary">树莓派经常会用到查看本机的IP，知道了 IP 地址才能进行 ssh 远程连接。以前用过使用Python 获取树莓派地址+Email 发送到自己的邮箱，方法是可行的。但是这里使用了更加简便的方法，使用 Python 加上 Server酱服务， Server酱 服务实现了通过请求 URL + 推送信息，的方式来把消息推送到微信。省去了去配置邮箱参数的麻烦，而且通过微信可以更加快捷的查看到推送到微信的IP信息。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre><code class="hljs shell">import timeimport socketimport requestsdef getLocalIP():    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)    s.connect((&#x27;1.1.1.1&#x27;, 80))    ipaddr = s.getsockname()[0]    s.close()    return ipaddrdef post(ip):    url = &quot;https://sc.ftqq.com/your~sckey.send&quot;    data = &quot;text=%s&quot; % ip    results = requests.get(url, data)    print(results)if __name__ == &#x27;__main__&#x27;:    time.sleep(20)    while True:        ip = getLocalIP()        if ip == False:            post(&#x27;finding ip ~&#x27;)        else:            print(ip)            post(ip)            time.sleep(5)        break</code></pre><h2 id="配置开机自启动"><a href="#配置开机自启动" class="headerlink" title="配置开机自启动"></a>配置开机自启动</h2><pre><code class="hljs shell">pi@raspbian:/$ cat /boot/rc-local<span class="hljs-meta">#</span><span class="bash">!/bin/bash</span><span class="hljs-meta">#</span><span class="bash"> Print the IP address</span>_IP=$(hostname -I) || trueif [ &quot;$_IP&quot; ]; then  printf &quot;IP address is %s\n&quot; &quot;$_IP&quot;fiecho &quot;rc-local bash echo test.&quot;sleep 1mpython /home/pi/ip_send.pyexit 0</code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.cnblogs.com/kekeoutlook/p/12723833.html">树莓派python获取自身IP</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://www.z10.xin/archives/771">树莓派开机后把 IP 地址信息，自动推送到微信的方法 | 中心线</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="http://sc.ftqq.com/3.version">Server酱</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>微信</tag>
      
      <tag>server酱</tag>
      
      <tag>ip发送</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[06:USB摄像头和motion实现监控]</title>
    <link href="/2020/07/13/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B06USB%E6%91%84%E5%83%8F%E5%A4%B4%E5%92%8Cmotion%E5%AE%9E%E7%8E%B0%E7%9B%91%E6%8E%A7%5D/"/>
    <url>/2020/07/13/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B06USB%E6%91%84%E5%83%8F%E5%A4%B4%E5%92%8Cmotion%E5%AE%9E%E7%8E%B0%E7%9B%91%E6%8E%A7%5D/</url>
    
    <content type="html"><![CDATA[<p><span class="label label-primary"><br>  这篇文章主要为大家详细介绍了树莓派使用USB摄像头和motion实现监控，具有一定的参考价值，感兴趣的小伙伴们可以参考一下。</span></p><p>本文实例为大家分享了树莓派使用USB摄像头和motion实现监控的具体代码，供大家参考，具体内容如下</p><h4 id="一、工具"><a href="#一、工具" class="headerlink" title="一、工具"></a>一、工具</h4><p>1、树莓派<br>2、USB摄像头</p><h4 id="二、操作步骤"><a href="#二、操作步骤" class="headerlink" title="二、操作步骤"></a>二、操作步骤</h4><h5 id="0、连接并测试USB摄像头"><a href="#0、连接并测试USB摄像头" class="headerlink" title="0、连接并测试USB摄像头"></a>0、连接并测试USB摄像头</h5><p>树莓派接USB摄像头十分简单，毕竟树莓派是Linux系统的卡片电脑，将买来的USB摄像头直接连在树莓派的USB口上，然后我们看看摄像头是否被识别，有两种方法：</p><pre><code class="hljs shell">1. 使用lsusb命令pi@raspbian:~$ lsusbBus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hubBus 001 Device 003: ID 1871:0101 Aveo Technology Corp. UVC camera (Bresser microscope)Bus 001 Device 002: ID 2109:3431 VIA Labs, Inc. HubBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub</code></pre><p>SSH终端会显示树莓派当前接入的USB设备列表，我们可以先不插摄像头，lsusb，然后插上摄像头lsusb，就可以看到USB摄像头对应的是哪个设备了。</p><pre><code class="hljs shell">2. 查看设备文件也可以查看设备文件，输入命令：pi@raspbian:~$ ls /dev/video*/dev/video0  /dev/video1  /dev/video10  /dev/video11  /dev/video12  /dev/video13  /dev/video14  /dev/video15  /dev/video16</code></pre><pre><code class="hljs shell">3、本人实测摄像画面。安装mplayer，终端运行：sudo apt-get install mplayersudo mplayer tv://</code></pre><p><span class="label label-primary">注意事项：须在安装vnc桌面情况下查看⚠</span></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122214638.png" alt=""></p><h5 id="1、安装motion"><a href="#1、安装motion" class="headerlink" title="1、安装motion"></a>1、安装motion</h5><pre><code class="hljs shell">sudo apt-get install motion</code></pre><h5 id="2、配置motion"><a href="#2、配置motion" class="headerlink" title="2、配置motion"></a>2、配置motion</h5><p>(1)让motion可以一直在后台运行</p><pre><code class="hljs shell">sudo nano /etc/default/motion</code></pre><p>将里面的no修改成yes，让motion可以一直在后台运行：start_motion_daemon=yes</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122214717.jpg" alt=""></p><p>(2)修改其他配置</p><pre><code class="hljs shell">一些常见参数：daemon on                        #开启守护进程（选配）target_dir /home/pi/motion-images    #图片保存的路径<span class="hljs-meta">#</span><span class="bash">videodevice /dev/video0            <span class="hljs-comment">#摄像头设备（默认）可修改            </span></span>stream_localhost off                 #允许通过网页查看摄像头stream_auth_method 2               #开启密码认证stream_authentication 用户名:密码    #网页查看摄像头的用户名和密码</code></pre><p>具体修改如下：</p><pre><code class="hljs shell">sudo nano /etc/motion/motion.conf</code></pre><p>修改配置文件，这个文件比较长，请确保一下参数的配置。在nano编辑器下，可以使用^w快速查找到如下配置内容。也可以使用^v向下翻页。</p><h5 id="开启终端启动和后台模式"><a href="#开启终端启动和后台模式" class="headerlink" title="开启终端启动和后台模式"></a>开启终端启动和后台模式</h5><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122214900.jpg" alt=""></p><h5 id="网页端口"><a href="#网页端口" class="headerlink" title="网页端口"></a>网页端口</h5><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122214917.jpg" alt=""></p><h5 id="监控宽度高度"><a href="#监控宽度高度" class="headerlink" title="监控宽度高度"></a>监控宽度高度</h5><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122214933.jpg" alt=""></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122214948.jpg" alt=""></p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122215002.jpg" alt=""></p><h5 id="3、启动motion"><a href="#3、启动motion" class="headerlink" title="3、启动motion"></a>3、启动motion</h5><pre><code class="hljs shell">sudo motion</code></pre><h5 id="4、查看视频数据"><a href="#4、查看视频数据" class="headerlink" title="4、查看视频数据"></a>4、查看视频数据</h5><p>在局域网内的设备，不管是手机还是电脑，均可打开浏览器访问树莓派IP:8081</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122215035.png" alt=""></p><h5 id="5、退出motion"><a href="#5、退出motion" class="headerlink" title="5、退出motion"></a>5、退出motion</h5><pre><code class="hljs shell">killall -TERM motion</code></pre><p>或者</p><pre><code class="hljs shell">service motion stop</code></pre><h5 id="6、-设置为开机运行（选配）"><a href="#6、-设置为开机运行（选配）" class="headerlink" title="6、 设置为开机运行（选配）"></a>6、 设置为开机运行（选配）</h5><pre><code class="hljs shell">sudo vim /etc/rc.local</code></pre><p>在exit 0前添加 motion , 保存，就会开机自动运行了。</p><h4 id="附件一-motion-conf"><a href="#附件一-motion-conf" class="headerlink" title="附件一 motion.conf"></a>附件一 motion.conf</h4><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> Rename this distribution example file to motion.conf</span><span class="hljs-meta">#</span><span class="hljs-meta">#</span><span class="bash"> This config file was generated by motion 4.1.1</span><span class="hljs-meta">#</span><span class="bash"> Documentation:  /usr/share/doc/motion/motion_guide.html</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Daemon</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Start <span class="hljs-keyword">in</span> daemon (background) mode and release terminal (default: off)</span>daemon on<span class="hljs-meta">#</span><span class="bash"> File to store the process ID, also called pid file. (default: not defined)</span>process_id_file /var/run/motion/motion.pid<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Basic Setup Mode</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Start <span class="hljs-keyword">in</span> Setup-Mode, daemon disabled. (default: off)</span>setup_mode off<span class="hljs-meta">#</span><span class="bash"> Use a file to save logs messages, <span class="hljs-keyword">if</span> not defined stderr and syslog is used. (default: not defined)</span>logfile /var/log/motion/motion.log<span class="hljs-meta">#</span><span class="bash"> Level of <span class="hljs-built_in">log</span> messages [1..9] (EMG, ALR, CRT, ERR, WRN, NTC, INF, DBG, ALL). (default: 6 / NTC)</span>log_level 6<span class="hljs-meta">#</span><span class="bash"> Filter to <span class="hljs-built_in">log</span> messages by <span class="hljs-built_in">type</span> (COR, STR, ENC, NET, DBL, EVT, TRK, VID, ALL). (default: ALL)</span>log_type all<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">##########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Capture device options</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Videodevice to be used <span class="hljs-keyword">for</span> capturing  (default /dev/video0)</span><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-keyword">for</span> FreeBSD default is /dev/bktr0</span>videodevice /dev/video0<span class="hljs-meta">#</span><span class="bash"> v4l2_palette allows one to choose preferable palette to be use by motion</span><span class="hljs-meta">#</span><span class="bash"> See motion_guide.html <span class="hljs-keyword">for</span> the valid options and values.  (default: 17)</span>v4l2_palette 17<span class="hljs-meta">#</span><span class="bash"> Tuner device to be used <span class="hljs-keyword">for</span> capturing using tuner as <span class="hljs-built_in">source</span> (default /dev/tuner0)</span><span class="hljs-meta">#</span><span class="bash"> This is ONLY used <span class="hljs-keyword">for</span> FreeBSD. Leave it commented out <span class="hljs-keyword">for</span> Linux</span>; tunerdevice /dev/tuner0<span class="hljs-meta">#</span><span class="bash"> The video input to be used (default: -1)</span><span class="hljs-meta">#</span><span class="bash"> Should normally be <span class="hljs-built_in">set</span> to 0 or 1 <span class="hljs-keyword">for</span> video/TV cards, and -1 <span class="hljs-keyword">for</span> USB cameras</span><span class="hljs-meta">#</span><span class="bash"> Set to 0 <span class="hljs-keyword">for</span> uvideo(4) on OpenBSD</span>input -1<span class="hljs-meta">#</span><span class="bash"> The video norm to use (only <span class="hljs-keyword">for</span> video capture and TV tuner cards)</span><span class="hljs-meta">#</span><span class="bash"> Values: 0 (PAL), 1 (NTSC), 2 (SECAM), 3 (PAL NC no colour). Default: 0 (PAL)</span>norm 0<span class="hljs-meta">#</span><span class="bash"> The frequency to <span class="hljs-built_in">set</span> the tuner to (kHz) (only <span class="hljs-keyword">for</span> TV tuner cards) (default: 0)</span>frequency 0<span class="hljs-meta">#</span><span class="bash"> Override the power line frequency <span class="hljs-keyword">for</span> the webcam. (normally not necessary)</span><span class="hljs-meta">#</span><span class="bash"> Values:</span><span class="hljs-meta">#</span><span class="bash"> -1 : Do not modify device setting</span><span class="hljs-meta">#</span><span class="bash"> 0  : Power line frequency Disabled</span><span class="hljs-meta">#</span><span class="bash"> 1  : 50hz</span><span class="hljs-meta">#</span><span class="bash"> 2  : 60hz</span><span class="hljs-meta">#</span><span class="bash"> 3  : Auto</span>power_line_frequency -1<span class="hljs-meta">#</span><span class="bash"> Rotate image this number of degrees. The rotation affects all saved images as</span><span class="hljs-meta">#</span><span class="bash"> well as movies. Valid values: 0 (default = no rotation), 90, 180 and 270.</span>rotate 0<span class="hljs-meta">#</span><span class="bash"> Flip image over a given axis (vertical or horizontal), vertical means from left to right</span><span class="hljs-meta">#</span><span class="bash"> horizontal means top to bottom. Valid values: none, v and h.</span>flip_axis none<span class="hljs-meta">#</span><span class="bash"> Image width (pixels). Valid range: Camera dependent, default: 320</span>width 800<span class="hljs-meta">#</span><span class="bash"> Image height (pixels). Valid range: Camera dependent, default: 240</span>height 600<span class="hljs-meta">#</span><span class="bash"> Maximum number of frames to be captured per second.</span><span class="hljs-meta">#</span><span class="bash"> Valid range: 2-100. Default: 100 (almost no <span class="hljs-built_in">limit</span>).</span>framerate 2<span class="hljs-meta">#</span><span class="bash"> Minimum time <span class="hljs-keyword">in</span> seconds between capturing picture frames from the camera.</span><span class="hljs-meta">#</span><span class="bash"> Default: 0 = disabled - the capture rate is given by the camera framerate.</span><span class="hljs-meta">#</span><span class="bash"> This option is used when you want to capture images at a rate lower than 2 per second.</span>minimum_frame_time 0<span class="hljs-meta">#</span><span class="bash"> Full Network Camera URL.  Valid Services: http:// ftp:// mjpg:// rtsp:// mjpeg:// file:// rtmp://</span>; netcam_url value<span class="hljs-meta">#</span><span class="bash"> Username and password <span class="hljs-keyword">for</span> network camera <span class="hljs-keyword">if</span> required. Syntax is user:password</span>; netcam_userpass value<span class="hljs-meta">#</span><span class="bash"> The setting <span class="hljs-keyword">for</span> keep-alive of network socket, should improve performance on compatible net cameras.</span><span class="hljs-meta">#</span><span class="bash"> off:   The historical implementation using HTTP/1.0, closing the socket after each http request.</span><span class="hljs-meta">#</span><span class="bash"> force: Use HTTP/1.0 requests with keep alive header to reuse the same connection.</span><span class="hljs-meta">#</span><span class="bash"> on:    Use HTTP/1.1 requests that support keep alive as default.</span><span class="hljs-meta">#</span><span class="bash"> Default: off</span>netcam_keepalive off<span class="hljs-meta">#</span><span class="bash"> URL to use <span class="hljs-keyword">for</span> a netcam proxy server, <span class="hljs-keyword">if</span> required, e.g. <span class="hljs-string">&quot;http://myproxy&quot;</span>.</span><span class="hljs-meta">#</span><span class="bash"> If a port number other than 80 is needed, use <span class="hljs-string">&quot;http://myproxy:1234&quot;</span>.</span><span class="hljs-meta">#</span><span class="bash"> Default: not defined</span>; netcam_proxy value<span class="hljs-meta">#</span><span class="bash"> Set less strict jpeg checks <span class="hljs-keyword">for</span> network cameras with a poor/buggy firmware.</span><span class="hljs-meta">#</span><span class="bash"> Default: off</span>netcam_tolerant_check off<span class="hljs-meta">#</span><span class="bash"> RTSP connection uses TCP to communicate to the camera. Can prevent image corruption.</span><span class="hljs-meta">#</span><span class="bash"> Default: on</span>rtsp_uses_tcp on<span class="hljs-meta">#</span><span class="bash"> Name of camera to use <span class="hljs-keyword">if</span> you are using a camera accessed through OpenMax/MMAL</span><span class="hljs-meta">#</span><span class="bash"> Default: Not defined</span>; mmalcam_name vc.ril.camera<span class="hljs-meta">#</span><span class="bash"> Camera control parameters (see raspivid/raspistill tool documentation)</span><span class="hljs-meta">#</span><span class="bash"> Default: Not defined</span>; mmalcam_control_params -hf<span class="hljs-meta">#</span><span class="bash"> Let motion regulate the brightness of a video device (default: off).</span><span class="hljs-meta">#</span><span class="bash"> The auto_brightness feature uses the brightness option as its target value.</span><span class="hljs-meta">#</span><span class="bash"> If brightness is zero auto_brightness will adjust to average brightness value 128.</span><span class="hljs-meta">#</span><span class="bash"> Only recommended <span class="hljs-keyword">for</span> cameras without auto brightness</span>auto_brightness off<span class="hljs-meta">#</span><span class="bash"> Set the initial brightness of a video device.</span><span class="hljs-meta">#</span><span class="bash"> If auto_brightness is enabled, this value defines the average brightness level</span><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">which</span> Motion will try and adjust to.</span><span class="hljs-meta">#</span><span class="bash"> Valid range 0-255, default 0 = disabled</span>brightness 0<span class="hljs-meta">#</span><span class="bash"> Set the contrast of a video device.</span><span class="hljs-meta">#</span><span class="bash"> Valid range 0-255, default 0 = disabled</span>contrast 0<span class="hljs-meta">#</span><span class="bash"> Set the saturation of a video device.</span><span class="hljs-meta">#</span><span class="bash"> Valid range 0-255, default 0 = disabled</span>saturation 0<span class="hljs-meta">#</span><span class="bash"> Set the hue of a video device (NTSC feature).</span><span class="hljs-meta">#</span><span class="bash"> Valid range 0-255, default 0 = disabled</span>hue 0<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Round Robin (multiple inputs on same video device name)</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Number of frames to capture <span class="hljs-keyword">in</span> each roundrobin step (default: 1)</span>roundrobin_frames 1<span class="hljs-meta">#</span><span class="bash"> Number of frames to skip before each roundrobin step (default: 1)</span>roundrobin_skip 1<span class="hljs-meta">#</span><span class="bash"> Try to filter out noise generated by roundrobin (default: off)</span>switchfilter off<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Motion Detection Settings:</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Threshold <span class="hljs-keyword">for</span> number of changed pixels <span class="hljs-keyword">in</span> an image that</span><span class="hljs-meta">#</span><span class="bash"> triggers motion detection (default: 1500)</span>threshold 1500<span class="hljs-meta">#</span><span class="bash"> Automatically tune the threshold down <span class="hljs-keyword">if</span> possible (default: off)</span>threshold_tune off<span class="hljs-meta">#</span><span class="bash"> Noise threshold <span class="hljs-keyword">for</span> the motion detection (default: 32)</span>noise_level 32<span class="hljs-meta">#</span><span class="bash"> Automatically tune the noise threshold (default: on)</span>noise_tune on<span class="hljs-meta">#</span><span class="bash"> Despeckle motion image using (e)rode or (d)ilate or (l)abel (Default: not defined)</span><span class="hljs-meta">#</span><span class="bash"> Recommended value is EedDl. Any combination (and number of) of E, e, d, and D is valid.</span><span class="hljs-meta">#</span><span class="bash"> (l)abeling must only be used once and the <span class="hljs-string">&#x27;l&#x27;</span> must be the last letter.</span><span class="hljs-meta">#</span><span class="bash"> Comment out to <span class="hljs-built_in">disable</span></span>despeckle_filter EedDl<span class="hljs-meta">#</span><span class="bash"> Detect motion <span class="hljs-keyword">in</span> predefined areas (1 - 9). Areas are numbered like that:  1 2 3</span><span class="hljs-meta">#</span><span class="bash"> A script (on_area_detected) is started immediately when motion is         4 5 6</span><span class="hljs-meta">#</span><span class="bash"> detected <span class="hljs-keyword">in</span> one of the given areas, but only once during an event.        7 8 9</span><span class="hljs-meta">#</span><span class="bash"> One or more areas can be specified with this option. Take care: This option</span><span class="hljs-meta">#</span><span class="bash"> does NOT restrict detection to these areas! (Default: not defined)</span>; area_detect value<span class="hljs-meta">#</span><span class="bash"> PGM file to use as a sensitivity mask.</span><span class="hljs-meta">#</span><span class="bash"> Full path name to. (Default: not defined)</span>; mask_file value<span class="hljs-meta">#</span><span class="bash"> PGM file to completely mask out a area of image.</span><span class="hljs-meta">#</span><span class="bash"> Full path name to. (Default: not defined)</span><span class="hljs-meta">#</span><span class="bash"> mask_privacy value</span><span class="hljs-meta">#</span><span class="bash"> Dynamically create a mask file during operation (default: 0)</span><span class="hljs-meta">#</span><span class="bash"> Adjust speed of mask changes from 0 (off) to 10 (fast)</span>smart_mask_speed 0<span class="hljs-meta">#</span><span class="bash"> Ignore sudden massive light intensity changes given as a percentage of the picture</span><span class="hljs-meta">#</span><span class="bash"> area that changed intensity. Valid range: 0 - 100 , default: 0 = disabled</span>lightswitch 0<span class="hljs-meta">#</span><span class="bash"> Picture frames must contain motion at least the specified number of frames</span><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-keyword">in</span> a row before they are detected as <span class="hljs-literal">true</span> motion. At the default of 1, all</span><span class="hljs-meta">#</span><span class="bash"> motion is detected. Valid range: 1 to thousands, recommended 1-5</span>minimum_motion_frames 1<span class="hljs-meta">#</span><span class="bash"> Specifies the number of pre-captured (buffered) pictures from before motion</span><span class="hljs-meta">#</span><span class="bash"> was detected that will be output at motion detection.</span><span class="hljs-meta">#</span><span class="bash"> Recommended range: 0 to 5 (default: 0)</span><span class="hljs-meta">#</span><span class="bash"> Do not use large values! Large values will cause Motion to skip video frames and</span><span class="hljs-meta">#</span><span class="bash"> cause unsmooth movies. To smooth movies use larger values of post_capture instead.</span>pre_capture 0<span class="hljs-meta">#</span><span class="bash"> Number of frames to capture after motion is no longer detected (default: 0)</span>post_capture 0<span class="hljs-meta">#</span><span class="bash"> Event Gap is the seconds of no motion detection that triggers the end of an event.</span><span class="hljs-meta">#</span><span class="bash"> An event is defined as a series of motion images taken within a short timeframe.</span><span class="hljs-meta">#</span><span class="bash"> Recommended value is 60 seconds (Default). The value -1 is allowed and disables</span><span class="hljs-meta">#</span><span class="bash"> events causing all Motion to be written to one single movie file and no pre_capture.</span><span class="hljs-meta">#</span><span class="bash"> If <span class="hljs-built_in">set</span> to 0, motion is running <span class="hljs-keyword">in</span> gapless mode. Movies don<span class="hljs-string">&#x27;t have gaps anymore. An</span></span><span class="hljs-meta">#</span><span class="bash"> event ends right after no more motion is detected and post_capture is over.</span>event_gap 60<span class="hljs-meta">#</span><span class="bash"> Maximum length <span class="hljs-keyword">in</span> seconds of a movie</span><span class="hljs-meta">#</span><span class="bash"> When value is exceeded a new movie file is created. (Default: 0 = infinite)</span>max_movie_time 0<span class="hljs-meta">#</span><span class="bash"> Always save images even <span class="hljs-keyword">if</span> there was no motion (default: off)</span>emulate_motion off<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Image File Output</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Output <span class="hljs-string">&#x27;normal&#x27;</span> pictures when motion is detected (default: off)</span><span class="hljs-meta">#</span><span class="bash"> Valid values: on, off, first, best, center</span><span class="hljs-meta">#</span><span class="bash"> When <span class="hljs-built_in">set</span> to <span class="hljs-string">&#x27;first&#x27;</span>, only the first picture of an event is saved.</span><span class="hljs-meta">#</span><span class="bash"> Picture with most motion of an event is saved when <span class="hljs-built_in">set</span> to <span class="hljs-string">&#x27;best&#x27;</span>.</span><span class="hljs-meta">#</span><span class="bash"> Picture with motion nearest center of picture is saved when <span class="hljs-built_in">set</span> to <span class="hljs-string">&#x27;center&#x27;</span>.</span><span class="hljs-meta">#</span><span class="bash"> Can be used as preview shot <span class="hljs-keyword">for</span> the corresponding movie.</span>output_pictures off<span class="hljs-meta">#</span><span class="bash"> Output pictures with only the pixels moving object (ghost images) (default: off)</span>output_debug_pictures off<span class="hljs-meta">#</span><span class="bash"> The quality (<span class="hljs-keyword">in</span> percent) to be used by the jpeg and webp compression (default: 75)</span>quality 75<span class="hljs-meta">#</span><span class="bash"> Type of output images</span><span class="hljs-meta">#</span><span class="bash"> Valid values: jpeg, ppm or webp (default: jpeg)</span>picture_type jpeg<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Use ffmpeg to encode videos of motion (default: off)</span>ffmpeg_output_movies on<span class="hljs-meta">#</span><span class="bash"> Use ffmpeg to make videos showing the moving pixels (ghost images) (default: off)</span>ffmpeg_output_debug_movies off<span class="hljs-meta">#</span><span class="bash"> Bitrate to be used by the ffmpeg encoder (default: 400000)</span><span class="hljs-meta">#</span><span class="bash"> This option is ignored <span class="hljs-keyword">if</span> ffmpeg_variable_bitrate is not 0 (disabled)</span>ffmpeg_bps 400000<span class="hljs-meta">#</span><span class="bash"> Enables and defines variable bitrate <span class="hljs-keyword">for</span> the ffmpeg encoder.</span><span class="hljs-meta">#</span><span class="bash"> ffmpeg_bps is ignored <span class="hljs-keyword">if</span> variable bitrate is enabled.</span><span class="hljs-meta">#</span><span class="bash"> Valid values: 0 (default) = fixed bitrate defined by ffmpeg_bps,</span><span class="hljs-meta">#</span><span class="bash"> or the range 1 - 100 <span class="hljs-built_in">where</span> 1 means worst quality and 100 is best.</span>ffmpeg_variable_bitrate 0<span class="hljs-meta">#</span><span class="bash"> Container/Codec output videos</span><span class="hljs-meta">#</span><span class="bash"> Valid values: mpeg4, msmpeg4, swf,flv, ffv1, mov, mp4, mkv, hevc</span>ffmpeg_video_codec mkv<span class="hljs-meta">#</span><span class="bash"> When creating videos, should frames be duplicated <span class="hljs-keyword">in</span> order</span><span class="hljs-meta">#</span><span class="bash"> to keep up with the requested frames per second</span><span class="hljs-meta">#</span><span class="bash"> (default: <span class="hljs-literal">true</span>)</span>ffmpeg_duplicate_frames true<span class="hljs-meta">#</span><span class="bash"> Interval <span class="hljs-keyword">in</span> seconds between timelapse captures.  Default: 0 = off</span>timelapse_interval 0<span class="hljs-meta">#</span><span class="bash"> Timelapse file rollover mode. See motion_guide.html <span class="hljs-keyword">for</span> options and uses.</span>timelapse_mode daily<span class="hljs-meta">#</span><span class="bash"> Frame rate <span class="hljs-keyword">for</span> timelapse playback</span>timelapse_fps 30<span class="hljs-meta">#</span><span class="bash"> Container/Codec <span class="hljs-keyword">for</span> timelapse video. Valid values: mpg or mpeg4</span>timelapse_codec mpg<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> External pipe to video encoder</span><span class="hljs-meta">#</span><span class="bash"> Replacement <span class="hljs-keyword">for</span> FFMPEG <span class="hljs-built_in">builtin</span> encoder <span class="hljs-keyword">for</span> ffmpeg_output_movies only.</span><span class="hljs-meta">#</span><span class="bash"> The options movie_filename and timelapse_filename are also used</span><span class="hljs-meta">#</span><span class="bash"> by the ffmpeg feature</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">############################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Bool to <span class="hljs-built_in">enable</span> or <span class="hljs-built_in">disable</span> extpipe (default: off)</span>use_extpipe off<span class="hljs-meta">#</span><span class="bash"> External program (full path and opts) to pipe raw video to</span><span class="hljs-meta">#</span><span class="bash"> Generally, use <span class="hljs-string">&#x27;-&#x27;</span> <span class="hljs-keyword">for</span> STDIN...</span>;extpipe mencoder -demuxer rawvideo -rawvideo w=%w:h=%h:i420 -ovc x264 -x264encopts bframes=4:frameref=1:subq=1:scenecut=-1:nob_adapt:threads=1:keyint=1000:8x8dct:vbv_bufsize=4000:crf=24:partitions=i8x8,i4x4:vbv_maxrate=800:no-chroma-me -vf denoise3d=16:12:48:4,pp=lb -of   avi -o %f.avi - -fps %fps;extpipe x264 - --input-res %wx%h --fps %fps --bitrate 2000 --preset ultrafast --quiet -o %f.mp4;extpipe mencoder -demuxer rawvideo -rawvideo w=%w:h=%h:fps=%fps -ovc x264 -x264encopts preset=ultrafast -of lavf -o %f.mp4 - -fps %fps;extpipe ffmpeg -y -f rawvideo -pix_fmt yuv420p -video_size %wx%h -framerate %fps -i pipe:0 -vcodec libx264 -preset ultrafast -f mp4 %f.mp4<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Snapshots (Traditional Periodic Webcam File Output)</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Make automated snapshot every N seconds (default: 0 = disabled)</span>snapshot_interval 0<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Text Display</span><span class="hljs-meta">#</span><span class="bash"> %Y = year, %m = month, %d = date,</span><span class="hljs-meta">#</span><span class="bash"> %H = hour, %M = minute, %S = second, %T = HH:MM:SS,</span><span class="hljs-meta">#</span><span class="bash"> %v = event, %q = frame number, %t = camera id number,</span><span class="hljs-meta">#</span><span class="bash"> %D = changed pixels, %N = noise level, \n = new line,</span><span class="hljs-meta">#</span><span class="bash"> %i and %J = width and height of motion area,</span><span class="hljs-meta">#</span><span class="bash"> %K and %L = X and Y coordinates of motion center</span><span class="hljs-meta">#</span><span class="bash"> %C = value defined by text_event - <span class="hljs-keyword">do</span> not use with text_event!</span><span class="hljs-meta">#</span><span class="bash"> You can put quotation marks around the text to allow</span><span class="hljs-meta">#</span><span class="bash"> leading spaces</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Locate and draw a box around the moving object.</span><span class="hljs-meta">#</span><span class="bash"> Valid values: on, off, preview (default: off)</span><span class="hljs-meta">#</span><span class="bash"> Set to <span class="hljs-string">&#x27;preview&#x27;</span> will only draw a box <span class="hljs-keyword">in</span> preview_shot pictures.</span>locate_motion_mode off<span class="hljs-meta">#</span><span class="bash"> Set the look and style of the locate box <span class="hljs-keyword">if</span> enabled.</span><span class="hljs-meta">#</span><span class="bash"> Valid values: box, redbox, cross, redcross (default: box)</span><span class="hljs-meta">#</span><span class="bash"> Set to <span class="hljs-string">&#x27;box&#x27;</span> will draw the traditional box.</span><span class="hljs-meta">#</span><span class="bash"> Set to <span class="hljs-string">&#x27;redbox&#x27;</span> will draw a red box.</span><span class="hljs-meta">#</span><span class="bash"> Set to <span class="hljs-string">&#x27;cross&#x27;</span> will draw a little cross to mark center.</span><span class="hljs-meta">#</span><span class="bash"> Set to <span class="hljs-string">&#x27;redcross&#x27;</span> will draw a little red cross to mark center.</span>locate_motion_style box<span class="hljs-meta">#</span><span class="bash"> Draws the timestamp using same options as C <span class="hljs-keyword">function</span> strftime(3)</span><span class="hljs-meta">#</span><span class="bash"> Default: %Y-%m-%d\n%T = date <span class="hljs-keyword">in</span> ISO format and time <span class="hljs-keyword">in</span> 24 hour clock</span><span class="hljs-meta">#</span><span class="bash"> Text is placed <span class="hljs-keyword">in</span> lower right corner</span>text_right %Y-%m-%d\n%T-%q<span class="hljs-meta">#</span><span class="bash"> Draw a user defined text on the images using same options as C <span class="hljs-keyword">function</span> strftime(3)</span><span class="hljs-meta">#</span><span class="bash"> Default: Not defined = no text</span><span class="hljs-meta">#</span><span class="bash"> Text is placed <span class="hljs-keyword">in</span> lower left corner</span>; text_left CAMERA %t<span class="hljs-meta">#</span><span class="bash"> Draw the number of changed pixed on the images (default: off)</span><span class="hljs-meta">#</span><span class="bash"> Will normally be <span class="hljs-built_in">set</span> to off except when you setup and adjust the motion settings</span><span class="hljs-meta">#</span><span class="bash"> Text is placed <span class="hljs-keyword">in</span> upper right corner</span>text_changes off<span class="hljs-meta">#</span><span class="bash"> This option defines the value of the special event conversion specifier %C</span><span class="hljs-meta">#</span><span class="bash"> You can use any conversion specifier <span class="hljs-keyword">in</span> this option except %C. Date and time</span><span class="hljs-meta">#</span><span class="bash"> values are from the timestamp of the first image <span class="hljs-keyword">in</span> the current event.</span><span class="hljs-meta">#</span><span class="bash"> Default: %Y%m%d%H%M%S</span><span class="hljs-meta">#</span><span class="bash"> The idea is that %C can be used filenames and text_left/right <span class="hljs-keyword">for</span> creating</span><span class="hljs-meta">#</span><span class="bash"> a unique identifier <span class="hljs-keyword">for</span> each event.</span>text_event %Y%m%d%H%M%S<span class="hljs-meta">#</span><span class="bash"> Draw characters at twice normal size on images. (default: off)</span>text_double off<span class="hljs-meta">#</span><span class="bash"> Text to include <span class="hljs-keyword">in</span> a JPEG EXIF comment</span><span class="hljs-meta">#</span><span class="bash"> May be any text, including conversion specifiers.</span><span class="hljs-meta">#</span><span class="bash"> The EXIF timestamp is included independent of this text.</span>;exif_text %i%J/%K%L<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Target Directories and filenames For Images And Films</span><span class="hljs-meta">#</span><span class="bash"> For the options snapshot_, picture_, movie_ and timelapse_filename</span><span class="hljs-meta">#</span><span class="bash"> you can use conversion specifiers</span><span class="hljs-meta">#</span><span class="bash"> %Y = year, %m = month, %d = date,</span><span class="hljs-meta">#</span><span class="bash"> %H = hour, %M = minute, %S = second,</span><span class="hljs-meta">#</span><span class="bash"> %v = event, %q = frame number, %t = camera id number,</span><span class="hljs-meta">#</span><span class="bash"> %D = changed pixels, %N = noise level,</span><span class="hljs-meta">#</span><span class="bash"> %i and %J = width and height of motion area,</span><span class="hljs-meta">#</span><span class="bash"> %K and %L = X and Y coordinates of motion center</span><span class="hljs-meta">#</span><span class="bash"> %C = value defined by text_event</span><span class="hljs-meta">#</span><span class="bash"> Quotation marks round string are allowed.</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Target base directory <span class="hljs-keyword">for</span> pictures and films</span><span class="hljs-meta">#</span><span class="bash"> Recommended to use absolute path. (Default: current working directory)</span>target_dir /var/lib/motion<span class="hljs-meta">#</span><span class="bash"> File path <span class="hljs-keyword">for</span> snapshots (jpeg, ppm or webp) relative to target_dir</span><span class="hljs-meta">#</span><span class="bash"> Default: %v-%Y%m%d%H%M%S-snapshot</span><span class="hljs-meta">#</span><span class="bash"> Default value is equivalent to legacy oldlayout option</span><span class="hljs-meta">#</span><span class="bash"> For Motion 3.0 compatible mode choose: %Y/%m/%d/%H/%M/%S-snapshot</span><span class="hljs-meta">#</span><span class="bash"> File extension .jpg, .ppm or .webp is automatically added so <span class="hljs-keyword">do</span> not include this.</span><span class="hljs-meta">#</span><span class="bash"> Note: A symbolic link called lastsnap.jpg created <span class="hljs-keyword">in</span> the target_dir will always</span><span class="hljs-meta">#</span><span class="bash"> point to the latest snapshot, unless snapshot_filename is exactly <span class="hljs-string">&#x27;lastsnap&#x27;</span></span>snapshot_filename %v-%Y%m%d%H%M%S-snapshot<span class="hljs-meta">#</span><span class="bash"> File path <span class="hljs-keyword">for</span> motion triggered images (jpeg, ppm or .webp) relative to target_dir</span><span class="hljs-meta">#</span><span class="bash"> Default: %v-%Y%m%d%H%M%S-%q</span><span class="hljs-meta">#</span><span class="bash"> Default value is equivalent to legacy oldlayout option</span><span class="hljs-meta">#</span><span class="bash"> For Motion 3.0 compatible mode choose: %Y/%m/%d/%H/%M/%S-%q</span><span class="hljs-meta">#</span><span class="bash"> File extension .jpg, .ppm or .webp is automatically added so <span class="hljs-keyword">do</span> not include this</span><span class="hljs-meta">#</span><span class="bash"> Set to <span class="hljs-string">&#x27;preview&#x27;</span> together with best-preview feature enables special naming</span><span class="hljs-meta">#</span><span class="bash"> convention <span class="hljs-keyword">for</span> preview shots. See motion guide <span class="hljs-keyword">for</span> details</span>picture_filename %v-%Y%m%d%H%M%S-%q<span class="hljs-meta">#</span><span class="bash"> File path <span class="hljs-keyword">for</span> motion triggered ffmpeg films (movies) relative to target_dir</span><span class="hljs-meta">#</span><span class="bash"> Default: %v-%Y%m%d%H%M%S</span><span class="hljs-meta">#</span><span class="bash"> File extensions(.mpg .avi) are automatically added so <span class="hljs-keyword">do</span> not include them</span>movie_filename %v-%Y%m%d%H%M%S<span class="hljs-meta">#</span><span class="bash"> File path <span class="hljs-keyword">for</span> timelapse movies relative to target_dir</span><span class="hljs-meta">#</span><span class="bash"> Default: %Y%m%d-timelapse</span><span class="hljs-meta">#</span><span class="bash"> File extensions(.mpg .avi) are automatically added so <span class="hljs-keyword">do</span> not include them</span>timelapse_filename %Y%m%d-timelapse<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Global Network Options</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Enable IPv6 (default: off)</span>ipv6_enabled off<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Live Stream Server</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> The mini-http server listens to this port <span class="hljs-keyword">for</span> requests (default: 0 = disabled)</span>stream_port 8081<span class="hljs-meta">#</span><span class="bash"> 50% scaled down substream (default: 0 = disabled)</span><span class="hljs-meta">#</span><span class="bash"> substream_port 8082</span><span class="hljs-meta">#</span><span class="bash"> Quality of the jpeg (<span class="hljs-keyword">in</span> percent) images produced (default: 50)</span>stream_quality 50<span class="hljs-meta">#</span><span class="bash"> Output frames at 1 fps when no motion is detected and increase to the</span><span class="hljs-meta">#</span><span class="bash"> rate given by stream_maxrate when motion is detected (default: off)</span>stream_motion off<span class="hljs-meta">#</span><span class="bash"> Maximum framerate <span class="hljs-keyword">for</span> stream streams (default: 1)</span>stream_maxrate 1<span class="hljs-meta">#</span><span class="bash"> Restrict stream connections to localhost only (default: on)</span>stream_localhost off<span class="hljs-meta">#</span><span class="bash"> Limits the number of images per connection (default: 0 = unlimited)</span><span class="hljs-meta">#</span><span class="bash"> Number can be defined by multiplying actual stream rate by desired number of seconds</span><span class="hljs-meta">#</span><span class="bash"> Actual stream rate is the smallest of the numbers framerate and stream_maxrate</span>stream_limit 0<span class="hljs-meta">#</span><span class="bash"> Set the authentication method (default: 0)</span><span class="hljs-meta">#</span><span class="bash"> 0 = disabled</span><span class="hljs-meta">#</span><span class="bash"> 1 = Basic authentication</span><span class="hljs-meta">#</span><span class="bash"> 2 = MD5 digest (the safer authentication)</span>stream_auth_method 0<span class="hljs-meta">#</span><span class="bash"> Authentication <span class="hljs-keyword">for</span> the stream. Syntax username:password</span><span class="hljs-meta">#</span><span class="bash"> Default: not defined (Disabled)</span>; stream_authentication username:password<span class="hljs-meta">#</span><span class="bash"> Percentage to scale the stream image <span class="hljs-keyword">for</span> preview</span><span class="hljs-meta">#</span><span class="bash"> This is scaled on the browser side, motion will keep sending full frames</span><span class="hljs-meta">#</span><span class="bash"> Default: 25</span>; stream_preview_scale 25<span class="hljs-meta">#</span><span class="bash"> Have stream preview image start on a new line</span><span class="hljs-meta">#</span><span class="bash"> Default: no</span>; stream_preview_newline no<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> HTTP Based Control</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> TCP/IP port <span class="hljs-keyword">for</span> the http server to listen on (default: 0 = disabled)</span>webcontrol_port 8080<span class="hljs-meta">#</span><span class="bash"> Restrict control connections to localhost only (default: on)</span>webcontrol_localhost off<span class="hljs-meta">#</span><span class="bash"> Output <span class="hljs-keyword">for</span> http server, select off to choose raw text plain (default: on)</span>webcontrol_html_output on<span class="hljs-meta">#</span><span class="bash"> Authentication <span class="hljs-keyword">for</span> the http based control. Syntax username:password</span><span class="hljs-meta">#</span><span class="bash"> Default: not defined (Disabled)</span>; webcontrol_authentication username:password<span class="hljs-meta">#</span><span class="bash"> Parameters to include on webcontrol.  0=none, 1=limited, 2=advanced, 3=restricted</span><span class="hljs-meta">#</span><span class="bash"> Default: 0 (none)</span>webcontrol_parms 0<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Tracking (Pan/Tilt)</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">############################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Type of tracker (0=none (default), 1=stepper, 2=iomojo, 3=pwc, 4=generic, 5=uvcvideo, 6=servo)</span><span class="hljs-meta">#</span><span class="bash"> The generic <span class="hljs-built_in">type</span> enables the definition of motion center and motion size to</span><span class="hljs-meta">#</span><span class="bash"> be used with the conversion specifiers <span class="hljs-keyword">for</span> options like on_motion_detected</span>track_type 0<span class="hljs-meta">#</span><span class="bash"> Enable auto tracking (default: off)</span>track_auto off<span class="hljs-meta">#</span><span class="bash"> Serial port of motor (default: none)</span>;track_port /dev/ttyS0<span class="hljs-meta">#</span><span class="bash"> Motor number <span class="hljs-keyword">for</span> x-axis (default: 0)</span>;track_motorx 0<span class="hljs-meta">#</span><span class="bash"> Set motorx reverse (default: 0)</span>;track_motorx_reverse 0<span class="hljs-meta">#</span><span class="bash"> Motor number <span class="hljs-keyword">for</span> y-axis (default: 0)</span>;track_motory 1<span class="hljs-meta">#</span><span class="bash"> Set motory reverse (default: 0)</span>;track_motory_reverse 0<span class="hljs-meta">#</span><span class="bash"> Maximum value on x-axis (default: 0)</span>;track_maxx 200<span class="hljs-meta">#</span><span class="bash"> Minimum value on x-axis (default: 0)</span>;track_minx 50<span class="hljs-meta">#</span><span class="bash"> Maximum value on y-axis (default: 0)</span>;track_maxy 200<span class="hljs-meta">#</span><span class="bash"> Minimum value on y-axis (default: 0)</span>;track_miny 50<span class="hljs-meta">#</span><span class="bash"> Center value on x-axis (default: 0)</span>;track_homex 128<span class="hljs-meta">#</span><span class="bash"> Center value on y-axis (default: 0)</span>;track_homey 128<span class="hljs-meta">#</span><span class="bash"> ID of an iomojo camera <span class="hljs-keyword">if</span> used (default: 0)</span>track_iomojo_id 0<span class="hljs-meta">#</span><span class="bash"> Angle <span class="hljs-keyword">in</span> degrees the camera moves per step on the X-axis</span><span class="hljs-meta">#</span><span class="bash"> with auto-track (default: 10)</span><span class="hljs-meta">#</span><span class="bash"> Currently only used with pwc <span class="hljs-built_in">type</span> cameras</span>track_step_angle_x 10<span class="hljs-meta">#</span><span class="bash"> Angle <span class="hljs-keyword">in</span> degrees the camera moves per step on the Y-axis</span><span class="hljs-meta">#</span><span class="bash"> with auto-track (default: 10)</span><span class="hljs-meta">#</span><span class="bash"> Currently only used with pwc <span class="hljs-built_in">type</span> cameras</span>track_step_angle_y 10<span class="hljs-meta">#</span><span class="bash"> Delay to <span class="hljs-built_in">wait</span> <span class="hljs-keyword">for</span> after tracking movement as number</span><span class="hljs-meta">#</span><span class="bash"> of picture frames (default: 10)</span>track_move_wait 10<span class="hljs-meta">#</span><span class="bash"> Speed to <span class="hljs-built_in">set</span> the motor to (stepper motor option) (default: 255)</span>track_speed 255<span class="hljs-meta">#</span><span class="bash"> Number of steps to make (stepper motor option) (default: 40)</span>track_stepsize 40<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> External Commands, Warnings and Logging:</span><span class="hljs-meta">#</span><span class="bash"> You can use conversion specifiers <span class="hljs-keyword">for</span> the on_xxxx commands</span><span class="hljs-meta">#</span><span class="bash"> %Y = year, %m = month, %d = date,</span><span class="hljs-meta">#</span><span class="bash"> %H = hour, %M = minute, %S = second,</span><span class="hljs-meta">#</span><span class="bash"> %v = event, %q = frame number, %t = camera id number,</span><span class="hljs-meta">#</span><span class="bash"> %D = changed pixels, %N = noise level,</span><span class="hljs-meta">#</span><span class="bash"> %i and %J = width and height of motion area,</span><span class="hljs-meta">#</span><span class="bash"> %K and %L = X and Y coordinates of motion center</span><span class="hljs-meta">#</span><span class="bash"> %C = value defined by text_event</span><span class="hljs-meta">#</span><span class="bash"> %f = filename with full path</span><span class="hljs-meta">#</span><span class="bash"> %n = number indicating filetype</span><span class="hljs-meta">#</span><span class="bash"> Both %f and %n are only defined <span class="hljs-keyword">for</span> on_picture_save,</span><span class="hljs-meta">#</span><span class="bash"> on_movie_start and on_movie_end</span><span class="hljs-meta">#</span><span class="bash"> Quotation marks round string are allowed.</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Do not sound beeps when detecting motion (default: on)</span><span class="hljs-meta">#</span><span class="bash"> Note: Motion never beeps when running <span class="hljs-keyword">in</span> daemon mode.</span>quiet on<span class="hljs-meta">#</span><span class="bash"> Command to be executed when an event starts. (default: none)</span><span class="hljs-meta">#</span><span class="bash"> An event starts at first motion detected after a period of no motion defined by event_gap</span>; on_event_start value<span class="hljs-meta">#</span><span class="bash"> Command to be executed when an event ends after a period of no motion</span><span class="hljs-meta">#</span><span class="bash"> (default: none). The period of no motion is defined by option event_gap.</span>; on_event_end value<span class="hljs-meta">#</span><span class="bash"> Command to be executed when a picture (.ppm|.jpg) is saved (default: none)</span><span class="hljs-meta">#</span><span class="bash"> To give the filename as an argument to a <span class="hljs-built_in">command</span> append it with %f</span>; on_picture_save value<span class="hljs-meta">#</span><span class="bash"> Command to be executed when a motion frame is detected (default: none)</span>; on_motion_detected value<span class="hljs-meta">#</span><span class="bash"> Command to be executed when motion <span class="hljs-keyword">in</span> a predefined area is detected</span><span class="hljs-meta">#</span><span class="bash"> Check option <span class="hljs-string">&#x27;area_detect&#x27;</span>.   (default: none)</span>; on_area_detected value<span class="hljs-meta">#</span><span class="bash"> Command to be executed when a movie file (.mpg|.avi) is created. (default: none)</span><span class="hljs-meta">#</span><span class="bash"> To give the filename as an argument to a <span class="hljs-built_in">command</span> append it with %f</span>; on_movie_start value<span class="hljs-meta">#</span><span class="bash"> Command to be executed when a movie file (.mpg|.avi) is closed. (default: none)</span><span class="hljs-meta">#</span><span class="bash"> To give the filename as an argument to a <span class="hljs-built_in">command</span> append it with %f</span>; on_movie_end value<span class="hljs-meta">#</span><span class="bash"> Command to be executed when a camera can<span class="hljs-string">&#x27;t be opened or if it is lost</span></span><span class="hljs-meta">#</span><span class="bash"> NOTE: There is situations when motion don<span class="hljs-string">&#x27;t detect a lost camera!</span></span><span class="hljs-meta">#</span><span class="bash"> It depends on the driver, some drivers dosn<span class="hljs-string">&#x27;t detect a lost camera at all</span></span><span class="hljs-meta">#</span><span class="bash"> Some hangs the motion thread. Some even hangs the PC! (default: none)</span>; on_camera_lost value<span class="hljs-meta">#</span><span class="bash"> Command to be executed when a camera that was lost has been found (default: none)</span><span class="hljs-meta">#</span><span class="bash"> NOTE: If motion doesn<span class="hljs-string">&#x27;t properly detect a lost camera, it also won&#x27;</span>t know it found one.</span>; on_camera_found value<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">####################################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Common Options <span class="hljs-keyword">for</span> database features.</span><span class="hljs-meta">#</span><span class="bash"> Options require database options to be active also.</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">####################################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Log to the database when creating motion triggered picture file  (default: on)</span>; sql_log_picture on<span class="hljs-meta">#</span><span class="bash"> Log to the database when creating a snapshot image file (default: on)</span>; sql_log_snapshot on<span class="hljs-meta">#</span><span class="bash"> Log to the database when creating motion triggered movie file (default: off)</span>; sql_log_movie off<span class="hljs-meta">#</span><span class="bash"> Log to the database when creating timelapse movies file (default: off)</span>; sql_log_timelapse off<span class="hljs-meta">#</span><span class="bash"> SQL query string that is sent to the database</span><span class="hljs-meta">#</span><span class="bash"> Use same conversion specifiers has <span class="hljs-keyword">for</span> text features</span><span class="hljs-meta">#</span><span class="bash"> Additional special conversion specifiers are</span><span class="hljs-meta">#</span><span class="bash"> %n = the number representing the file_type</span><span class="hljs-meta">#</span><span class="bash"> %f = filename with full path</span><span class="hljs-meta">#</span><span class="bash"> Default value:</span><span class="hljs-meta">#</span><span class="bash"> Create tables :</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#</span></span><span class="hljs-meta">#</span><span class="bash"> Mysql</span><span class="hljs-meta">#</span><span class="bash"> CREATE TABLE security (camera int, filename char(80) not null, frame int, file_type int, time_stamp timestamp(14), event_time_stamp timestamp(14));</span><span class="hljs-meta">#</span><span class="hljs-meta">#</span><span class="bash"> Postgresql</span><span class="hljs-meta">#</span><span class="bash"> CREATE TABLE security (camera int, filename char(80) not null, frame int, file_type int, time_stamp timestamp without time zone, event_time_stamp timestamp without time zone);</span><span class="hljs-meta">#</span><span class="hljs-meta">#</span><span class="bash"> insert into security(camera, filename, frame, file_type, time_stamp, text_event) values(<span class="hljs-string">&#x27;%t&#x27;</span>, <span class="hljs-string">&#x27;%f&#x27;</span>, <span class="hljs-string">&#x27;%q&#x27;</span>, <span class="hljs-string">&#x27;%n&#x27;</span>, <span class="hljs-string">&#x27;%Y-%m-%d %T&#x27;</span>, <span class="hljs-string">&#x27;%C&#x27;</span>)</span>; sql_query insert into security(camera, filename, frame, file_type, time_stamp, event_time_stamp) values(&#x27;%t&#x27;, &#x27;%f&#x27;, &#x27;%q&#x27;, &#x27;%n&#x27;, &#x27;%Y-%m-%d %T&#x27;, &#x27;%C&#x27;)<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Database Options</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> database <span class="hljs-built_in">type</span> : mysql, postgresql, sqlite3 (default : not defined)</span>; database_type value<span class="hljs-meta">#</span><span class="bash"> database to <span class="hljs-built_in">log</span> to (default: not defined)</span><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-keyword">for</span> sqlite3, the full path and name <span class="hljs-keyword">for</span> the database.</span>; database_dbname value<span class="hljs-meta">#</span><span class="bash"> The host on <span class="hljs-built_in">which</span> the database is located (default: localhost)</span>; database_host value<span class="hljs-meta">#</span><span class="bash"> User account name <span class="hljs-keyword">for</span> database (default: not defined)</span>; database_user value<span class="hljs-meta">#</span><span class="bash"> User password <span class="hljs-keyword">for</span> database (default: not defined)</span>; database_password value<span class="hljs-meta">#</span><span class="bash"> Port on <span class="hljs-built_in">which</span> the database is located</span><span class="hljs-meta">#</span><span class="bash">  mysql 3306 , postgresql 5432 (default: not defined)</span>; database_port value<span class="hljs-meta">#</span><span class="bash"> Database <span class="hljs-built_in">wait</span> time <span class="hljs-keyword">in</span> milliseconds <span class="hljs-keyword">for</span> locked database to</span><span class="hljs-meta">#</span><span class="bash"> be unlocked before returning database locked error (default 0)</span>; database_busy_timeout 0<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Video Loopback Device (vloopback project)</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">###########################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Output images to a video4linux loopback device</span><span class="hljs-meta">#</span><span class="bash"> Specify the device associated with the loopback device</span><span class="hljs-meta">#</span><span class="bash"> For example /dev/video1 (default: not defined)</span>; video_pipe value<span class="hljs-meta">#</span><span class="bash"> Output motion images to a video4linux loopback device</span><span class="hljs-meta">#</span><span class="bash"> Specify the device associated with the loopback device</span><span class="hljs-meta">#</span><span class="bash"> For example /dev/video1 (default: not defined)</span>; motion_video_pipe value<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#############################################################</span></span><span class="hljs-meta">#</span><span class="bash"> camera config files - One <span class="hljs-keyword">for</span> each camera.</span><span class="hljs-meta">#</span><span class="bash"> Except <span class="hljs-keyword">if</span> only one camera - You only need this config file.</span><span class="hljs-meta">#</span><span class="bash"> If you have more than one camera you MUST define one camera</span><span class="hljs-meta">#</span><span class="bash"> config file <span class="hljs-keyword">for</span> each camera <span class="hljs-keyword">in</span> addition to this config file.</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#############################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Remember: If you have more than one camera you must have one</span><span class="hljs-meta">#</span><span class="bash"> camera file <span class="hljs-keyword">for</span> each camera. E.g. 2 cameras requires 3 files:</span><span class="hljs-meta">#</span><span class="bash"> This motion.conf file AND camera1.conf and camera2.conf.</span><span class="hljs-meta">#</span><span class="bash"> Only put the options that are unique to each camera <span class="hljs-keyword">in</span> the</span><span class="hljs-meta">#</span><span class="bash"> camera config files.</span>; camera /etc/motion/camera1.conf; camera /etc/motion/camera2.conf; camera /etc/motion/camera3.conf; camera /etc/motion/camera4.conf<span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#############################################################</span></span><span class="hljs-meta">#</span><span class="bash"> Camera config directory</span><span class="hljs-meta">#</span><span class="bash"> Any files ending <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;.conf&#x27;</span> <span class="hljs-keyword">in</span> this directory will be <span class="hljs-built_in">read</span></span><span class="hljs-meta">#</span><span class="bash"> as a camera config file.</span><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#############################################################</span></span>; camera_dir /etc/motion/conf.d</code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.jb51.net/article/163690.htm">树莓派使用USB摄像头和motion实现监控</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://blog.csdn.net/weixin_30509393/article/details/99396622?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.nonecase&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.nonecase">linux下的开源移动图像监测程序—motion编译与配置</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="http://lavrsen.dk/foswiki/bin/view/Motion/ConfigFileOptions">（看不懂qwqの）Motion官方配置文件</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://blog.csdn.net/u013162035/article/details/78580486">第6章 树莓派摄像头操作</a><a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>基地2.0</tag>
      
      <tag>实时</tag>
      
      <tag>监控</tag>
      
      <tag>网页</tag>
      
      <tag>树莓派</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[05:私有云搭建]</title>
    <link href="/2020/07/12/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B05%E7%A7%81%E6%9C%89%E4%BA%91%E6%90%AD%E5%BB%BA%5D/"/>
    <url>/2020/07/12/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B05%E7%A7%81%E6%9C%89%E4%BA%91%E6%90%AD%E5%BB%BA%5D/</url>
    
    <content type="html"><![CDATA[<p><span class="label label-primary"><br>  之前已经做过关于树莓派的私有云搭建，只不过都是在宝塔直接完成的，在宝塔搭建固然容易，但是宝塔作为虚拟机，储存的东西只是虚拟内存，无法实现本机的访问，现在在本地搭建的Nginx上搭建一下私有云。</span></p><h3 id="一-owncloud"><a href="#一-owncloud" class="headerlink" title="一.owncloud"></a>一.owncloud</h3><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122210506.jpg" alt=""></p><h4 id="1-下载ownCloud"><a href="#1-下载ownCloud" class="headerlink" title="1. 下载ownCloud"></a>1. 下载ownCloud</h4><p>按照下面的指令依次执行</p><pre><code class="hljs shell">sudo wget https://download.owncloud.org/community/owncloud-10.2.0.zipsudo unzip owncloud-10.2.0.zip -d /var/www/html/cd /var/www/html/owncloudsudo mkdir data</code></pre><h4 id="2-修改目录权限"><a href="#2-修改目录权限" class="headerlink" title="2. 修改目录权限"></a>2. 修改目录权限</h4><p><span class="label label-primary"><br>  OwnCloud在安装的过程中需要对一些目录有写的权限,为此，web服务器用户（www-data对于基于Debian的系统）必须要拥有apps、data、config目录的权限。</span></p><pre><code class="hljs shell">依次执行下面的指令sudo chown -R www-data:www-data datasudo chown -R www-data:www-data configsudo chown -R www-data:www-data apps</code></pre><h4 id="3-设置mysql账户密码"><a href="#3-设置mysql账户密码" class="headerlink" title="3. 设置mysql账户密码"></a>3. 设置mysql账户密码</h4><p>输入下面指令</p><pre><code class="hljs shell">sudo mysql -u root -p</code></pre><p>然后随便输密码点击回车就能登录进去</p><p>输入下面指令点击回车</p><pre><code class="hljs shell">update mysql.user set plugin=&#x27;mysql_native_password&#x27;;</code></pre><p>输入下面指令在newpassword处输入你想设置的密码</p><pre><code class="hljs shell">update mysql.user set password=PASSWORD(&quot;newpassword&quot;) where User=&#x27;root&#x27;;</code></pre><p>用下面指令刷新信息</p><pre><code class="hljs shell">flush privileges;</code></pre><p>刷新以后点击ctrl-c退出</p><h4 id="4-配置owncloud"><a href="#4-配置owncloud" class="headerlink" title="4. 配置owncloud"></a>4. 配置owncloud</h4><p>打开浏览器，输入 树莓派IP/owncloud ,进入设置安装界面</p><h4 id="5-问题"><a href="#5-问题" class="headerlink" title="5. 问题"></a>5. 问题</h4><pre><code class="hljs shell">error:This version of ownCloud is not compatible with PHP 7.3You are currently running PHP 7.3.19-1~deb10u1.</code></pre><p>解决方案：（呃，解决不了）<br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122210801.png" alt=""></p><h4 id="二-nextcloud"><a href="#二-nextcloud" class="headerlink" title="二.nextcloud"></a>二.nextcloud</h4><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122210845.jpg" alt=""></p><h4 id="1-下载nextcloud"><a href="#1-下载nextcloud" class="headerlink" title="1. 下载nextcloud"></a>1. 下载nextcloud</h4><p>按照下面的指令依次执行</p><pre><code class="hljs shell">sudo wget https://download.nextcloud.com/server/releases/nextcloud-19.0.0.zipsudo unzip nextcloud-19.0.0.zip -d /var/www/html/cd /var/www/html/nextcloudsudo mkdir data</code></pre><h4 id="2-修改目录权限-1"><a href="#2-修改目录权限-1" class="headerlink" title="2. 修改目录权限"></a>2. 修改目录权限</h4><p><span class="label label-primary"><br>  nextcloud在安装的过程中需要对一些目录有写的权限,为此，web服务器用户（www-data对于基于Debian的系统）必须要拥有apps、data、config目录的权限。</span></p><pre><code class="hljs shell">依次执行下面的指令sudo chown -R www-data:www-data datasudo chown -R www-data:www-data configsudo chown -R www-data:www-data apps</code></pre><h4 id="3-为nextcloud创建数据库"><a href="#3-为nextcloud创建数据库" class="headerlink" title="3. 为nextcloud创建数据库"></a>3. 为nextcloud创建数据库</h4><p>进入phpmyadmin页面</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122211024.png" alt=""></p><h4 id="4-配置nextcloud"><a href="#4-配置nextcloud" class="headerlink" title="4. 配置nextcloud"></a>4. 配置nextcloud</h4><p>打开浏览器，输入 树莓派IP/nextcloud ,进入设置安装界面</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122211108.png" alt=""></p><h4 id="5-问题-1"><a href="#5-问题-1" class="headerlink" title="5. 问题"></a>5. 问题</h4><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122211153.png" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://mp.weixin.qq.com/s/IKMIYHsRsvVzoaBF89byBw">树莓派爱好者基地：树莓派搭建私有云盘教程</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://central.owncloud.org/t/this-version-of-owncloud-is-not-compatible-with-php-7-3/17531">This version of ownCloud is not compatible with PHP 7.3</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://www.orgleaf.com/2891.html?replytocom=2711">解决CentOS中安装Nextcloud出现“内部服务器错误</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>私有云</tag>
      
      <tag>nextcloud</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[04:pi-dashboard实时监控]</title>
    <link href="/2020/07/11/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B04pi-dashboard%E5%AE%9E%E6%97%B6%E7%9B%91%E6%8E%A7%5D/"/>
    <url>/2020/07/11/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B04pi-dashboard%E5%AE%9E%E6%97%B6%E7%9B%91%E6%8E%A7%5D/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><span class="label label-primary"><br>  树莓派作为一台Linux主机，要是有一个可视化界面能实时显示树莓派的状态信息那该有多棒啊。<br>  最近找到一个有趣的项目，我们只需要给树莓派配置好lnmp环境后，就可以装上一个类似于仪表盘的状态监控的工具。<br>  通过炫酷的WebUI的界面显示当前树莓派的各种数据：<br>  CPU的基本信息，状态和使用率树莓派当前IP地址、使用的时间、操作系统内存、缓存、SWAP分区的实时数据TF卡磁盘的占用情况网络接口实时数据</span></p><p>以下是在树莓派上安装pi-dashboard的详细过程：</p><h4 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h4><h5 id="1-安装Nginx"><a href="#1-安装Nginx" class="headerlink" title="1. 安装Nginx"></a>1. 安装Nginx</h5><p>ssh登录树莓派，输入：</p><pre><code class="hljs shell">sudo apt-get updatesudo apt-get install nginx</code></pre><h5 id="2-安装php"><a href="#2-安装php" class="headerlink" title="2. 安装php"></a>2. 安装php</h5><pre><code class="hljs shell">sudo apt-get install php7.3-fpm</code></pre><h5 id="3-配置Nginx"><a href="#3-配置Nginx" class="headerlink" title="3. 配置Nginx"></a>3. 配置Nginx</h5><p>安装好Nginx后，为了让Nginx能够处理PHP网页，需要修改/etc/nginx/sites-available/default文件</p><pre><code class="hljs shell">sudo vim /etc/nginx/sites-available/default</code></pre><p>将default文件修改为以下内容：</p><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> Default server configuration</span><span class="hljs-meta">#</span>server &#123;        listen 80 default_server;        listen [::]:80 default_server;        root /var/www/html;        # Add index.php to the list if you are using PHP        index index.html index.htm index.nginx-debian.html index.php;        server_name _;        location / &#123;                # First attempt to serve request as file, then                # as directory, then fall back to displaying a 404.                try_files $uri $uri/ =404;        &#125;        # pass PHP scripts to FastCGI server        #        location ~ \.php$ &#123;        #       include snippets/fastcgi-php.conf;        #        #       # With php-fpm (or other unix sockets):                fastcgi_pass unix:/run/php/php7.3-fpm.sock;        #       # With php-cgi (or other tcp sockets):        #       fastcgi_pass 127.0.0.1:9000;        # 设置脚本文件请求的路径                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;        # 引入fastcgi的配置文件                include fastcgi_params;        &#125;&#125;</code></pre><h5 id="4-重启Nginx"><a href="#4-重启Nginx" class="headerlink" title="4. 重启Nginx"></a>4. 重启Nginx</h5><pre><code class="hljs shell">sudo nginx -s reload</code></pre><p>这时我们可以查看Nginx与PHP是否配置成功，我们可以在网站根目录下 /var/www/html创建一个index.php文件，内容如下：</p><pre><code class="hljs shell">&lt;?php phpinfo(); ?&gt;</code></pre><p>保存后退出，在局域网下浏览器地址栏输入：<a href="http://你的树莓派ip/index.php，查看PHPinfo信息，如果显示说明PHP与Nginx配置成功。">http://你的树莓派ip/index.php，查看PHPinfo信息，如果显示说明PHP与Nginx配置成功。</a></p><h5 id="5-树莓派安装MariaDB和phpMyAdmin"><a href="#5-树莓派安装MariaDB和phpMyAdmin" class="headerlink" title="5. 树莓派安装MariaDB和phpMyAdmin"></a>5. 树莓派安装MariaDB和phpMyAdmin</h5><pre><code class="hljs shell">sudo apt-get install mariadb-server-10.3 phpmyadmin</code></pre><pre><code class="hljs shell">error:pi@raspbian:~$ sudo apt-get install mariadb-server-10.3 phpmyadminReading package lists... DoneBuilding dependency tree       Reading state information... DoneSome packages could not be installed. This may mean that you haverequested an impossible situation or if you are using the unstabledistribution that some required packages have not yet been createdor been moved out of Incoming.The following information may help to resolve the situation:The following packages have unmet dependencies: phpmyadmin : Depends: php-twig (&gt;= 2.9) but 2.6.2-2 is to be installed              Recommends: php-curl              Recommends: php-gd              Recommends: php-bz2              Recommends: php-zip              Recommends: php-tcpdf but it is not going to be installedE: Unable to correct problems, you have held broken packages.</code></pre><p>解决办法：</p><pre><code class="hljs shell">sudo apt-get install aptitudesudo aptitude install xxxxx第一选项no第二个选项yes</code></pre><p>控制台安装phpMyAdmin过程中会出现配置phpMyAdmin的选项<br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122205629.png" alt=""><br>它让我们自动重新配置网络服务器Apache或者lighttpd，因为我们用的是Nginx所以按 esc键取消选择，安装结束时会出现一个配置选项，点击 yes进行配置，之后要求输入一个密码，注册到MySQL服务器上<br><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122205634.png" alt=""></p><h5 id="6-建立软链接："><a href="#6-建立软链接：" class="headerlink" title="6. 建立软链接："></a>6. 建立软链接：</h5><pre><code class="hljs shell">sudo ln -s /usr/share/phpmyadmin /var/www/html</code></pre><h5 id="7-pi-dashboard项目部署"><a href="#7-pi-dashboard项目部署" class="headerlink" title="7.pi-dashboard项目部署"></a>7.pi-dashboard项目部署</h5><p>我们先在本地下载pi-dashboard项目，下载地址：<a href="https://github.com/spoonysonny/pi">https://github.com/spoonysonny/pi</a><br>解压后用xftp软件传送到树莓派上，然后运行命令</p><pre><code class="hljs shell">sudo mv pi-dashboard /var/www/html</code></pre><h6 id="8-重启后浏览器输入http-你的树莓派ip-pi-dashboard"><a href="#8-重启后浏览器输入http-你的树莓派ip-pi-dashboard" class="headerlink" title="8.重启后浏览器输入http://你的树莓派ip/pi-dashboard/"></a>8.重启后浏览器输入<a href="http://你的树莓派ip/pi-dashboard/">http://你的树莓派ip/pi-dashboard/</a></h6><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201122205117.png" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://gitee.com/openfans-community/Debian-Pi-Aarch64/">Debian-Pi-Aarch64 ★ 全新树莓派64位系统2.0正式版 - 说明文档</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://raspberrypi.club/">树莓派俱乐部</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://shumeipai.nxez.com/">树莓派实验</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span><a href="https://mp.weixin.qq.com/s/h--AL0TiA-2J551Vn0A3Ow">小雨编程</a><a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span><a href="https://blog.csdn.net/qiqzhang/article/details/87862556">ubuntu安装软件时出现The following packages have unmet dependencies，有依赖关系</a><a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>基地2.0</tag>
      
      <tag>系统</tag>
      
      <tag>mariadb</tag>
      
      <tag>myadmin</tag>
      
      <tag>mysql mysql</tag>
      
      <tag>nginx nginx</tag>
      
      <tag>php</tag>
      
      <tag>pi-dashboard</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[03:安装宝塔]</title>
    <link href="/2020/07/10/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B03%E5%AE%89%E8%A3%85%E5%AE%9D%E5%A1%94%5D/"/>
    <url>/2020/07/10/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B03%E5%AE%89%E8%A3%85%E5%AE%9D%E5%A1%94%5D/</url>
    
    <content type="html"><![CDATA[<h4 id="1-下载宝塔虚拟机镜像，通过xftp上传到树莓派"><a href="#1-下载宝塔虚拟机镜像，通过xftp上传到树莓派" class="headerlink" title="1.下载宝塔虚拟机镜像，通过xftp上传到树莓派"></a>1.下载宝塔虚拟机镜像，通过xftp上传到树莓派</h4><h4 id="2-下载解压支持"><a href="#2-下载解压支持" class="headerlink" title="2.下载解压支持"></a>2.下载解压支持</h4><pre><code class="hljs shell">sudo apt updatesudo apt install tar gzip zip unzip bzip2 xz-utils -y</code></pre><h4 id="3-解压压缩包"><a href="#3-解压压缩包" class="headerlink" title="3. 解压压缩包"></a>3. 解压压缩包</h4><pre><code class="hljs shell">tar xvf bt-panel_vm_5.9.1_pro_v2.tar</code></pre><h4 id="4-进入文件目录"><a href="#4-进入文件目录" class="headerlink" title="4. 进入文件目录"></a>4. 进入文件目录</h4><pre><code class="hljs shell">cd ./bt-panel_vm_5.9.1_pro_v2</code></pre><h4 id="5-安装宝塔虚拟机"><a href="#5-安装宝塔虚拟机" class="headerlink" title="5.安装宝塔虚拟机"></a>5.安装宝塔虚拟机</h4><pre><code class="hljs shell">sudo ./install</code></pre><h4 id="6-启动宝塔虚拟机"><a href="#6-启动宝塔虚拟机" class="headerlink" title="6. 启动宝塔虚拟机"></a>6. 启动宝塔虚拟机</h4><pre><code class="hljs shell">sudo ./bt_run</code></pre><h4 id="7-关闭宝塔虚拟机："><a href="#7-关闭宝塔虚拟机：" class="headerlink" title="7.关闭宝塔虚拟机："></a>7.关闭宝塔虚拟机：</h4><p><span class="label label-primary"><br>为了保证虚拟机的数据同步安全，请按照以下步骤操作：<br>请ssh登录到虚拟机再执行命令 “ init 0 “ 关闭虚拟机<br>关闭后，需要在宝塔虚拟机目录下执行 “ ./bt_prog “ 命令，检查虚拟机是否已关闭<br>如果没有任何输出结果，代表虚拟机已正常关闭<br>如果无法正常关闭虚拟机，请在宝塔虚拟机目录下执行 “ ./bt_prog kill “ 命令<br>同样记得再次执行 “ ./bt_prog “ 命令，检查虚拟机是否已关闭<br>自动启动</span></p><h4 id="8-开机自动启动"><a href="#8-开机自动启动" class="headerlink" title="8.开机自动启动"></a>8.开机自动启动</h4><pre><code class="hljs shell">启用开机自动启动./install int</code></pre><pre><code class="hljs shell">取消开机自动启动./install uint</code></pre><h4 id="9-默认参数值"><a href="#9-默认参数值" class="headerlink" title="9.默认参数值:"></a>9.默认参数值:</h4><pre><code class="hljs shell">默认管理端口  28888默认管理地址  http://你树莓派的IP地址:28888/默认Web管理用户及密码    openfans/openfans宝塔虚拟机ssh端口  2222宝塔虚拟机root默认密码   raspberry</code></pre><h4 id="10-如何ssh连接到宝塔虚拟机"><a href="#10-如何ssh连接到宝塔虚拟机" class="headerlink" title="10.如何ssh连接到宝塔虚拟机?"></a>10.如何ssh连接到宝塔虚拟机?</h4><pre><code class="hljs shell">本机连接： ssh -p 2222 root@localhost外部连接： ssh -p 2222 root@你树莓派的IP地址</code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://gitee.com/openfans-community/Debian-Pi-Aarch64/">Debian-Pi-Aarch64 ★ 全新树莓派64位系统2.0正式版 - 说明文档</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://raspberrypi.club/">树莓派俱乐部</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://shumeipai.nxez.com/">树莓派实验</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>基地2.0</tag>
      
      <tag>宝塔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[02:树莓派+u盘搭建家庭共享]</title>
    <link href="/2020/07/09/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B02%E6%A0%91%E8%8E%93%E6%B4%BE+u%E7%9B%98%E6%90%AD%E5%BB%BA%E5%AE%B6%E5%BA%AD%E5%85%B1%E4%BA%AB%5D/"/>
    <url>/2020/07/09/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B02%E6%A0%91%E8%8E%93%E6%B4%BE+u%E7%9B%98%E6%90%AD%E5%BB%BA%E5%AE%B6%E5%BA%AD%E5%85%B1%E4%BA%AB%5D/</url>
    
    <content type="html"><![CDATA[<h4 id="1-硬盘挂载"><a href="#1-硬盘挂载" class="headerlink" title="1.硬盘挂载"></a>1.硬盘挂载</h4><h5 id="1-1-使用fdisk-l-查看硬盘的详细信息"><a href="#1-1-使用fdisk-l-查看硬盘的详细信息" class="headerlink" title="1.1 使用fdisk -l 查看硬盘的详细信息"></a>1.1 使用fdisk -l 查看硬盘的详细信息</h5><pre><code class="hljs shell">pi@raspbian:~$ sudo fdisk -lDisk /dev/ram0: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram1: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram2: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram3: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram4: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram5: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram6: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram7: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram8: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram9: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram10: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram11: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram12: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram13: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram14: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/ram15: 4 MiB, 4194304 bytes, 8192 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/mmcblk0: 29.9 GiB, 32105299968 bytes, 62705664 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: dosDisk identifier: 0x68339ddaDevice         Boot  Start      End  Sectors  Size Id Type/dev/mmcblk0p1 *      8192   524287   516096  252M  c W95 FAT32 (LBA)/dev/mmcblk0p2      524288 62705663 62181376 29.7G 83 LinuxDisk /dev/sda: 30 GiB, 32212254720 bytes, 62914560 sectorsDisk model: U310Units: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: dosDisk identifier: 0xb64d29a8Device     Boot Start      End  Sectors Size Id Type/dev/sda1        8192 62914559 62906368  30G  7 HPFS/NTFS/exFAT</code></pre><h5 id="1-2-挂载到指定位置"><a href="#1-2-挂载到指定位置" class="headerlink" title="1.2 挂载到指定位置"></a>1.2 挂载到指定位置</h5><pre><code class="hljs shell">pi@raspbian:~$ mkdir sharepi@raspbian:~$ lssharepi@raspbian:~$ sudo mount /dev/sda1 share</code></pre><h5 id="1-3-查看挂载情况"><a href="#1-3-查看挂载情况" class="headerlink" title="1.3 查看挂载情况"></a>1.3 查看挂载情况</h5><pre><code class="hljs shell">df -h</code></pre><pre><code class="hljs shell">pi@raspbian:~$ df -hFilesystem      Size  Used Avail Use% Mounted on/dev/root        30G  4.2G   24G  15% /devtmpfs        918M     0  918M   0% /devtmpfs           950M     0  950M   0% /dev/shmtmpfs           950M  8.9M  941M   1% /runtmpfs           5.0M     0  5.0M   0% /run/locktmpfs           950M     0  950M   0% /sys/fs/cgroup/dev/mmcblk0p1  252M   71M  181M  29% /boottmpfs           190M     0  190M   0% /run/user/1000/dev/sda1        30G   19G  9.9G  65% /home/pi/share</code></pre><p class="note note-primary">  取消挂载 : sudo umount /dev/sda1</p><h5 id="1-4-解决硬盘的自动挂载"><a href="#1-4-解决硬盘的自动挂载" class="headerlink" title="1.4 解决硬盘的自动挂载"></a>1.4 解决硬盘的自动挂载</h5><p>每次树莓派重启或者硬盘插拔都需要对硬盘进行重新挂载，比较麻烦，因此需要自动挂载。这里要修改/etc/fstab文件。</p><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201121203001.png" alt=""></p><p>可以看到，fstab文件其实就是一个表格，表格各列的含意如下：<br>第一列：磁盘分区名/卷标，一般是/dev/sdaN（N表示正整数）<br>第二列：挂载点，我们在这里把/dev/sda1挂到/samba上。<br>第三列：缺省设置，一般用defautls。<br>第四列：是否备份：0——表示不做 dump 备份；1——表示要将整个 fie sysytem 里的内容备份；2 也表示要做 dump 备份，但该分区的重要性比 1 小。<br>第五列：检测顺序：0——不进行检测；根分区（/），必须填写 1，其它的都不能填写 1。如果有分区填写大于 1 的话，则在检查完根分区后，从小到大依次检查下去。<br>具体填写方法在图中已注明。</p><h4 id="2-df-h查看盘符挂载情况"><a href="#2-df-h查看盘符挂载情况" class="headerlink" title="2.df -h查看盘符挂载情况"></a>2.df -h查看盘符挂载情况</h4><pre><code class="hljs shell">pi@raspbian:~$ df -hFilesystem      Size  Used Avail Use% Mounted onudev            788M     0  788M   0% /devtmpfs           185M   12M  173M   7% /run/dev/mmcblk0p2   30G  8.8G   20G  32% /tmpfs           925M     0  925M   0% /dev/shmtmpfs           5.0M  4.0K  5.0M   1% /run/locktmpfs           925M     0  925M   0% /sys/fs/cgroup/dev/mmcblk0p1  252M   89M  163M  36% /boottmpfs           185M   16K  185M   1% /run/user/1000/dev/sda        500G   28G  473G   6% /media/pi/AE57-581F</code></pre><h4 id="3-已知盘符已自动挂载在-home-pi-share文件夹下"><a href="#3-已知盘符已自动挂载在-home-pi-share文件夹下" class="headerlink" title="3.已知盘符已自动挂载在/home/pi/share文件夹下"></a>3.已知盘符已自动挂载在/home/pi/share文件夹下</h4><h4 id="4-安装samba"><a href="#4-安装samba" class="headerlink" title="4.安装samba"></a>4.安装samba</h4><p><span class="label label-primary">更新一下源 ：sudo apt-get update</span></p><p><span class="label label-primary">安装samba : sudo apt-get install samba samba-common-bin</span></p><h4 id="5-安装完成后，配置-etc-samba-smb-conf文件"><a href="#5-安装完成后，配置-etc-samba-smb-conf文件" class="headerlink" title="5.安装完成后，配置/etc/samba/smb.conf文件"></a>5.安装完成后，配置/etc/samba/smb.conf文件</h4><pre><code class="hljs shell">sudo vim /etc/samba/smb.conf</code></pre><p>&lt;span class=label label-primary”&gt;在其最后添加以下命令：&lt;/span&gt;</p><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">共享文件的名称，将在网络上以此名称显示</span>path = /home/pi/share #共享文件的路径valid users = root pi #允许访问的用户，这里我用的是root 和 pi 两个用户browseable = yes  #允许浏览public = yes  #共享开放writable = yes  #可写</code></pre><h4 id="6-保存后，重启samba服务"><a href="#6-保存后，重启samba服务" class="headerlink" title="6.保存后，重启samba服务"></a>6.保存后，重启samba服务</h4><pre><code class="hljs shell">sudo /usr/sbin/samba restart</code></pre><p>(可通过 whereis samba 寻找 samba 所在位置)</p><h4 id="7-最后使用root用户添加共享用户："><a href="#7-最后使用root用户添加共享用户：" class="headerlink" title="7.最后使用root用户添加共享用户："></a>7.最后使用root用户添加共享用户：</h4><p>smbpasswd –a pi #这里我用的pi。</p><pre><code class="hljs shell">pi@raspbian:~$ sudo suroot@raspbian:/home/pi# smbpasswd -a piNew SMB password:Retype new SMB password:Added user pi</code></pre><h4 id="8-ok-完成"><a href="#8-ok-完成" class="headerlink" title="8.ok 完成"></a>8.ok 完成</h4><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201121203707.png" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://gitee.com/openfans-community/Debian-Pi-Aarch64/">Debian-Pi-Aarch64 ★ 全新树莓派64位系统2.0正式版 - 说明文档</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://raspberrypi.club/">树莓派俱乐部</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://shumeipai.nxez.com/">树莓派实验</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>基地2.0</tag>
      
      <tag>samba</tag>
      
      <tag>家庭共享，U盘，挂载</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>玩转树莓派[01:装系统]</title>
    <link href="/2020/07/08/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B01%E8%A3%85%E7%B3%BB%E7%BB%9F%5D/"/>
    <url>/2020/07/08/%E7%8E%A9%E8%BD%AC%E6%A0%91%E8%8E%93%E6%B4%BE%5B01%E8%A3%85%E7%B3%BB%E7%BB%9F%5D/</url>
    
    <content type="html"><![CDATA[<h3 id="一-格式化以及烤录系统"><a href="#一-格式化以及烤录系统" class="headerlink" title="一.格式化以及烤录系统"></a>一.格式化以及烤录系统</h3><p class="note note-primary">  镜像选择：树莓派爱好者基地  2020-06-17-OPENFANS-Debian-Buster-Desktop-Aarch64-ext4-v2019-2.0-U3-Release.img.xz</p><h5 id="1-1格式化储存卡"><a href="#1-1格式化储存卡" class="headerlink" title="1.1格式化储存卡"></a>1.1格式化储存卡</h5><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201121201303.png"  border="0" /></p><h5 id="1-2烤录镜像"><a href="#1-2烤录镜像" class="headerlink" title="1.2烤录镜像"></a>1.2烤录镜像</h5><p><img src="https://gitee.com/bai_xiao_fei/picture/raw/master/PicGo/20201121201352.png"  border="0" /></p><h3 id="二-查看官方文档"><a href="#二-查看官方文档" class="headerlink" title="二.查看官方文档"></a>二.查看官方文档</h3><p><a class="wp-editor-md-post-content-link" href="https://gitee.com/openfans-community/Debian-Pi-Aarch64">https://gitee.com/openfans-community/Debian-Pi-Aarch64/</a></p><h4 id="2-1服务开关："><a href="#2-1服务开关：" class="headerlink" title="2.1服务开关："></a>2.1服务开关：</h4><h5 id="2-1-1-Docker容器"><a href="#2-1-1-Docker容器" class="headerlink" title="2.1.1 Docker容器"></a>2.1.1 Docker容器</h5><p><span class="label label-primary"><br>  手动开启：systemctl start docker.service<br>  手动停止：systemctl stop docker.service<br>  启用开机启动：systemctl enable docker.service<br>  禁用开机启动：systemctl disable docker.service</span></p><h5 id="2-1-2-CecOS-CaaS容器云（服务端口：8443）"><a href="#2-1-2-CecOS-CaaS容器云（服务端口：8443）" class="headerlink" title="2.1.2 CecOS CaaS容器云（服务端口：8443）"></a>2.1.2 CecOS CaaS容器云（服务端口：8443）</h5><p><span class="label label-primary"><br>  手动开启：systemctl start cecos-caas.service<br>  手动停止：systemctl stop cecos-caas.service<br>  启用开机启动：systemctl enable cecos-caas.service<br>  禁用开机启动：systemctl disable cecos-caas.service</span></p><h5 id="2-1-3-WebGUI管理平台（服务端口：9090"><a href="#2-1-3-WebGUI管理平台（服务端口：9090" class="headerlink" title="2.1.3 WebGUI管理平台（服务端口：9090)"></a>2.1.3 WebGUI管理平台（服务端口：9090)</h5><p><span class="label label-primary"><br>  手动开启：systemctl start cockpit.socket<br>  手动停止：systemctl stop cockpit.socket<br>  启用开机启动：systemctl enable cockpit.socket<br>  禁用开机启动：systemctl disable cockpit.socket</span></p><h5 id="2-1-4-Web-SSH客户端（服务端口：4200）"><a href="#2-1-4-Web-SSH客户端（服务端口：4200）" class="headerlink" title="2.1.4 Web SSH客户端（服务端口：4200）"></a>2.1.4 Web SSH客户端（服务端口：4200）</h5><p><span class="label label-primary"><br>  手动开启：systemctl start shellinabox.service<br>  手动停止：systemctl stop shellinabox.service<br>  启用开机启动：systemctl enable shellinabox.service<br>  禁用开机启动：systemctl disable shellinabox.service</span></p><h5 id="2-1-5-默认的VNC访问密码为-raspberry"><a href="#2-1-5-默认的VNC访问密码为-raspberry" class="headerlink" title="2.1.5 默认的VNC访问密码为: raspberry"></a>2.1.5 默认的VNC访问密码为: raspberry</h5><p><span class="label label-primary"><br>默认的WEB VNC访问地址为: <a href="http://你树莓派的IP地址:5901">http://你树莓派的IP地址:5901</a><br>默认的客户端访问地址为: 你树莓派的IP地址:5900</span></p><h4 id="2-2账户及密码"><a href="#2-2账户及密码" class="headerlink" title="2.2账户及密码"></a>2.2账户及密码</h4><p><span class="label label-primary"><br>  系统默认账户：pi ，默认密码：raspberry<br>  默认账户pi账户支持ssh登录，root账户密码请登陆后使用命令 “sudo passwd root” 执行设置，<br>  或使用命令 “sudo -i” 来切换到root用户。</span></p><h4 id="2-3Web登录接口说明"><a href="#2-3Web登录接口说明" class="headerlink" title="2.3Web登录接口说明"></a>2.3Web登录接口说明</h4><h5 id="2-3-1-Web可视化管理界面"><a href="#2-3-1-Web可视化管理界面" class="headerlink" title="2.3.1 Web可视化管理界面"></a>2.3.1 Web可视化管理界面</h5><p><span class="label label-primary"><br>登录地址 <a href="https://你树莓派的IP地址:9090">https://你树莓派的IP地址:9090</a><br>说明：请使用系统默认账户pi登录</span></p><h5 id="2-3-2-WEB-SSH-客户端-入口界面"><a href="#2-3-2-WEB-SSH-客户端-入口界面" class="headerlink" title="2.3.2 WEB SSH 客户端 入口界面"></a>2.3.2 WEB SSH 客户端 入口界面</h5><p><span class="label label-primary"><br>登录地址 <a href="https://你树莓派的IP地址:4200">https://你树莓派的IP地址:4200</a><br>说明：使用具有控制台登录权限的帐户登录，例如：pi</span></p><h5 id="2-3-3-CecOS-CaaS-容器云管理平台-登录界面"><a href="#2-3-3-CecOS-CaaS-容器云管理平台-登录界面" class="headerlink" title="2.3.3 CecOS CaaS 容器云管理平台 登录界面"></a>2.3.3 CecOS CaaS 容器云管理平台 登录界面</h5><p><span class="label label-primary"><br>登录地址 <a href="https://你树莓派的IP地址:8443">https://你树莓派的IP地址:8443</a><br>说明：默认管理账户 admin , 默认密码：password 。请登录后立即修改默认密码！！</span></p><h4 id="2-4启用和运行Docker服务"><a href="#2-4启用和运行Docker服务" class="headerlink" title="2.4启用和运行Docker服务"></a>2.4启用和运行Docker服务</h4><p><span class="label label-primary"><br>  启用 Docker服务，需要手动启动。<br>  开机自动启动Docker服务<br>  systemctl enable docker.service<br>  启动Docker服务<br>  systemctl start docker.service<br>  停止Docker服务<br>  systemctl stop docker.service<br>  禁止Docker服务开机启动<br>  systemctl disable docker.service</span></p><h4 id="2-5启用CecOS-CaaS容器云"><a href="#2-5启用CecOS-CaaS容器云" class="headerlink" title="2.5启用CecOS-CaaS容器云"></a>2.5启用CecOS-CaaS容器云</h4><p><span class="label label-primary"><br>  默认没有启用 CecOS CaaS容器云 服务，需要手动启动。<br>  注意：要启用CecOS CaaS容器云服务，必须要先启用和启动docker服务！！<br>  开机自动启动 CecOS CaaS容器云 服务<br>  systemctl enable cecos-caas.service<br>  启动 CecOS CaaS容器云 服务<br>  systemctl start cecos-caas.service<br>  停止 CecOS CaaS容器云 服务<br>  systemctl stop cecos-caas.service<br>  禁止 CecOS CaaS容器云 服务开机启动<br>  systemctl disable cecos-caas.service</span></p><h4 id="2-6启用和退出Docker集群"><a href="#2-6启用和退出Docker集群" class="headerlink" title="2.6启用和退出Docker集群"></a>2.6启用和退出Docker集群</h4><p><span class="label label-primary"><br>  初始化并加入一个 Docker Swarm集群<br>  docker swarm init</p><h1 id="查看集群节点状态"><a href="#查看集群节点状态" class="headerlink" title="查看集群节点状态"></a>查看集群节点状态</h1><p>  docker node ls</p><h1 id="退出Docker-Swarm集群"><a href="#退出Docker-Swarm集群" class="headerlink" title="退出Docker Swarm集群"></a>退出Docker Swarm集群</h1><p>  docker swarm leave —force<br>&lt;/span&gt;</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://gitee.com/openfans-community/Debian-Pi-Aarch64/">Debian-Pi-Aarch64 ★ 全新树莓派64位系统2.0正式版 - 说明文档</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://raspberrypi.club/">树莓派俱乐部</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://shumeipai.nxez.com/">树莓派实验</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>raspberry</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry</tag>
      
      <tag>基地2.0</tag>
      
      <tag>系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试文档</title>
    <link href="/2019/11/11/%E6%B5%8B%E8%AF%95%E6%96%87%E6%A1%A3/"/>
    <url>/2019/11/11/%E6%B5%8B%E8%AF%95%E6%96%87%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<p>正文</p><p class="note note-primary">标签</p><pre><code class="hljs markdown"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-primary&quot;</span>&gt;</span></span>标签<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span></code></pre><p><span class="label label-primary">Label</span></p><pre><code class="hljs markdown"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;label label-primary&quot;</span>&gt;</span></span>Label<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span></code></pre>            <input type="checkbox" disabled checked="checked">text          <pre><code class="hljs markdown">&#123;% cb text, checked?, incline? %&#125;</code></pre><p><a class="btn" href="url" title="title">text</a></p><pre><code class="hljs markdown"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span></span>text<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span></code></pre><p>$\lim_{x \to \infty} \frac{1}{n(n+1)}$</p><p>$\Gamma$</p><pre><code class="hljs markdown">\lim<span class="hljs-emphasis">_&#123;x \to \infty&#125; \frac&#123;1&#125;&#123;n(n+1)&#125;</span></code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><pre><code class="hljs markdown">[<span class="hljs-symbol">^2</span>]: <span class="hljs-link">参考资料2</span></code></pre><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>参考资料1<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>参考资料2<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>Linux</category>
      
      <category>raspberry</category>
      
      <category>数学建模</category>
      
      <category>python</category>
      
      <category>docker</category>
      
      <category>git</category>
      
      <category>life</category>
      
      <category>杂谈</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
